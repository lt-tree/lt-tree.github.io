<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tree House</title>
  
  <subtitle>不如自挂东南枝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2022-02-20T15:15:28.950Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ltree98</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大地图探索，由Tiled出发</title>
    <link href="http://yoursite.com/2022/02/20/%E5%A4%A7%E5%9C%B0%E5%9B%BE%E6%8E%A2%E7%B4%A2%EF%BC%8C%E7%94%B1Tiled%E5%87%BA%E5%8F%91/"/>
    <id>http://yoursite.com/2022/02/20/%E5%A4%A7%E5%9C%B0%E5%9B%BE%E6%8E%A2%E7%B4%A2%EF%BC%8C%E7%94%B1Tiled%E5%87%BA%E5%8F%91/</id>
    <published>2022-02-20T15:06:16.000Z</published>
    <updated>2022-02-20T15:15:28.950Z</updated>
    
    <content type="html"><![CDATA[<p>大地图实现，由各部分对Tiled的支持开始。</p><a id="more"></a><p><br></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>项目中需要用到“大”地图玩法，来实现一些GVE、GVG玩法，根据游戏类型及玩法体量，选择最合适的TileMap来实现。<br>但眼光要不仅于此，由TileMap开始，向其他游戏类型的技术方案进行拓展了解。</p><p>通过本篇文章，可以了解：</p><ul><li>Tiled地图编辑器的介绍</li><li>其他大地图方案技术</li></ul><p><br></p><p><br></p><p><br></p><h1 id="Tiled"><a href="#Tiled" class="headerlink" title="Tiled"></a>Tiled</h1><p>Tiled是一个编辑2D游戏地图的编辑器，可以帮助开发游戏的内容。</p><p>优点</p><ul><li>可快速制作关卡地图，策划可视化编辑，降低配置成本</li><li>支持多种压缩格式，支持多层级设置，完全可作为关卡编辑器使用</li></ul><h2 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h2><p>可导出的格式</p><ul><li>[常用] TMX</li><li>CSV</li><li>GMX</li><li>JSON</li><li>JS</li><li>LUA</li></ul><p>压缩模式</p><ul><li>XML</li><li>CSV</li><li>BASE64<ul><li>无</li><li>GZIP</li><li>ZLIB</li><li>Z标准</li></ul></li></ul><p>支持类型</p><ul><li>直90°</li><li>斜45°</li><li>斜45°交错</li><li>六边形</li></ul><p><br><br><br></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>坐标系（OpenGL坐标系原点在左下角，需要转换）</p><ul><li>原点：左上角</li><li>单位：瓦片数量（非像素）</li><li>x轴方向：自左向右</li><li>y轴方向：自上向下</li></ul><p><img src=".\tilemap_90.jpg" alt=""><br><img src=".\tilemap_斜45.jpg" alt=""><br><img src=".\tilemap_45交错.jpg" alt=""><br><img src=".\tilemap_六边形.jpg" alt=""></p><p>瓦片锚点</p><ul><li>瓦片地图锚点默认为(0, 0)，每个瓦片锚点默认为(0, 0)，且可修改</li></ul><p>遮挡关系</p><ul><li>地图层之间，存在 ZOrder，ZOrder大的在上层</li><li>瓦片之间，渲染顺序为自左向右，自上向下</li></ul><p>各元素</p><ul><li>属性<ul><li>所有的属性都是key-value键值对形式存储；除了指定的属性外还有自定义属性可灵活配置</li><li>类型<ul><li>地图属性</li><li>图层属性</li><li>对象属性</li><li>自定义属性<ul><li>bool</li><li>color</li><li>float</li><li>int</li><li>string</li><li>file</li></ul></li></ul></li></ul></li><li>图层<ul><li>图块层<ul><li>规则图块拼接铺设</li><li>为了便于编辑，支持一些刷子工具<ul><li>填充工具<ul><li>图章刷<ul><li>选择1块或多块图块绘制，</li><li>按住shift可以绘制一条线段</li><li>按住ctrl+shift可以绘制一个椭圆</li></ul></li><li>地形刷<ul><li>提供角落地形过度的编辑方式</li><li>支持图章刷的shift和ctrl+shift规则</li></ul></li><li>王氏刷<ul><li>类似于地形刷，但可以编辑边和角</li></ul></li><li>填充<ul><li>将相邻的同图块全部替换成指定图块</li></ul></li><li>填充形状工具<ul><li>选择一块区域填充图块</li><li>按住shift可以填充正方形和圆形</li></ul></li></ul></li><li>选择工具（选择指定区域修改，不可修改其他区域）<ul><li>矩形选择<ul><li>自定义矩形区域</li></ul></li><li>魔术棒<ul><li>相连的同地块</li></ul></li><li>同地块选择<ul><li>地图内所有同地块</li></ul></li></ul></li></ul></li></ul></li><li>对象层<ul><li>自定义对象的放置，支持形状/图片</li></ul></li><li>图像层<ul><li>前景后景图的设置</li></ul></li><li>组<ul><li>管理</li></ul></li></ul></li><li>对象<ul><li>在对象层可以放置对象，支持矩形、圆形、三角形、图片等等方式</li><li>可以对对象进行旋转、放缩、翻转、修改大小等等</li><li>可以在对象添加自定义属性，方便进行与游戏内逻辑关联</li></ul></li><li>图块集<ul><li>图块集是绘制图块层与对象的图片来源<ul><li>对于图块层的图块集，指定宽高，来截取使用，还支持设置边界值</li><li>对于对象的图块集，每个图块都是自己一个完整的图片，方便整个绘制</li></ul></li><li>一个图块层只能绑定一张图块集</li></ul></li></ul><p><br><br><br><br><br></p><h2 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h2><h3 id="Cocos2d"><a href="#Cocos2d" class="headerlink" title="Cocos2d"></a>Cocos2d</h3><p>Cocos2d引擎对TileMap的支持</p><p><img src=".\TMXTiledMap.png" alt=""></p><p>主要文件：</p><ul><li>CCTMXTiledMap.h &amp; CCTMXTiledMap.cpp<ul><li>主类，解析并绘制TileMap</li></ul></li><li>CCTMXLayer.h &amp; CCTMXLayer.cpp<ul><li>TileMap图块层结构</li></ul></li><li>CCTMXObjectGroup.h &amp; CCTMXObjectGroup.cpp<ul><li>TileMap对象层结构</li></ul></li><li>CCTMXXMLParser.h &amp; CCTMXXMLParser.cpp<ul><li>解析TileMap的工具类</li></ul></li><li>CCFastTMXTiledMap.h &amp; CCFastTMXTiledMap.cpp<ul><li>v3.2新增方法，对应CCTMXTiledMap</li></ul></li><li>CCFastTMXLayer.h &amp; CCFastTMXLayer.cpp<ul><li>v3.2新增方法，对应CCTMXLayer</li></ul></li></ul><p>引擎通过CCTMXXMLParser的相关方法解析地图，创建 TMXTiledMap 对象，该对象子节点都是 TMXLayer对象，对应TileMap的图块层，包含 TMXObjectGroup 对象数组，对应TileMap的对象层。<br>所创建出的地图，仅仅包含图块层的初始化与应用，并不会将对象创建出来，只是解析了数据进行存储。（使用图片对象，并不会在地图中创建出对象，依旧需要自己来获取对象层数据，进行创建）</p><p>创建流程</p><ol><li>【外部调用】通过 TMXTiledMap:create / TMXTiledMap:createWithXML 方法，使用TMX格式或XML格式文件创建地图对象</li><li>【解析】通过SAXParser解析地图文件，生成TMXMapInfo对象<ul><li>这一步是将地图数据解析成自己的数据结构</li><li>类型<ul><li>TMXTilesetInfo，图块集数据结构</li><li>TMXLayerInfo，图块层数据结构</li><li>TMXMapInfo，地图数据结构</li></ul></li></ul></li><li>【构建】通过解析的数据结构，构建地图对象<ul><li>这一步是根据数据创建具体对象，包含加载图集，创建每个图片等</li><li>类型<ul><li>简单的地图属性，直接赋值</li><li>对象层数据，直接赋值</li><li>图块层数据，需要配合图块集数据与地图数据，共同创建出TMXLayer对象（一个SpriteBatchNode对象）</li></ul></li></ul></li></ol><p>重要枚举<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 地图方向枚举</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    TMXOrientationOrtho,        <span class="comment">// 正常</span></span><br><span class="line">    TMXOrientationHex,          <span class="comment">// 六角交错</span></span><br><span class="line">    TMXOrientationIso,          <span class="comment">// 45度</span></span><br><span class="line">    TMXOrientationStaggered,    <span class="comment">// 等角交错</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 栅格轴方向（对于六边形，X-边朝上，Y-点朝上）</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    TMXStaggerAxis_X,           <span class="comment">// X</span></span><br><span class="line">    TMXStaggerAxis_Y,           <span class="comment">// Y</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 栅格类型</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    TMXStaggerIndex_Odd,        <span class="comment">// 奇数</span></span><br><span class="line">    TMXStaggerIndex_Even,       <span class="comment">// 偶数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="TMXTiledMap系列"><a href="#TMXTiledMap系列" class="headerlink" title="TMXTiledMap系列"></a>TMXTiledMap系列</h4><p>TMXTiledMap负责解析并绘制TMX地图。</p><ul><li>每个图块层都被解析并创建为TMXLayer对象（一个SpriteBatchNode子类，若层被设置为不可见则不会被解析创建），可以在运行期间通过层名或层级（从0开始）获取TMXLayer对象。</li><li>每个对象层都被解析并创建为TMXObjectGroup对象，可以在运行期间通过层名来获取TMXObjectGroup对象。</li><li>每个属性都被存储为key-value键值对，每个对象都提供获取属性的方法。</li></ul><p>限制</p><ul><li>每个图块层只支持一个图块集</li><li>不支持嵌入式图片</li><li>仅支持XML格式（不支持JSON格式）</li></ul><p>TMXLayer代表TileMap的图块层对象</p><ul><li>是SpriteBatchNode子类，默认情况下使用TextureAtlas渲染图块</li><li>如果在运行时修改图块，该图块会成为一个Sprite，否则不会创建Sprite对象<ul><li>创建的Sprite可以支持旋转、放缩、移动等API</li></ul></li><li>通过设置图块层不同属性来启用不同特性<ul><li>cc_vertexz，OpenGL深度测试</li><li>cc_alpha_func，OpenGL透明度测试</li></ul></li></ul><p><br></p><h4 id="FastTMXTiledMap系列"><a href="#FastTMXTiledMap系列" class="headerlink" title="FastTMXTiledMap系列"></a>FastTMXTiledMap系列</h4><p>大部分与TMXTiledMap差不多，主要区别在于FastTMXTiledMap系列的图块层对象并非继承自SpriteBatchNode，而是继承自Node；<br>老版TMXTiledMap借助于SpriteBatchNode对同图集图片合批做绘制优化处理，新版FastTMXTiledMap重写绘制方法，使用PrimitiveCommand渲染指令，在绘制时根据相机可见性，规划矩形区域，只对矩形区域内的顶点进行批量上传，从而节省了绘制的顶点数。<br>性能上，Draw Call是一样的，但是FastTMXTiledMap GL Verts（顶点数）更少，绘制效率更高。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> TMXLayer::draw(Renderer *renderer, <span class="keyword">const</span> Mat4&amp; transform, <span class="keyword">uint32_t</span> flags)</span><br><span class="line">&#123;</span><br><span class="line">    updateTotalQuads();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> isViewProjectionUpdated = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">auto</span> visitingCamera = Camera::getVisitingCamera();</span><br><span class="line">    <span class="keyword">auto</span> defaultCamera = Camera::getDefaultCamera();</span><br><span class="line">    <span class="keyword">if</span> (visitingCamera == defaultCamera) &#123;</span><br><span class="line">        isViewProjectionUpdated = visitingCamera-&gt;isViewProjectionUpdated();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( flags != <span class="number">0</span> || _dirty || _quadsDirty || isViewProjectionUpdated)</span><br><span class="line">    &#123;</span><br><span class="line">        Size s = Director::getInstance()-&gt;getVisibleSize();</span><br><span class="line">        <span class="keyword">auto</span> rect = Rect(Camera::getVisitingCamera()-&gt;getPositionX(),</span><br><span class="line">                     Camera::getVisitingCamera()-&gt;getPositionY(),</span><br><span class="line">                     s.width,</span><br><span class="line">                     s.height);</span><br><span class="line">        </span><br><span class="line">        Mat4 inv = transform;</span><br><span class="line">        inv.inverse();</span><br><span class="line">        rect = RectApplyTransform(rect, inv);</span><br><span class="line">        </span><br><span class="line">        updateTiles(rect);</span><br><span class="line">        updateIndexBuffer();</span><br><span class="line">        updatePrimitives();</span><br><span class="line">        _dirty = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(_renderCommands.size() &lt; <span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt;(_primitives.size()))</span><br><span class="line">    &#123;</span><br><span class="line">        _renderCommands.resize(_primitives.size());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span>&amp; iter : _primitives)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(iter.second-&gt;getCount() &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span>&amp; cmd = _renderCommands[index++];</span><br><span class="line">            cmd.init(iter.first, _texture-&gt;getName(), getGLProgramState(), BlendFunc::NORMAL, iter.second, _modelViewTransform, flags);</span><br><span class="line">            renderer-&gt;addCommand(&amp;cmd, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，在项目使用中，如果将地图挂载到3D相机上，会有裁剪问题，暂时未解决。</p><p><br></p><p><br></p><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>通过Tiled编辑器，可以导出TMX格式文件或XML文件，引擎直接对它解析。</p><p>但依旧有一些不足</p><ul><li>并非会解析所有字段<ul><li>比如，对象旋转后的属性是无法解析出来的</li></ul></li><li>对对象层数据只解析不处理</li></ul><p>在实际使用时，为了性能优化与业务需求，在导出TMX文件，又通过python脚本，进行二次加工。</p><p>通过python脚本，主要处理：</p><ul><li>修改GID，所用到的图片都放在一个图集中，然后修改映射关系</li><li>计算对象在引擎显示的屏幕坐标（空间换时间，这样就不需要在使用时计算了）</li><li>属性转移<ul><li>有些属性 旋转、翻转 等，不会被引擎解析</li><li>将这些属性转为自定义属性，便于解析</li></ul></li></ul><p>还有一些想法，还未实施</p><ul><li>分离图块层与对象层<ul><li>原因：<ul><li>Tiled编辑器，可以导出lua格式文件</li><li>cocos2d引擎解析对象层数据，但不绘制，浪费解析性能</li></ul></li><li>方案：<ul><li>Tiled编辑器导出tmx文件，只包含图块层，给引擎解析与绘制</li><li>Tiled编辑器导出lua文件，只包含对象层，给业务代码解析与绘制</li></ul></li></ul></li></ul><p><br></p><p><br> </p><h3 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h3><p>之前Unity不支持使用Tiled，通过插件来支持</p><ul><li><a href="seanba.com/tiled2unity">Tiled2Unity</a></li><li><a href="https://seanba.com/supertiled2unity.html" target="_blank" rel="noopener">SuperTiled2Unity</a></li></ul><p>后来，Unity官方支持了 <a href="https://docs.unity3d.com/cn/2020.3/Manual/class-Tilemap.html" target="_blank" rel="noopener">瓦片地图</a> 相关功能</p><ol><li>Unity 2017.2 版中添加了瓦片地图</li><li>Unity 2018.2 中添加了六边形瓦片地图 (Hexagonal Tilemap) 功能</li><li>Unity 2018.3 中添加了等距瓦片地图 (Isometric Tilemap) 功能</li><li>Unity 2020.1 2D Tilemap Editor 不再随 Editor 安装过程一起安装，而是必须从 Package Manager 下载</li></ol><p>推荐教程：<br><a href="https://edu.csdn.net/course/detail/18616" target="_blank" rel="noopener">Unity Tilemap模块全攻略</a></p><p><br></p><p><br></p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>默认文件是tmx格式，tmx实际上就是xml格式文件，可以当成xml进行解析。</p><p>标签类型</p><ul><li>map，存储tilemap的主要信息，朝向、宽高、格子数及大小等</li><li>tileset，存储tilemap的图片资源信息，图片资源ID(GID)的映射关系</li><li>layer，图块层<ul><li>data，图块层内图块位置及GID对应信息，可以被压缩</li></ul></li><li>objectgroup，对象层<ul><li>ojbect，每个对象的属性信息键值对</li></ul></li><li>imagelayer，图像层</li></ul><p>TMX样例<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">version</span>=<span class="string">"1.2"</span> <span class="attr">tiledversion</span>=<span class="string">"1.3.3"</span> <span class="attr">orientation</span>=<span class="string">"hexagonal"</span> <span class="attr">renderorder</span>=<span class="string">"right-down"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"20"</span> <span class="attr">tilewidth</span>=<span class="string">"92"</span> <span class="attr">tileheight</span>=<span class="string">"75"</span> <span class="attr">infinite</span>=<span class="string">"0"</span> <span class="attr">hexsidelength</span>=<span class="string">"46"</span> <span class="attr">staggeraxis</span>=<span class="string">"x"</span> <span class="attr">staggerindex</span>=<span class="string">"odd"</span> <span class="attr">nextlayerid</span>=<span class="string">"6"</span> <span class="attr">nextobjectid</span>=<span class="string">"12"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tileset</span> <span class="attr">firstgid</span>=<span class="string">"1"</span> <span class="attr">name</span>=<span class="string">"tile1"</span> <span class="attr">tilewidth</span>=<span class="string">"92"</span> <span class="attr">tileheight</span>=<span class="string">"75"</span> <span class="attr">tilecount</span>=<span class="string">"1"</span> <span class="attr">columns</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/tile1.png"</span> <span class="attr">width</span>=<span class="string">"92"</span> <span class="attr">height</span>=<span class="string">"75"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tileset</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tileset</span> <span class="attr">firstgid</span>=<span class="string">"2"</span> <span class="attr">name</span>=<span class="string">"daying"</span> <span class="attr">tilewidth</span>=<span class="string">"173"</span> <span class="attr">tileheight</span>=<span class="string">"114"</span> <span class="attr">tilecount</span>=<span class="string">"1"</span> <span class="attr">columns</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/daying.png"</span> <span class="attr">width</span>=<span class="string">"173"</span> <span class="attr">height</span>=<span class="string">"114"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tileset</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tileset</span> <span class="attr">firstgid</span>=<span class="string">"3"</span> <span class="attr">name</span>=<span class="string">"jianta2"</span> <span class="attr">tilewidth</span>=<span class="string">"81"</span> <span class="attr">tileheight</span>=<span class="string">"156"</span> <span class="attr">tilecount</span>=<span class="string">"1"</span> <span class="attr">columns</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/jianta2.png"</span> <span class="attr">width</span>=<span class="string">"81"</span> <span class="attr">height</span>=<span class="string">"156"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tileset</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">imagelayer</span> <span class="attr">id</span>=<span class="string">"3"</span> <span class="attr">name</span>=<span class="string">"图像图层 1"</span> <span class="attr">offsetx</span>=<span class="string">"-500"</span> <span class="attr">offsety</span>=<span class="string">"-250"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/stratagem_img_bg.jpg"</span> <span class="attr">width</span>=<span class="string">"2048"</span> <span class="attr">height</span>=<span class="string">"2048"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">imagelayer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">imagelayer</span> <span class="attr">id</span>=<span class="string">"5"</span> <span class="attr">name</span>=<span class="string">"图像图层 2"</span> <span class="attr">offsetx</span>=<span class="string">"1548"</span> <span class="attr">offsety</span>=<span class="string">"-250"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/stratagem_img_bg.jpg"</span> <span class="attr">width</span>=<span class="string">"2048"</span> <span class="attr">height</span>=<span class="string">"2048"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">imagelayer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">layer</span> <span class="attr">id</span>=<span class="string">"1"</span> <span class="attr">name</span>=<span class="string">"base_layer"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"20"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span> <span class="attr">encoding</span>=<span class="string">"base64"</span> <span class="attr">compression</span>=<span class="string">"zlib"</span>&gt;</span></span><br><span class="line">   eJztw0ENAAAMA6Grf9NzsRckrJqqqurDA5vdAyE=</span><br><span class="line">  <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">layer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">objectgroup</span> <span class="attr">id</span>=<span class="string">"2"</span> <span class="attr">name</span>=<span class="string">"object_bottom_1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">object</span> <span class="attr">id</span>=<span class="string">"4"</span> <span class="attr">gid</span>=<span class="string">"3"</span> <span class="attr">x</span>=<span class="string">"733.333"</span> <span class="attr">y</span>=<span class="string">"508"</span> <span class="attr">width</span>=<span class="string">"81"</span> <span class="attr">height</span>=<span class="string">"156"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"png"</span> <span class="attr">value</span>=<span class="string">"jianta2"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">object</span> <span class="attr">id</span>=<span class="string">"7"</span> <span class="attr">gid</span>=<span class="string">"2"</span> <span class="attr">x</span>=<span class="string">"1004"</span> <span class="attr">y</span>=<span class="string">"609"</span> <span class="attr">width</span>=<span class="string">"173"</span> <span class="attr">height</span>=<span class="string">"114"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">object</span> <span class="attr">id</span>=<span class="string">"11"</span> <span class="attr">gid</span>=<span class="string">"3"</span> <span class="attr">x</span>=<span class="string">"1318"</span> <span class="attr">y</span>=<span class="string">"534"</span> <span class="attr">width</span>=<span class="string">"81"</span> <span class="attr">height</span>=<span class="string">"156"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">objectgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Tiled编辑器也支持导出为json格式，方便服务器解析。<br>标签同xml的差不多，也就格式上会有些变化。</p><p>JSON样例<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"compressionlevel"</span>:<span class="number">-1</span>,</span><br><span class="line"> <span class="attr">"height"</span>:<span class="number">20</span>,</span><br><span class="line"> <span class="attr">"hexsidelength"</span>:<span class="number">46</span>,</span><br><span class="line"> <span class="attr">"infinite"</span>:<span class="literal">false</span>,</span><br><span class="line"> <span class="attr">"layers"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">3</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/stratagem_img_bg.jpg"</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"\u56fe\u50cf\u56fe\u5c42 1"</span>,</span><br><span class="line">         <span class="attr">"offsetx"</span>:<span class="number">-500</span>,</span><br><span class="line">         <span class="attr">"offsety"</span>:<span class="number">-250</span>,</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"imagelayer"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">5</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/stratagem_img_bg.jpg"</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"\u56fe\u50cf\u56fe\u5c42 2"</span>,</span><br><span class="line">         <span class="attr">"offsetx"</span>:<span class="number">1548</span>,</span><br><span class="line">         <span class="attr">"offsety"</span>:<span class="number">-250</span>,</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"imagelayer"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"compression"</span>:<span class="string">"zlib"</span>,</span><br><span class="line">         <span class="attr">"data"</span>:<span class="string">"eJztw0ENAAAMA6Grf9NzsRckrJqqqurDA5vdAyE="</span>,</span><br><span class="line">         <span class="attr">"encoding"</span>:<span class="string">"base64"</span>,</span><br><span class="line">         <span class="attr">"height"</span>:<span class="number">20</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"base_layer"</span>,</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"tilelayer"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"width"</span>:<span class="number">40</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"draworder"</span>:<span class="string">"topdown"</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">2</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"object_bottom_1"</span>,</span><br><span class="line">         <span class="attr">"objects"</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                 <span class="attr">"gid"</span>:<span class="number">3</span>,</span><br><span class="line">                 <span class="attr">"height"</span>:<span class="number">156</span>,</span><br><span class="line">                 <span class="attr">"id"</span>:<span class="number">4</span>,</span><br><span class="line">                 <span class="attr">"name"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"properties"</span>:[</span><br><span class="line">                        &#123;</span><br><span class="line">                         <span class="attr">"name"</span>:<span class="string">"png"</span>,</span><br><span class="line">                         <span class="attr">"type"</span>:<span class="string">"string"</span>,</span><br><span class="line">                         <span class="attr">"value"</span>:<span class="string">"jianta2"</span></span><br><span class="line">                        &#125;],</span><br><span class="line">                 <span class="attr">"rotation"</span>:<span class="number">0</span>,</span><br><span class="line">                 <span class="attr">"type"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">                 <span class="attr">"width"</span>:<span class="number">81</span>,</span><br><span class="line">                 <span class="attr">"x"</span>:<span class="number">733.333</span>,</span><br><span class="line">                 <span class="attr">"y"</span>:<span class="number">508</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                 <span class="attr">"gid"</span>:<span class="number">2</span>,</span><br><span class="line">                 <span class="attr">"height"</span>:<span class="number">114</span>,</span><br><span class="line">                 <span class="attr">"id"</span>:<span class="number">7</span>,</span><br><span class="line">                 <span class="attr">"name"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"rotation"</span>:<span class="number">0</span>,</span><br><span class="line">                 <span class="attr">"type"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">                 <span class="attr">"width"</span>:<span class="number">173</span>,</span><br><span class="line">                 <span class="attr">"x"</span>:<span class="number">1004</span>,</span><br><span class="line">                 <span class="attr">"y"</span>:<span class="number">609</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                 <span class="attr">"gid"</span>:<span class="number">3</span>,</span><br><span class="line">                 <span class="attr">"height"</span>:<span class="number">156</span>,</span><br><span class="line">                 <span class="attr">"id"</span>:<span class="number">11</span>,</span><br><span class="line">                 <span class="attr">"name"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"rotation"</span>:<span class="number">0</span>,</span><br><span class="line">                 <span class="attr">"type"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">                 <span class="attr">"width"</span>:<span class="number">81</span>,</span><br><span class="line">                 <span class="attr">"x"</span>:<span class="number">1318</span>,</span><br><span class="line">                 <span class="attr">"y"</span>:<span class="number">534</span></span><br><span class="line">                &#125;],</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"objectgroup"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;],</span><br><span class="line"> <span class="attr">"nextlayerid"</span>:<span class="number">6</span>,</span><br><span class="line"> <span class="attr">"nextobjectid"</span>:<span class="number">12</span>,</span><br><span class="line"> <span class="attr">"orientation"</span>:<span class="string">"hexagonal"</span>,</span><br><span class="line"> <span class="attr">"renderorder"</span>:<span class="string">"right-down"</span>,</span><br><span class="line"> <span class="attr">"staggeraxis"</span>:<span class="string">"x"</span>,</span><br><span class="line"> <span class="attr">"staggerindex"</span>:<span class="string">"odd"</span>,</span><br><span class="line"> <span class="attr">"tiledversion"</span>:<span class="string">"1.3.3"</span>,</span><br><span class="line"> <span class="attr">"tileheight"</span>:<span class="number">75</span>,</span><br><span class="line"> <span class="attr">"tilesets"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"columns"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"firstgid"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/tile1.png"</span>,</span><br><span class="line">         <span class="attr">"imageheight"</span>:<span class="number">75</span>,</span><br><span class="line">         <span class="attr">"imagewidth"</span>:<span class="number">92</span>,</span><br><span class="line">         <span class="attr">"margin"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"tile1"</span>,</span><br><span class="line">         <span class="attr">"spacing"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"tilecount"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"tileheight"</span>:<span class="number">75</span>,</span><br><span class="line">         <span class="attr">"tilewidth"</span>:<span class="number">92</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"columns"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"firstgid"</span>:<span class="number">2</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/daying.png"</span>,</span><br><span class="line">         <span class="attr">"imageheight"</span>:<span class="number">114</span>,</span><br><span class="line">         <span class="attr">"imagewidth"</span>:<span class="number">173</span>,</span><br><span class="line">         <span class="attr">"margin"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"daying"</span>,</span><br><span class="line">         <span class="attr">"spacing"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"tilecount"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"tileheight"</span>:<span class="number">114</span>,</span><br><span class="line">         <span class="attr">"tilewidth"</span>:<span class="number">173</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"columns"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"firstgid"</span>:<span class="number">3</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/jianta2.png"</span>,</span><br><span class="line">         <span class="attr">"imageheight"</span>:<span class="number">156</span>,</span><br><span class="line">         <span class="attr">"imagewidth"</span>:<span class="number">81</span>,</span><br><span class="line">         <span class="attr">"margin"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"jianta2"</span>,</span><br><span class="line">         <span class="attr">"spacing"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"tilecount"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"tileheight"</span>:<span class="number">156</span>,</span><br><span class="line">         <span class="attr">"tilewidth"</span>:<span class="number">81</span></span><br><span class="line">        &#125;],</span><br><span class="line"> <span class="attr">"tilewidth"</span>:<span class="number">92</span>,</span><br><span class="line"> <span class="attr">"type"</span>:<span class="string">"map"</span>,</span><br><span class="line"> <span class="attr">"version"</span>:<span class="number">1.2</span>,</span><br><span class="line"> <span class="attr">"width"</span>:<span class="number">40</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><br></p><p><br></p><p><br></p><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="主流大地形渲染"><a href="#主流大地形渲染" class="headerlink" title="主流大地形渲染"></a>主流大地形渲染</h2><h3 id="TileMap"><a href="#TileMap" class="headerlink" title="TileMap"></a>TileMap</h3><p>利用一些小图片拼出一个大地图</p><p>优点</p><ul><li>结构简单，方便优化</li><li>加载整个TileMap，图片都在一个图集中，可以批量绘制，地图加载压力轻</li></ul><p>缺点</p><ul><li>只能满足特定视距下LOD的细节程度</li><li>重复感很强，不容易做大结构和氛围</li></ul><p>游戏</p><ul><li>率土之滨</li><li>文明6移动版</li></ul><p><br></p><h3 id="多层纹理混合"><a href="#多层纹理混合" class="headerlink" title="多层纹理混合"></a>多层纹理混合</h3><p>利用一张Mask图的多通道，控制多张贴图进行纹理混合</p><p><a href="https://zhuanlan.zhihu.com/p/26383778" target="_blank" rel="noopener">基于高度的纹理混合shader</a></p><p>优点</p><ul><li>制作简单，性能压力小</li></ul><p>缺点</p><ul><li>可混合的通道及贴图数有限，难以做出丰富的效果</li></ul><p>游戏</p><ul><li>万国觉醒</li></ul><p><br></p><h3 id="Virtual-Texture"><a href="#Virtual-Texture" class="headerlink" title="Virtual Texture"></a>Virtual Texture</h3><p>通过 Indirection Map，将贴图载入Physical Texture。</p><p><a href="https://zhuanlan.zhihu.com/p/138484024" target="_blank" rel="noopener">浅谈Virtual Texture</a></p><p>优点</p><ul><li>效果细节丰富</li><li>美术自由度高</li><li>内存和DrawCall可控</li></ul><p>缺点</p><ul><li>手机端效果不明确</li></ul><p>游戏</p><ul><li>一些端游</li><li>一些主机游戏</li></ul><p><br></p><h3 id="Texture-Array"><a href="#Texture-Array" class="headerlink" title="Texture Array"></a>Texture Array</h3><p>存储一个数组，每个元素是一张图</p><p>优点</p><ul><li>减少bind次数</li><li>适合层与层之间的颜色混合</li></ul><p>缺点</p><ul><li>严格要求尺寸、格式</li><li>OpenGL ES 3.0以上才支持</li></ul><p><br></p><p><br></p><h2 id="程序化工具选型"><a href="#程序化工具选型" class="headerlink" title="程序化工具选型"></a>程序化工具选型</h2><h3 id="Substance"><a href="#Substance" class="headerlink" title="Substance"></a>Substance</h3><p>程序化贴图常用工具<br>可在一定程度上满足贴图需求，但无法生成模型、数据表等资源，需要第三方工具</p><p><br></p><h3 id="Houdini"><a href="#Houdini" class="headerlink" title="Houdini"></a>Houdini</h3><p>行业程序化流程常用工具，移动游戏上 吃鸡类游戏、《原神》等都有所使用。</p><p>特点</p><ul><li>基于节点</li><li>非破坏式流程，快速迭代</li><li>操作属性，可将任意信息存储在几何中</li><li>定制化程度高，可以单靠编程完成整个流程</li><li>处理数据流，外部仅关心数据输入与输出</li></ul><p><br></p><p><br></p><h2 id="大地图技术"><a href="#大地图技术" class="headerlink" title="大地图技术"></a>大地图技术</h2><p>除了上面的渲染技术与工具，还有一些大地图数据处理上的一些技术。<br>比如：</p><ul><li>精度问题处理<ul><li>区域划分</li><li>节点中转</li><li>坐标转换</li></ul></li><li>LOD（level of detail）</li><li>Streaming</li><li>Caching</li><li>AOI（Area Of Interest）</li></ul><p>更详细内容，可跳转知乎：<a href="https://www.zhihu.com/question/26538198" target="_blank" rel="noopener">开放世界游戏中的大地图背后有哪些实现技术？</a></p><p><br></p><p><br></p><p><br></p><hr><p>参考资料：</p><ul><li><a href="doc.mapeditor.org/en/stable/">Tiled文档(English)</a></li><li><a href="https://discourse.mapeditor.org/" target="_blank" rel="noopener">Tiled论坛</a></li><li><a href="https://www.cnblogs.com/stratrail/p/5050703.html" target="_blank" rel="noopener">cocos2dx - tmx地图分层移动处理</a></li><li><a href="seanba.com/tiled2unity">Tiled2Unity</a></li><li><a href="https://seanba.com/supertiled2unity.html" target="_blank" rel="noopener">SuperTiled2Unity</a></li><li><a href="https://edu.csdn.net/course/detail/18616" target="_blank" rel="noopener">Unity Tilemap模块全攻略</a></li><li><a href="https://docs.unity3d.com/cn/2020.3/Manual/class-Tilemap.html" target="_blank" rel="noopener">瓦片地图</a></li><li><a href="https://blog.csdn.net/OnafioO/article/details/49151109" target="_blank" rel="noopener">像素填充率，纹理填充率，显存带宽</a></li><li><a href="https://zhuanlan.zhihu.com/p/26383778" target="_blank" rel="noopener">基于高度的纹理混合shader</a></li><li><a href="https://zhuanlan.zhihu.com/p/138484024" target="_blank" rel="noopener">浅谈Virtual Texture</a></li><li><a href="https://www.zhihu.com/question/26538198" target="_blank" rel="noopener">开放世界游戏中的大地图背后有哪些实现技术？</a></li><li><a href="https://mp.weixin.qq.com/s/miOnAB9wervyBGe7ep1MRQ" target="_blank" rel="noopener">天美F1引擎专家：如何利用PCG技术加速大世界地形生产？</a></li><li><a href="https://mp.weixin.qq.com/s/TxYzQksrQgsLZEprNIgumg" target="_blank" rel="noopener">揭秘《鸿图之下》的场景技术</a></li><li><a href="https://zhuanlan.zhihu.com/p/162892899" target="_blank" rel="noopener">技术分析 探讨大世界游戏的制作流程及技术——大场景制作技术概况篇</a></li></ul><p><br><br><br><br><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大地图实现，由各部分对Tiled的支持开始。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
      <category term="多实践" scheme="http://yoursite.com/tags/%E5%A4%9A%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="Cocos2d" scheme="http://yoursite.com/tags/Cocos2d/"/>
    
  </entry>
  
  <entry>
    <title>2021年结之多点开花</title>
    <link href="http://yoursite.com/2022/01/22/2021%E5%B9%B4%E7%BB%93%E4%B9%8B%E5%A4%9A%E7%82%B9%E5%BC%80%E8%8A%B1/"/>
    <id>http://yoursite.com/2022/01/22/2021%E5%B9%B4%E7%BB%93%E4%B9%8B%E5%A4%9A%E7%82%B9%E5%BC%80%E8%8A%B1/</id>
    <published>2022-01-22T01:44:35.000Z</published>
    <updated>2022-02-20T15:24:36.445Z</updated>
    
    <content type="html"><![CDATA[<p>多点开花</p><a id="more"></a><p><br></p><p>去年的年结比较仓促，主要是由于项目刚上线，还在繁忙期，没有太多的时间去整理。</p><p>今年项目进入平稳运行期，相对时间充裕些，待我娓娓道来。</p><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>从上半年开始，再度进行管理团队的职责。</p><p>由于不是第一次管理，也是从上次的管理经验，总结出一些心得，相对的轻车熟路一些。</p><p>主要分为两部分：</p><ul><li>保障功能开发稳步进行，保质保时高效交付功能</li><li>推进团队建设，让所有成员除功能开发外都有所成长</li></ul><p><br></p><h2 id="功能开发"><a href="#功能开发" class="headerlink" title="功能开发"></a>功能开发</h2><p>对于功能开发来说，之前有总结过一篇 <a href="http://www.lt-tree.com/2018/11/20/%E8%81%8A%E8%81%8A%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91/" target="_blank" rel="noopener">聊聊功能开发</a></p><p>但是，不同项目有不同情况，要针对性处理，但很多东西，其实只要各部门管理者都某些原则达成一致，剩下的事情，就很好推进了。尤其是现在项目组有PM的职位，分好责任义务即可。</p><p>我理想中的情况（目前视具体情况落地，但原则差不离）</p><ol><li><p>【策划】提前N个月，制定接下来功能任务</p><ul><li>准备：无</li><li>任务：确定功能，开发目的，开发周期等</li><li>产出：功能具体责任人</li></ul></li><li><p>【策划】筹备策划需求案</p><ul><li>准备：无</li><li>任务：筹备策划案</li><li>产出：策划案</li></ul></li><li><p>【策划】内部讨论会</p><ul><li>准备：策划案</li><li>任务：讨论完备策划案</li><li>产出：策划案</li></ul></li><li><p>【策划】【UE】UE策划对接会</p><ul><li>准备：策划案</li><li>任务：根据策划案，确定UE图，继续完备策划案</li><li>产出：UE图</li></ul></li><li><p>【策划】【前端】【后端】【美术】【测试】策划需求会</p><ul><li>准备：策划案，功能模块分解，UE图</li><li>任务：宣讲功能，让各部门相关人员了解功能</li><li>产出：各个部门要交付内容时间点<ul><li>前端：提交验收时间</li><li>后端：联调时间</li><li>UI：交付切图时间</li><li>动效：交付动效时间</li><li>策划：提交测试时间</li></ul></li></ul></li><li><p>策划研发对表会【策划】【前端】【后端】</p><ul><li><p>准备：功能所需的大概表结构</p></li><li><p>任务：指定配表逻辑与格式</p></li><li>产出：功能表结构</li></ul></li><li><p>研发内部协议会【前端】【后端】</p><ul><li>准备：策划案、UE图</li><li>任务：根据系统，制定协议接口，基于接口编程</li><li>产出：协议结构，交付时间</li></ul></li><li><p>交付UI效果图【前端】【策划】【UE】</p></li><li><p>交付动效【前端】【策划】【UE】</p></li><li><p>提交策划验收【前端】【策划】【UE】</p></li><li><p>提交测试</p></li><li><p>功能上线</p></li></ol><p>主要原则就是</p><ul><li>各部门制定好时间与交付内容，并严格遵循，若有延期风险，提前预警</li><li>任何逻辑有改动，各部门（尤其研发与策划）一起讨论，禁止私下一对一协定</li></ul><p><br></p><p><br></p><h2 id="团队建设"><a href="#团队建设" class="headerlink" title="团队建设"></a>团队建设</h2><h3 id="战斗模块"><a href="#战斗模块" class="headerlink" title="战斗模块"></a>战斗模块</h3><p>我之前在团队主要负责战斗模块的维护，由于游戏模式的原因，上线后战斗模块的压力依旧不弱。</p><p>一是为了更好管理团队，二也是为了培养团队梯度建设，三是让更多人参与，对战斗模块内容进行剖析并交接给同事。</p><p>主要流程如下：</p><ol><li>剖析战斗架构，总结各部分职责<ul><li>战斗规范</li><li>战斗框架概览</li><li>战斗玩法扩展流程</li><li>战斗技能扩展流程</li><li>战斗单位扩展流程</li></ul></li><li>从实际业务入手，先能根据总结的文档上手实现功能</li><li>再详细点亮所有战斗技能树，对战斗框架有更深入理解</li><li>研发战斗周边工具，更高效实现策划需求</li></ol><p>为了不影响线上环境，进行CodeReview，每次更新前，对相关代码修改进行审查，做最后一道风险保障。</p><p>目前，我不再需要担心战斗模块的维护，战斗小组每个人都有主负责的方向，且每个人都可独立维护战斗模块，在对战斗框架的分析梳理过程中也积累了大量文档。</p><p><br></p><h3 id="全团队建设"><a href="#全团队建设" class="headerlink" title="全团队建设"></a>全团队建设</h3><p>团队成员除了解决日常功能开发问题，也想办法要给予大家额外学习的机会。</p><p>第一步，是像之前团队做的那样，找课题，进行分享会，让所有人都对团队内各自负责的内容及功能实现都有所了解。</p><p>第二步，进行砥砺前行专题，主要是列出目前团队目前想做的课题列表，然后各成员根据自己的兴趣，进行研究与探索，同时也分配指定导师进行辅助配合。目的是让大家的调研方向是有实际意义且可在项目中落地实践，并且有导师辅助，也可进行讨论。</p><p>第三步，进行钝学累功专题，进行共读会的实践，每天都抽30分钟，读技术书籍的一部分，每隔一段时间，对书中内容及延展内容进行讨论，将知识彻底掌握。</p><p>最后，除了专业方向上的推进，还进行了一些额外的分享，主要是开拓视野，格局要打开，比如：</p><ul><li><a href="http://www.lt-tree.com/2021/07/17/%E8%81%8A%E8%81%8A%E9%B8%BF%E8%92%99/" target="_blank" rel="noopener">聊聊鸿蒙</a></li><li><a href="http://www.lt-tree.com/2021/11/20/%E8%81%8A%E8%81%8ADOTS/" target="_blank" rel="noopener">聊聊DOTS</a></li><li><a href="http://www.lt-tree.com/2021/11/30/%E8%81%8A%E8%81%8A%E5%85%83%E5%AE%87%E5%AE%99/" target="_blank" rel="noopener">聊聊元宇宙</a></li><li>还有一些小课题的讨论，并未记录</li></ul><p><br></p><p><br></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h3><p>与上次不同，这次还包括面试相关的内容。包含社招与校招两部分，社招和校招所要考察的内容是很不一样的。</p><p>对于社招来说，主要是看项目组需求，是梯度建设，是开发功能，还是其他，不同的目的考察侧重点不一样。</p><p>虽然侧重点不同，但是也会对所有方向进行考核。</p><p>以我个人来讲，我主要会从下面几点进行分析（不分先后）</p><ul><li>沟通</li><li>三观</li><li>技术</li></ul><p>相对于各种试题的考核（当然也会出一些大概的），更看重对过去所做内容的表述。</p><p>对于校招生，主要是从五个维度</p><ul><li>基础力</li><li>沟通力</li><li>学习力</li><li>稳定度</li><li>成熟度</li></ul><p>最后，在面试的时候，相对于考核与被考核，更希望是一种讨论的氛围，对于过去所做内容的阐述，对于技术的探讨 等等。</p><p><br></p><h3 id="个人技术"><a href="#个人技术" class="headerlink" title="个人技术"></a>个人技术</h3><p>这一年，个人技术的成长相对有限一些，主要的精力在于如何迸发整个团队的力量。</p><p>但是，由于平时要对所有功能开发保驾护航，也做了很多调研与产出，相应的都有文档与分享进行。</p><p>再者，带领大家进行钝学累功、砥砺前行以及开拓眼界的时候，必然要进行更多的研究与探索，也相应得到了更丰富多维度的提升。</p><p>作为管理者，当然要有所牺牲部分个人技术提升的觉悟，当然这并不代表以此为借口而懈怠。</p><p>一个人走得快，一堆人走得远。</p><p><br></p><h3 id="荣誉"><a href="#荣誉" class="headerlink" title="荣誉"></a>荣誉</h3><p>这一年，付出了很多，当然也收获了很多。</p><p>在公司的1024技术手册上投稿了关于帧同步的内容，向公司提供了战斗模块的梳理文档 等</p><p>年中时，顺利晋升职级，</p><p>在去年获得年度 最佳新人后，在年末，再次获得了年度 优秀员工。</p><p>付出会有收获，但行好事，莫问前程。</p><p><img src="荣誉_1.jpg" alt=""></p><p><br></p><p><br></p><p><br></p><h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>今年，生活上也更丰富多彩了一些，毫无征兆的领证，领证后的蜜月旅行，公司的三亚团建 等等。</p><h2 id="领证"><a href="#领证" class="headerlink" title="领证"></a>领证</h2><p>很突然的，在5月17号左右，女朋友（现在是老婆了）说，5月21日，日子不错呀，我们回去领证吧。</p><p>然后，就来了场说领就领的旅程，自此，结束了11年的恋爱期，进入下一阶段。</p><p>但由于，疫情严重，长辈在韩国回不来，婚礼是没法这么快进行了…</p><p><img src="ai.jpg" alt=""></p><p><br></p><p><br></p><h2 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h2><p>在领完证后，项目相对稳定一些，疫情也相对得到了控制，就请了婚假，开始蜜月旅行。</p><p>在疫情前，我就想进行一次游轮旅行，没有WIFI，与世隔绝，在大海上遨游，如果是从迈阿密出发，路过北极圈的线路那就更刺激了。</p><p>海外游轮是不用想了，正好国内长江三峡游轮复航，价格也很优惠，马上预定，出发。</p><p>规划的路线是：</p><ul><li>北京 –(飞机)-&gt; 重庆 –(游轮)–&gt;宜昌–(高铁)–&gt;武汉–(飞机)–&gt;北京</li></ul><p><img src="旅游_1.jpg" alt=""></p><p><img src="旅游_2.jpg" alt=""></p><p><img src="旅游_3.jpg" alt=""></p><p><img src="旅游_7.jpg" alt=""></p><p><img src="旅游_4.jpg" alt=""></p><p><img src="旅游_8.jpg" alt=""></p><p><br></p><p><br></p><h2 id="团建"><a href="#团建" class="headerlink" title="团建"></a>团建</h2><p>在休完婚假（准确的来说，还没休完），正好赶上项目组去三亚团建，于是直接从武汉飞三亚参加团建。</p><p><img src="团建_3.jpg" alt=""></p><p><img src="团建_2.jpg" alt=""></p><p><img src="团建_4.jpg" alt=""></p><p><img src="团建_1.jpg" alt=""></p><p><img src="团建_5.jpg" alt=""></p><p><img src="团建_6.jpg" alt=""></p><p><img src="团建_7.jpg" alt=""></p><p><img src="团建_10.jpg" alt=""></p><p><br></p><p>年底，项目组又组织环球影城团建。</p><p><img src="团建_11.jpg" alt=""></p><p><img src="团建_12.jpg" alt=""></p><p><img src="团建_13.jpg" alt=""></p><p><img src="团建_14.jpg" alt=""></p><p><img src="团建_15.jpg" alt=""></p><p><br></p><p><br></p><h2 id="读书与学习"><a href="#读书与学习" class="headerlink" title="读书与学习"></a>读书与学习</h2><p>今年读的书</p><ul><li><p><a href="http://www.lt-tree.com/2021/10/31/%E3%80%8A%E4%B9%A1%E5%9C%9F%E4%B8%AD%E5%9B%BD%E3%80%8B%E8%AF%BB%E8%AE%B0/" target="_blank" rel="noopener">《乡土中国》</a></p></li><li><p>《一往无前》</p></li><li><p>《从一到无穷大》</p></li><li><p><a href="http://www.lt-tree.com/2021/12/26/%E3%80%8A%E6%9B%BE%E5%9B%BD%E8%97%A9%E7%9A%84%E6%AD%A3%E9%9D%A2%E4%B8%8E%E4%BE%A7%E9%9D%A2%E3%80%8B%E8%AF%BB%E8%AE%B0/" target="_blank" rel="noopener">《曾国藩的正面与侧面》</a></p></li><li><p>《腾讯游戏开发精粹II》</p></li></ul><p>极客时间学习</p><ul><li><p>《乔新亮的CTO成长复盘》</p></li><li><p>《大厂晋升指南》</p></li><li><p>《微信小程序全栈开发实战》</p></li></ul><p><br></p><p><br></p><p><br></p><h1 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h1><p>领证前，感觉都在一起11年了，这个证其实无所谓了；但是真正领证后，就突然，莫名感受到一股责任感，在这股责任感下，目标更加明晰，动力更加十足。</p><p>去年立的FLAG，又食言了。</p><p>说到减肥，却一度破百（KG）；</p><p>说到小游戏，天天想各种idea，却没有实现；</p><p>说到打篮球，进度是 3/16，虽说也有后期疫情导致球场全封，但也前期连一半也没达成。</p><p>最最后，还是要有点盼头，捂脸ING</p><ul><li>减肥，目标90KG（小点目标，应该更好）</li><li>小游戏，使用一个框架将之前三消、2048等移植过去</li><li>更新10篇文章</li></ul><p>今年的关键词： 热爱</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多点开花&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d之Label</title>
    <link href="http://yoursite.com/2021/12/26/Cocos2d%E4%B9%8BLabel/"/>
    <id>http://yoursite.com/2021/12/26/Cocos2d%E4%B9%8BLabel/</id>
    <published>2021-12-26T13:06:16.000Z</published>
    <updated>2021-12-26T13:09:29.050Z</updated>
    
    <content type="html"><![CDATA[<p>Cocos2d之Label</p><a id="more"></a><p><br></p><h1 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h1><p>本文主要分为以下几部分</p><ol><li>以 Cocos2dx V3.17.2 版本，剖析Label框架</li><li>看项目组所用的框架，对比分析变动</li><li>了解相关概念后，针对具体问题，进行探索，寻求解决方案</li></ol><p><br><br><br><br><br></p><h1 id="引擎"><a href="#引擎" class="headerlink" title="引擎"></a>引擎</h1><p>版本 V 3.17.2</p><p>Label框架，大体分为三部分：</p><ul><li>Label，面像引擎使用者的显示对象，提供文本标签操作方法</li><li>Font，描述一个字体所能表示的字符集，及某个字体如何显示，可以用这些信息创建FontAtlas</li><li>FontAtlas，根据Font信息来创建FontAtlas，缓存、管理字集所用的纹理</li></ul><p>再加上一些辅助工具类</p><ul><li>FontAtlasCache，对FontAtlas对象缓存管理</li><li>LabelTextFormatter，提供Label静态方法，如换行、对齐等</li></ul><p><br><br><br></p><h2 id="相关文件与类"><a href="#相关文件与类" class="headerlink" title="相关文件与类"></a>相关文件与类</h2><p>关联文件</p><ul><li>Label<ul><li>CCLabel.h &amp; CCLabel.cpp</li><li>CCLabelAtlas.h &amp; CCLabelAtlas.cpp</li><li>CCLabelTTF.h &amp; CCLabelTTF.cpp</li><li>CCLabelBMFont.h &amp; CCLabelBMFont.cpp</li><li>CCLabelTextFormatter.cpp</li></ul></li><li>Font<ul><li>CCFont.h</li><li>CCFontAtlas.h &amp; CCFontAtlas.cpp</li><li>CCFontAtlasCache.h &amp; CCFontAtlasCache.cpp</li><li>CCFontFNT.h &amp; CCFontFNT.cpp</li><li>CCFontCharMap.h &amp; CCFontCharMap.cpp</li><li>CCFontFreeType.h &amp; CCFontFreeType.cpp</li></ul></li></ul><p>关联类</p><ul><li>Label<ul><li>Label</li><li>LabelTTF</li><li>LabelAtlas</li><li>LabelBMFont</li><li>LabelLetter</li><li>LabelProtocol</li></ul></li><li>Font<ul><li>Font</li><li>FontAtlas</li><li>FontAtlasCache</li><li>FontFreeType</li><li>FontCharMap</li><li>FontFNT</li><li>BMFontConfiguration</li></ul></li></ul><p><br></p><p><br></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>此处流程，仅讨论 Label相关，不涉及过去的 LabelTTF、LabelAtlas、LabelBMFont 等</p><p>主要是分为</p><ul><li>create，创建</li><li>update，更新</li></ul><p><br></p><h3 id="create-创建"><a href="#create-创建" class="headerlink" title="create 创建"></a>create 创建</h3><p>关于创建文本，内部可分为两类</p><ul><li>使用FontAtlas来绘制的；TTF、BMFont、CharMap 类型</li><li>不使用FontAtlas来绘制的；STRING_TEXTURE 类型</li></ul><p>使用FontAtlas来绘制的文本，流程为</p><ol><li>通过配置文件，去FontAtlasCache获得 FontAtlas 配置<ul><li>FontAtlasCache 在缓存FontAtlas时，每个类型文件，缓存的哈希key取值不同（例如TTF格式文件，通过文件名、字体大小、字体描边大小 生成索引）</li></ul></li><li>Label与FontAtlas对应关系为一对一，即同一时刻，只会从一个FontAtlas中获取配置、图集等<ul><li>最终都会调用 Label:setFontAtlas 来 释旧创新</li></ul></li><li>创建流程，主要结果就是设置Label的字体FontAtlas配置（_fontConfig）与文本类型（_currentLabelType）</li></ol><p>不使用FontAtlas来绘制文本，流程为</p><ol><li>设置一些配置，字体文件名、字体大小、文本内容等</li><li>主要结果也是设置 文本类型（_currentLabelType）</li></ol><p><br></p><h3 id="visit-绘制"><a href="#visit-绘制" class="headerlink" title="visit 绘制"></a>visit 绘制</h3><p>visit流程为</p><ol><li>updateContent<ul><li>根据当前文本类型及过去文本类型，清理缓存</li><li>根据不同文本类型，使用不同方法创建文本纹理</li><li>在当前文本纹理上，加持其他文本特效</li></ul></li><li>draw<ul><li>判断可见性</li><li>根据对应绘制信息，加入绘制队列</li></ul></li></ol><p><br><br><br></p><h2 id="文本，Label"><a href="#文本，Label" class="headerlink" title="文本，Label"></a>文本，Label</h2><p>Label是Node派生类，它知道如何去绘制文本。<br>可以通过以下几种方式创建：</p><ul><li>TTF文件，LabelTTF</li><li>FNT文件，LabelBMFont</li><li>指定标准plist/png，LabelAtlas</li><li>内置系统字，LabelTTF</li></ul><p>Label并非LabelTTF、LabelBMFont、LabelAtlas的父类，而是用来统一规范各种Label的使用，是Cocos V3.0版本新加的统一管理类。<br>Cocos V2.0版本，创建文本要根据文件，采用不同类名去创建；于是Cocos V3.0 版本，新增Label类，统一管理Label创建与操作，当然也可以用之前方法去创建（不建议）。<br><em>即使用之前的方式创建文本，LabelTTF与LabelBMFont也都是通过调用Label来创建，所有接口也都是通过调用Label实现</em></p><p><img src="./文本概览.png" alt="文本概览"></p><p><br></p><h3 id="一些定义"><a href="#一些定义" class="headerlink" title="一些定义"></a>一些定义</h3><p>重要结构与枚举<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重绘类型</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Overflow</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//In NONE mode, the dimensions is (0,0) and the content size will change dynamically to fit the label.</span></span><br><span class="line">    NONE,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *In CLAMP mode, when label content goes out of the bounding box, it will be clipped.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CLAMP,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * In SHRINK mode, the font size will change dynamically to adapt the content size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SHRINK,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *In RESIZE_HEIGHT mode, you can only change the width of label and the height is changed automatically.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RESIZE_HEIGHT</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文本类型</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">LabelType</span> &#123;</span></span><br><span class="line">    TTF,</span><br><span class="line">    BMFONT,</span><br><span class="line">    CHARMAP,</span><br><span class="line">    STRING_TEXTURE</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Label特效</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">LabelEffect</span> &#123;</span></span><br><span class="line">    NORMAL,</span><br><span class="line">    OUTLINE,</span><br><span class="line">    SHADOW,</span><br><span class="line">    GLOW,</span><br><span class="line">    ITALICS,</span><br><span class="line">    BOLD,</span><br><span class="line">    UNDERLINE,</span><br><span class="line">    STRIKETHROUGH,</span><br><span class="line">    ALL</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当Label创建时加载的字符集合</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">GlyphCollection</span> &#123;</span></span><br><span class="line">    DYNAMIC,</span><br><span class="line">    NEHE,</span><br><span class="line">    ASCII,</span><br><span class="line">    CUSTOM</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LetterInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char32_t</span> utf32Char;</span><br><span class="line">    <span class="keyword">bool</span> valid;</span><br><span class="line">    <span class="keyword">float</span> positionX;</span><br><span class="line">    <span class="keyword">float</span> positionY;</span><br><span class="line">    <span class="keyword">int</span> atlasIndex;</span><br><span class="line">    <span class="keyword">int</span> lineIndex;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><br></p><h3 id="创建方法"><a href="#创建方法" class="headerlink" title="创建方法"></a>创建方法</h3><ol><li>创建空对象，默认是系统文本</li><li>创建系统文本，基于平台提供的API</li><li>创建TTF文本，基于FreeType2</li><li>创建FNT文本，基于Bitmap Font File</li><li>创建CharMap文本，基于Char Map Configuration</li></ol><p><br></p><h3 id="支持效果"><a href="#支持效果" class="headerlink" title="支持效果"></a>支持效果</h3><p>各种Label效果<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启阴影；最后参数模糊半径无用，不支持模糊</span></span><br><span class="line">void enableShadow(const Color4B&amp; shadowColor = Color4B::BLACK,const Size &amp;offset = Size(2,-2), int blurRadius = 0);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启描边；仅支持 TTF &amp; STRING_TEXTURE（系统字）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableOutline</span><span class="params">(<span class="keyword">const</span> Color4B&amp; outlineColor,<span class="keyword">int</span> outlineSize = <span class="number">-1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启外发光；仅支持 TTF</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableGlow</span><span class="params">(<span class="keyword">const</span> Color4B&amp; glowColor)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启斜体；通过 setRotationSkewX(12) 实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableItalics</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启加粗；通过横向偏移阴影实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableBold</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启下划线；创建DrawNode画线，与删除线共用DrawNode</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableUnderline</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启删除线；创建DrawNode画线，与下划线共用DrawNode</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableStrikethrough</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消某种效果</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disableEffect</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disableEffect</span><span class="params">(LabelEffect effect)</span></span>;</span><br></pre></td></tr></table></figure></p><p>各种对齐</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 水平对齐与垂直对齐</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setAlignment</span><span class="params">(TextHAlignment hAlignment,TextVAlignment vAlignment)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 水平对齐</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setHorizontalAlignment</span><span class="params">(TextHAlignment hAlignment)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 垂直对齐</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setVerticalAlignment</span><span class="params">(TextVAlignment vAlignment)</span></span></span><br></pre></td></tr></table></figure><p>设置尺寸与换行相关</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 允许换行</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableWrap</span><span class="params">(<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置最大长度；会被 setDimensions设置的宽度冲掉</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setMaxLineWidth</span><span class="params">(<span class="keyword">float</span> maxLineWidth)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置宽度；本质是调用 setDimensions</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setWidth</span><span class="params">(<span class="keyword">float</span> width)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 设置高度；本质是调用 setDimensions</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">float</span> height)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 设置尺寸</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setDimensions</span><span class="params">(<span class="keyword">float</span> width, <span class="keyword">float</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置换行标准；逐字符或逐单词</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setLineBreakWithoutSpace</span><span class="params">(<span class="keyword">bool</span> breakWithoutSpace)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置行高；每行最终高度 = 行高+行间距</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setLineHeight</span><span class="params">(<span class="keyword">float</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置行间距；每行最终高度 = 行高+行间距</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setLineSpacing</span><span class="params">(<span class="keyword">float</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置字符间距；不支持 STRING_TEXTURE（系统字）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setAdditionalKerning</span><span class="params">(<span class="keyword">float</span> space)</span></span>;</span><br></pre></td></tr></table></figure><p>其他绘制项支持</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改文本颜色；仅支持 TTF &amp; STRING_TEXTURE（系统字）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setTextColor</span><span class="params">(<span class="keyword">const</span> Color4B &amp;color)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置颜色混合</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setBlendFunc</span><span class="params">(<span class="keyword">const</span> BlendFunc &amp;blendFunc)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 透明度是否影响色值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setOpacityModifyRGB</span><span class="params">(<span class="keyword">bool</span> isOpacityModifyRGB)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置Overflow类型</span></span><br><span class="line"><span class="comment">// 仅 TTF 和 BMFont 支持所有Overflow类型</span></span><br><span class="line"><span class="comment">// CharMap 不支持 SHRINK</span></span><br><span class="line"><span class="comment">// STRING_TEXTURE 仅支持 NORMAL &amp; RESIZE_HEIGHT</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setOverflow</span><span class="params">(Overflow overflow)</span></span>;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="配件类"><a href="#配件类" class="headerlink" title="配件类"></a>配件类</h3><h4 id="LabelLetter"><a href="#LabelLetter" class="headerlink" title="LabelLetter"></a>LabelLetter</h4><p>LabelLetter用于在没有SpriteBatchNode情况下更新纹理。<br>它继承自Sprite类，它并不会被直接绘制，用来更新纹理，矩阵变换及颜色等。</p><h4 id="LabelProtocol"><a href="#LabelProtocol" class="headerlink" title="LabelProtocol"></a>LabelProtocol</h4><p>Label通用接口，只有 setString/getString</p><h4 id="LabelTextFormatter"><a href="#LabelTextFormatter" class="headerlink" title="LabelTextFormatter"></a>LabelTextFormatter</h4><p>提供Label一些文本格式处理方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 计算对齐偏移</span></span><br><span class="line"><span class="keyword">void</span> Label::computeAlignmentOffset();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取首字符长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getFirstCharLen</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::u32string&amp; utf32Text, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> textLen)</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取首词长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getFirstWordLen</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::u32string&amp; utf32Text, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> textLen)</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取字符配置项</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getFontLetterDef</span><span class="params">(<span class="keyword">char32_t</span> character, FontLetterDefinition&amp; letterDef)</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新BMFont缩放系数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateBMFontScale</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逐字符分割多行文本</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">multilineTextWrapByChar</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逐单词分割多行文本</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">multilineTextWrapByWord</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多行文本处理</span></span><br><span class="line">bool multilineTextWrap(const std::function&lt;int(const std::u32string&amp;, int, int)&gt;&amp; lambda);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 横向超框</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isHorizontalClamp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 纵向超框</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isVerticalClamp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据尺寸，调整文本字号</span></span><br><span class="line">void shrinkLabelToContentSize(const std::function&lt;bool()&gt;&amp; lambda);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 记录字符信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recordLetterInfo</span><span class="params">(<span class="keyword">const</span> cocos2d::Vec2&amp; point, <span class="keyword">char32_t</span> utf32Char, <span class="keyword">int</span> letterIndex, <span class="keyword">int</span> lineIndex)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 记录非法字符（非法占位符、无配置项字符）信息</span></span><br><span class="line"><span class="keyword">void</span> Label::recordPlaceholderInfo(<span class="keyword">int</span> letterIndex, <span class="keyword">char32_t</span> utf32Char);</span><br></pre></td></tr></table></figure><p><br></p><h2 id="文本（旧），LabelTTF、LabelBMFont、LabelAtlas"><a href="#文本（旧），LabelTTF、LabelBMFont、LabelAtlas" class="headerlink" title="文本（旧），LabelTTF、LabelBMFont、LabelAtlas"></a>文本（旧），LabelTTF、LabelBMFont、LabelAtlas</h2><h3 id="LabelTTF"><a href="#LabelTTF" class="headerlink" title="LabelTTF"></a>LabelTTF</h3><p>LabelTTF是绘制文本的TextureNode的派生类，因此所有TextureNode的特性都可适用于LabelTTF。<br>但LabelTTF效率较低，可以考虑使用LabelAtlas或LabelBMFont来替代，所需的TTF文件可放在程序可访问的地方来使用。</p><ul><li>资源<ul><li>ttf格式文件</li></ul></li><li>优点<ul><li>创建方便</li><li>支持系统字体（节省资源）</li><li>适用性广（用系统字库，能显示的内容多）</li></ul></li><li>缺点<ul><li>创建效率低</li><li>文字更新效率低</li><li>效果简陋（丑）</li></ul></li></ul><h4 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h4><ol><li>指定 显示文本、字体名、字体大小、文本尺寸、对齐方式</li><li>指定 字体配置项、显示文本</li></ol><p>字体配置项<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CC_DLL</span> <span class="title">FontDefinition</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span>           _fontName;</span><br><span class="line">    <span class="keyword">int</span>                   _fontSize;</span><br><span class="line">    TextHAlignment        _alignment;</span><br><span class="line">    TextVAlignment        _vertAlignment;</span><br><span class="line">    <span class="keyword">float</span>                 _lineSpacing;</span><br><span class="line">    Size                  _dimensions;</span><br><span class="line">    Color3B               _fontFillColor;</span><br><span class="line">    GLubyte               _fontAlpha;</span><br><span class="line">    FontShadow            _shadow;</span><br><span class="line">    FontStroke            _stroke;</span><br><span class="line">    <span class="keyword">bool</span>                  _enableWrap;</span><br><span class="line">    <span class="keyword">int</span>                  _overflow;         <span class="comment">// Label:Overflow枚举值</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="支持效果-1"><a href="#支持效果-1" class="headerlink" title="支持效果"></a>支持效果</h4><p>其中只有TTF与SystemFont支持 描边、修改字体颜色</p><p>阴影</p><ul><li>LabelTTF；无效参数：参数3 模糊参数，参数4 更新纹理；无法控制阴影颜色</li><li>Label；无效参数：参数3 模糊参数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::enableShadow(<span class="keyword">const</span> Size &amp;shadowOffset, <span class="keyword">float</span> shadowOpacity, <span class="keyword">float</span> shadowBlur, <span class="keyword">bool</span> <span class="comment">/*updateTexture*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Color4B <span class="title">temp</span><span class="params">(Color3B::BLACK)</span></span>;</span><br><span class="line">    temp.a = <span class="number">255</span> * shadowOpacity;</span><br><span class="line">    _renderLabel-&gt;enableShadow(temp,shadowOffset,shadowBlur);     <span class="comment">// CCLabel:enableShadow</span></span><br><span class="line">    _contentDirty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>描边</p><ul><li>LabelTTF，无法控制描边透明度<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::enableStroke(<span class="keyword">const</span> Color3B &amp;strokeColor, <span class="keyword">float</span> strokeSize, <span class="keyword">bool</span> <span class="comment">/*updateTexture*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    _renderLabel-&gt;enableOutline(Color4B(strokeColor),strokeSize);   <span class="comment">// CCLabel:enableOutline</span></span><br><span class="line">    _contentDirty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>修改字体颜色</p><ul><li>LabelTTF，无效参数：参数2 更新纹理；无法控制透明度<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::setFontFillColor(<span class="keyword">const</span> Color3B &amp;tintColor, <span class="keyword">bool</span> <span class="comment">/*updateTexture*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    _renderLabel-&gt;setTextColor(Color4B(tintColor));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>颜色混合</p><ul><li>LabelTTF同Label一致<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::setBlendFunc(<span class="keyword">const</span> BlendFunc &amp;blendFunc)</span><br><span class="line">&#123;</span><br><span class="line">    _renderLabel-&gt;setBlendFunc(blendFunc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>水平/垂直 翻转</p><ul><li>Label 使用 setScaleX/Y 实现，替代 setFlippedX/Y<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::setFlippedX(<span class="keyword">bool</span> flippedX)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (flippedX)</span><br><span class="line">    &#123;</span><br><span class="line">        _renderLabel-&gt;setScaleX(<span class="number">-1.0f</span>);       <span class="comment">// CCLabel:setScaleX</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        _renderLabel-&gt;setScaleX(<span class="number">1.0f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><br></p><h3 id="LabelBMFont"><a href="#LabelBMFont" class="headerlink" title="LabelBMFont"></a>LabelBMFont</h3><p>LabelBMFont是使用FNT配置文件和图片来显示的一种文本标签，它的效率高于LabelTTF，但只能显示图片中的字符。<br>每个字符都是一张图片（Sprite），因此所有的字符都可以适应Sprite的特性。<br>所有内置字符锚点都是(0.5, 0.5)，不推荐修改，有可能会影响绘制。<br>LabelBMFont与Label、LabelAtlas一样，实现了LabelProtocol接口；<br>LabelBMFont有Label的灵活性、LabelAtlas的速度，并且支持所有Sprite的特性，因此尽量使用它。</p><ul><li>资源<ul><li>fnt格式文件及图集</li></ul></li><li>优点<ul><li>效率高</li><li>每个字符都是图片，支持Sprite特性<ul><li>例如：旋转、缩放 等</li></ul></li><li>可以对每个字体进行自定义优化</li></ul></li><li>缺点<ul><li>只能显示图集内的字符</li></ul></li></ul><h4 id="创建方式-1"><a href="#创建方式-1" class="headerlink" title="创建方式"></a>创建方式</h4><ol><li>指定 显示文本、fnt文件名、单字宽度、对齐方式、字符偏移</li><li>直接创建一个对象，后续根据配置文件初始化</li></ol><p>字符偏移，指解析fnt文件，得到对应字符位置后，再加上这个偏移，去图集中截取对应区域显示。<br>圆心为字符左上角，向右为正向x轴，向下为正向y轴；<br>这个偏移对整个fnt文件生效，就是第一次载入fnt文件时，就赋值，后续载入即使没有设置偏移，也会采取之前默认的偏移。</p><p>fnt文件的映射，是一个ASCII码对应图片区域的映射。<br>可以根据自己的需要，进行自定义映射，比如做一个小笑脸表情，我们可以设定它的ASCII映射码为97，那在设置文本为a的时候，就会显示这个笑脸。</p><p>fnt文件格式<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">info face="Arial" size=32 bold=0 italic=0 charset="" unicode=1 stretchH=100 smooth=1 aa=1 padding=0,0,0,0 spacing=1,1 outline=0</span><br><span class="line">common lineHeight=32 base=26 scaleW=256 scaleH=128 pages=1 packed=0 alphaChnl=1 redChnl=0 greenChnl=0 blueChnl=0</span><br><span class="line">page id=0 file="font_zhandouli2.png"</span><br><span class="line">chars count=12</span><br><span class="line">char id=43   x=103   y=41    width=21    height=40    xoffset=0     yoffset=0     xadvance=21    page=0  chnl=15</span><br><span class="line">char id=48   x=192   y=0     width=26    height=40    xoffset=0     yoffset=0     xadvance=26    page=0  chnl=15</span><br><span class="line">char id=49   x=125   y=41    width=19    height=40    xoffset=0     yoffset=0     xadvance=19    page=0  chnl=15</span><br><span class="line">char id=50   x=219   y=0     width=26    height=40    xoffset=0     yoffset=0     xadvance=26    page=0  chnl=15</span><br><span class="line">char id=51   x=0     y=41    width=25    height=40    xoffset=0     yoffset=0     xadvance=25    page=0  chnl=15</span><br><span class="line">char id=52   x=108   y=0     width=27    height=40    xoffset=0     yoffset=0     xadvance=27    page=0  chnl=15</span><br><span class="line">char id=53   x=26    y=41    width=25    height=40    xoffset=0     yoffset=0     xadvance=25    page=0  chnl=15</span><br><span class="line">char id=54   x=136   y=0     width=27    height=40    xoffset=0     yoffset=0     xadvance=27    page=0  chnl=15</span><br><span class="line">char id=55   x=78    y=41    width=24    height=40    xoffset=0     yoffset=0     xadvance=24    page=0  chnl=15</span><br><span class="line">char id=56   x=52    y=41    width=25    height=40    xoffset=0     yoffset=0     xadvance=25    page=0  chnl=15</span><br><span class="line">char id=57   x=164   y=0     width=27    height=40    xoffset=0     yoffset=0     xadvance=27    page=0  chnl=15</span><br><span class="line">char id=97   x=0     y=0     width=107   height=40    xoffset=0     yoffset=0     xadvance=107   page=0  chnl=15</span><br></pre></td></tr></table></figure></p><h4 id="支持效果-2"><a href="#支持效果-2" class="headerlink" title="支持效果"></a>支持效果</h4><p>获取单个字符（图片），索引从0开始</p><ul><li>获取字符后，可进行任何对图片的操作</li><li>每个字符锚点是 (0.5, 0.5)</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Node* LabelBMFont::getChildByTag(<span class="keyword">int</span> tag) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> _label-&gt;getLetter(tag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Sprite* LabelBMFont::getLetter(<span class="keyword">int</span> ID)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> _label-&gt;getLetter(ID);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置 宽度 与 自动换行 / 空格换行</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置最大宽度</span></span><br><span class="line"><span class="keyword">void</span> LabelBMFont::setWidth(<span class="keyword">float</span> width)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setMaxLineWidth(width);</span><br><span class="line">    <span class="keyword">this</span>-&gt;setContentSize(_label-&gt;getContentSize());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置 空格换行 / 自动换行，默认空格换行</span></span><br><span class="line"><span class="keyword">void</span> LabelBMFont::setLineBreakWithoutSpace( <span class="keyword">bool</span> breakWithoutSpace )</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setLineBreakWithoutSpace(breakWithoutSpace);</span><br><span class="line">    <span class="keyword">this</span>-&gt;setContentSize(_label-&gt;getContentSize());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改字体颜色，透明度</p><ul><li>可整体修改，也可通过获取单个字符，单个修改</li><li>使用 setOpacity 调整透明度</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelBMFont::setColor(<span class="keyword">const</span> Color3B&amp; color)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setColor(color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 透明度是否影响RBG色值</span></span><br><span class="line"><span class="keyword">void</span> LabelBMFont::setOpacityModifyRGB(<span class="keyword">bool</span> var)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setOpacityModifyRGB(var);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;child : _children) &#123;</span><br><span class="line">        child-&gt;setOpacityModifyRGB(var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>支持文本对齐</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelBMFont::setAlignment(TextHAlignment alignment)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setAlignment(alignment);</span><br><span class="line">    <span class="keyword">this</span>-&gt;setContentSize(_label-&gt;getContentSize());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>颜色混合</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelBMFont::setBlendFunc(<span class="keyword">const</span> BlendFunc &amp;blendFunc)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setBlendFunc(blendFunc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="LabelAtlas"><a href="#LabelAtlas" class="headerlink" title="LabelAtlas"></a>LabelAtlas</h3><p>LabelAtlas常用来显示数字，对应Label中的CharMap。<br>效率很高，可替代Label；相较于Label，LabelAtlas对每个字符有固定宽高；但是灵活性有限，不如使用LabelBMFont。</p><ul><li>资源<ul><li>plist文件与图集</li><li>单图集</li></ul></li><li>优点<ul><li>效率高</li></ul></li><li>缺点<ul><li>只能显示有限的ASCII码字符</li><li>功能支持有限</li></ul></li></ul><h4 id="创建方式-2"><a href="#创建方式-2" class="headerlink" title="创建方式"></a>创建方式</h4><ol><li>直接创建对象，后续初始化</li><li>指定 显示文本、图集文件名、单字符宽高、起始字符ASCII码</li><li>指定 显示文本、plist文件名</li></ol><p>即使使用plist文件，在文件内也要注明 图集文件名、单字符宽高、起始字符ASCII码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>version<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>textureFilename<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>larabie-16.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>itemWidth<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>20<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>itemHeight<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>40<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>firstChar<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>65<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>起始字符ASCII码是用来做差值，获取对应图片索引。</p><ul><li>我们起始字符ASCII码设置为 48（0的ASCII码）</li><li>setString(“4”)，4的ASCII码为 52；因此索引为 52-48 = 4；索引从0开始</li><li>取图集中第5个图片返回（此处第n个图片，是根据每个图片固定宽高，来获取要截取的区域）</li></ul><p>可以发现，这里的映射也是自定义映射；CCLabelBMFont中想做的 表情图片显示，也是可以实现的。</p><ul><li>创建9个表情在图集中，设定好宽高</li><li>起始字符设置为48</li><li>输入数字0-8，对应显示9个表情图片</li></ul><h4 id="支持效果-3"><a href="#支持效果-3" class="headerlink" title="支持效果"></a>支持效果</h4><p>修改字体颜色，透明度</p><ul><li>继承自AtlasNode，相关接口都是AtlasNode提供</li><li>使用 setOpacity 调整透明度</li><li>使用 setColor 调整颜色</li><li>使用 setOpacityModifyRGB 设置透明度是否影响RBG色值</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CCAtlasNode.h </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">setOpacityModifyRGB</span><span class="params">(<span class="keyword">bool</span> isOpacityModifyRGB)</span> override</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(<span class="keyword">const</span> Color3B&amp; color)</span> override</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">setOpacity</span><span class="params">(GLubyte opacity)</span> override</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CCLabelAtlas.cpp</span></span><br><span class="line"><span class="keyword">void</span> LabelAtlas::updateColor()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_textureAtlas)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">Color4B <span class="title">color4</span><span class="params">( _displayedColor.r, _displayedColor.g, _displayedColor.b, _displayedOpacity )</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (_isOpacityModifyRGB)</span><br><span class="line">        &#123;</span><br><span class="line">            color4.r *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">            color4.g *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">            color4.b *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">auto</span> quads = _textureAtlas-&gt;getQuads();</span><br><span class="line">        <span class="keyword">ssize_t</span> length = _string.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; length; index++)</span><br><span class="line">        &#123;</span><br><span class="line">            quads[index].bl.colors = color4;</span><br><span class="line">            quads[index].br.colors = color4;</span><br><span class="line">            quads[index].tl.colors = color4;</span><br><span class="line">            quads[index].tr.colors = color4;</span><br><span class="line">            _textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="字体，Font"><a href="#字体，Font" class="headerlink" title="字体，Font"></a>字体，Font</h2><p>Font类直接继承自Ref，有3种派生类</p><ul><li>FontCharMap</li><li>FontFNT</li><li>FontFreeType</li></ul><p>不同字体类分别负责对不同格式文件解析，最终都是创建 FontAtlas 对象。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FontAtlas * XXX::createFontAtlas()</span><br></pre></td></tr></table></figure><p>总的来说，可以分为以下几部分</p><ul><li>各式字体文件格式，通过Font派生类解析并存储相应文件的配置（FontCharMap、FontFNT、FontFreeType）</li><li>所有Font派生类，都需要支持创建FontAtlas对象</li><li>Label直接使用FontAtlas对象，而不知晓解析方式等；为便于重用，设置缓存池 FontAtlasCache</li><li>这样 Label - FontAtlas - Font 之间做到解耦</li></ul><h3 id="FontAtlas-amp-FontAtlasCache"><a href="#FontAtlas-amp-FontAtlasCache" class="headerlink" title="FontAtlas &amp; FontAtlasCache"></a>FontAtlas &amp; FontAtlasCache</h3><p>FontAtlas 是每种字体对应的图集，它缓存并管理一系列 Texture2D 对象，以及每个字符的配置结构。Label可以使用它更方便的渲染文字。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FontLetterDefinition</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">float</span> U;                </span><br><span class="line">    <span class="keyword">float</span> V;                </span><br><span class="line">    <span class="keyword">float</span> width;            </span><br><span class="line">    <span class="keyword">float</span> height;           </span><br><span class="line">    <span class="keyword">float</span> offsetX;          </span><br><span class="line">    <span class="keyword">float</span> offsetY;          </span><br><span class="line">    <span class="keyword">int</span> textureID;          </span><br><span class="line">    <span class="keyword">bool</span> validDefinition;   </span><br><span class="line">    <span class="keyword">int</span> xAdvance;           </span><br><span class="line">    <span class="keyword">bool</span> rotated;           </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>FontAtlasCache 意如其名，做FontAtlas的缓存。<br>针对不同字体提供不同方法</p><ul><li>TTF<ul><li>根据TTF配置获取</li><li>支持根据文件名卸载</li></ul></li><li>FNT<ul><li>根据FNT文件获取</li><li>支持根据配置重载</li></ul></li><li>CharMap<ul><li>根据plist、图集等配置获取</li></ul></li></ul><p>TTF配置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">ttfConfig</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> fontFilePath;</span><br><span class="line">    <span class="keyword">float</span> fontSize;</span><br><span class="line"></span><br><span class="line">    GlyphCollection glyphs;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *customGlyphs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> distanceFieldEnabled;</span><br><span class="line">    <span class="keyword">int</span> outlineSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> italics;</span><br><span class="line">    <span class="keyword">bool</span> bold;</span><br><span class="line">    <span class="keyword">bool</span> underline;</span><br><span class="line">    <span class="keyword">bool</span> strikethrough;</span><br><span class="line"></span><br><span class="line">    _ttfConfig(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; filePath = <span class="string">""</span>,<span class="keyword">float</span> size = CC_DEFAULT_FONT_LABEL_SIZE, <span class="keyword">const</span> GlyphCollection&amp; glyphCollection = GlyphCollection::DYNAMIC,</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *customGlyphCollection = <span class="literal">nullptr</span>, <span class="keyword">bool</span> useDistanceField = <span class="literal">false</span>, <span class="keyword">int</span> outline = <span class="number">0</span>,</span><br><span class="line">               <span class="keyword">bool</span> useItalics = <span class="literal">false</span>, <span class="keyword">bool</span> useBold = <span class="literal">false</span>, <span class="keyword">bool</span> useUnderline = <span class="literal">false</span>, <span class="keyword">bool</span> useStrikethrough = <span class="literal">false</span>)</span><br><span class="line">        : fontFilePath(filePath)</span><br><span class="line">        , fontSize(size)</span><br><span class="line">        , glyphs(glyphCollection)</span><br><span class="line">        , customGlyphs(customGlyphCollection)</span><br><span class="line">        , distanceFieldEnabled(useDistanceField)</span><br><span class="line">        , outlineSize(outline)</span><br><span class="line">        , italics(useItalics)</span><br><span class="line">        , bold(useBold)</span><br><span class="line">        , underline(useUnderline)</span><br><span class="line">        , strikethrough(useStrikethrough)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(outline &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            distanceFieldEnabled = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; TTFConfig;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="FontFNT"><a href="#FontFNT" class="headerlink" title="FontFNT"></a>FontFNT</h3><p>FontFNT实现对BMfont的解析，通过BMFontConfiguration类来解析fnt文件，将文件内所有字符及对应图片名、文字边距属性、文字配置属性保存起来，提供方便调用的接口。</p><p>创建FontFNT流程</p><ol><li>解析fnt格式文件，得到 BMFontConfiguration 对象</li><li>使用 BMFontConfiguration 对象与 Texture2D 创建 FontFNT 对象</li><li>FontFNT对象存储所有字符的配置，提供接口方便上层调用</li></ol><p>创建FontAtlas流程</p><ol><li>检测BMFontConfiguration是否正常</li><li>初始化 FontAtlas</li><li>设置 FontAtlas 的一些配置</li><li>载入所需的图集（当前只支持一张图集）</li></ol><p>BMFontConfiguration支持的fnt文件配置及对应解析方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BMFontConfiguration::parseConfigFile</span><br></pre></td></tr></table></figure><table><thead><tr><th>关键字</th><th>方法</th></tr></thead><tbody><tr><td>info face</td><td>parseInfoArguments</td></tr><tr><td>common lineHeight</td><td>parseCommonArguments</td></tr><tr><td>page id</td><td>parseImageFileName</td></tr><tr><td>chars c</td><td>忽略解析</td></tr><tr><td>char</td><td>parseCharacterDefinition</td></tr><tr><td>kerning first</td><td>parseKerningEntry</td></tr></tbody></table><p>此处也支持解析二进制文本，解析规则基于文件格式 <a href="http://www.angelcode.com/products/bmfont/doc/file_format.html" target="_blank" rel="noopener">Bitmap Font Generator</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BMFontConfiguration::parseBinaryConfigFile</span><br></pre></td></tr></table></figure></p><p>注意：</p><ul><li>目前BMFont只支持单张图集<ul><li>若想调整，可尝试修改 FontAtlas * FontFNT::createFontAtlas 内关于图集ID的处理</li></ul></li><li>解析二进制内容，仅支持版本3</li></ul><blockquote><p>The first three bytes are the file identifier and must always be 66, 77, 70, or “BMF”. The fourth byte gives the format version, currently it must be 3.</p><blockquote><p>Version 1 (introduced with application version 1.8).<br>Version 2 (introduced with application version 1.9) added the outline field in the infoBlock and the encoded field in the commonBlock.<br>Version 3 (introduced with application version 1.10) removed the encoded field in the commonBlock, and added the alphaChnl, redChnl, greenChnl, blueChnl instead. </p></blockquote><p>The size of each block is now stored without accounting for the size field itself. The character id in the charsBlock and the kerningPairsBlock was increased to 4 bytes to support the full unicode range.</p></blockquote><p><br></p><h3 id="FontFreeType"><a href="#FontFreeType" class="headerlink" title="FontFreeType"></a>FontFreeType</h3><p>FontFreeType实现对ttf格式文件处理，使用第三方库FreeType来解析TTF。<br>内部使用一个cache来缓存ttf文件信息，提供获取GLyphBitmap的方法来得到指定文字的位图。</p><p>流程：</p><ol><li>初始化FontFreeType对象<ul><li><em>FT_Stroker_New，创建FT_Stroker对象</em></li><li><em>FT_Stroker_Set，调整FT_Stroker对象</em></li></ul></li><li>设置字符集 GlyphCollection</li><li>初始化FT_Face对象（FreeType库返回对象的句柄）<ol><li>根据字体名先在本地缓存中查找<ul><li>存在，则引用计数+1</li></ul></li><li>创建FT_Face对象流程<ol><li>FT_New_Memory_Face</li><li>FT_Select_Charmap</li><li>FT_Set_Char_Size</li></ol></li></ol></li><li>释放FontFreeType对象<ul><li>FT_Stroker_Done，释放FT_Stroker对象</li><li>FT_Done_Face，释放FT_Face对象</li><li>将对应字体名引用从缓存中-1</li></ul></li></ol><p>创建 FontAtlas流程</p><ul><li>初始化 FontAtlas 对象</li><li>若当前字符集 非GlyphCollection::DYNAMIC<ul><li>准备文本的所有字符配置项，FontAtlas::prepareLetterDefinitions<ul><li>获取文本中未显示过的字符</li><li>遍历所有新字符，生成配置项 FontLetterDefinition ，缓存</li><li>更新当前页图集信息</li></ul></li></ul></li></ul><p><br></p><h3 id="FontCharMap"><a href="#FontCharMap" class="headerlink" title="FontCharMap"></a>FontCharMap</h3><p>实现LabelAtlas图片的解析，创建方式如下</p><ul><li>通过纹理、单字符宽、单字符高、起始字符</li><li>通过plist文件</li></ul><p>流程</p><ol><li>通过图片文件名或解析plist，获取图片并载入缓存</li><li>初始化 FontCharMap（根据图集、单字符宽、单字符高、起始字符）</li></ol><p>创建 FontAtlas 流程</p><ol><li>初始化 FontAtlas</li><li>设置 FontLetterDefinition 基础配置</li><li>遍历所有字符填充到 FontAtlas 字符配置</li><li>载入FontAtlas图集</li></ol><p><br><br><br></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="GUI中的文本"><a href="#GUI中的文本" class="headerlink" title="GUI中的文本"></a>GUI中的文本</h3><p>CocosStudio 中的文本控件</p><ul><li>文本 - UIText - LabelType::TTF / LabelType::STRING_TEXTURE</li><li>艺术数字 - UITextAtlas - LabelType::CHARMAP</li><li>FNT字体 - UITextBMFont - LabelType::BMFont</li></ul><p>一般主要用UIText控件来实现，较少用到其他两个。<br>这三种文本，都可以通过 getVirtualRenderer 获取到Label节点，对它进行操作。<br>本质上来讲，都是通过Label来实现的。</p><p><br></p><h4 id="GUI-amp-UIWidget"><a href="#GUI-amp-UIWidget" class="headerlink" title="GUI &amp; UIWidget"></a>GUI &amp; UIWidget</h4><p>GUI 即 图形用户界面（Graphical User Interface）。<br>相对于用代码来创建各种按钮、图片等，使用可视化的拖动指定控件方式创建按钮、图片等，是更加符合开发者需要且更简便快捷的。</p><p>对于 cocos2d-x 来讲，GUI有:</p><ul><li>CocosBuilder</li><li>CocosStudio（常用）</li><li>FairyGUI（非官方）</li></ul><p>在CocosStudio中配合使用的控件，都继承自同一个父类UIWidget。<br>UIWidget主要功能为：</p><ul><li>实现一系列位置、布局、自适应相关功能</li><li>封装了触摸处理及控件焦点管理</li></ul><p><br></p><h3 id="FreeType库"><a href="#FreeType库" class="headerlink" title="FreeType库"></a>FreeType库</h3><p>简介（<a href="https://freetype.org/index.html" target="_blank" rel="noopener">官网</a>）</p><ul><li>一款 免费、开源、可移植、高质量的 字体引擎</li><li>支持多种字体格式文件，并提供统一的接口</li><li>支持单色位图、反走样位图渲染</li><li>用户可灵活根据需要裁剪</li></ul><p>一些概念：</p><p>句柄库</p><ul><li>含义：FreeType句柄库，用来加载多个字体外观</li><li>类型：FT_Library</li><li>方法<ul><li>创建：FT_Init_FreeType</li><li>释放：FT_Done_FreeType</li></ul></li></ul><p>字体外观</p><ul><li>含义：每种字体对应一个字体外观，通过句柄库载入，字体外观中包含多个字形的配置信息</li><li>类型：FT_Face</li><li>方法<ul><li>创建：FT_New_Memory_Face</li><li>释放：FT_Done_Face</li></ul></li></ul><p>字形</p><ul><li>含义：每个字符都可视作一个字形</li><li>类型：FT_GlyphSlot（设置不同字符，将字形载入到制定槽位中）</li><li>方法（在 freetype.h 中有API介绍）<ul><li>从字体外观中载入对应字符的信息: FT_Load_Char</li><li>设置字符大小: FT_Set_Char_Size</li><li>获取字形索引: FT_Get_Char_Index</li></ul></li></ul><p>关于字形的参数，水平和垂直有所不同</p><p>水平布局</p><p><img src="./FreeType_水平布局.png" alt="FreeType_水平布局"></p><p>垂直布局</p><p><img src="./FreeType_垂直布局.png" alt="FreeType_垂直布局"></p><p><br><br><br><br><br></p><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><p>待补充</p><p><br></p><p><br></p><h1 id="探索"><a href="#探索" class="headerlink" title="探索"></a>探索</h1><h2 id="支持多TTF"><a href="#支持多TTF" class="headerlink" title="支持多TTF"></a>支持多TTF</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在支持多语言版本时，玩家可随意输入自己名称，在界面中显示名称时，无法使用单一的国家TTF文本来显示名称，不得已使用系统字，系统字不够美观，效果差。<br>如果单Label可支持多TTF，就可以让玩家输入的内容，都用TTF样式文本显示，美观度得到保证。</p><p><br></p><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p>首先，确定TTF 文本的创建流程</p><ol><li>FreeType2 库，存所有字符配置信息；根据不同字符返回对应字符的配置信息（宽、高、矩形、偏移）及 位图绘制信息（获取字符信息文本）</li><li>将字符位图信息拼接到当前纹理信息中（拼接纹理信息文本），将字符配置信息缓存</li><li>将当前纹理根据新纹理信息更新（绘制纹理信息）</li><li>遍历所有显示字符，根据字符配置信息，将对应位置纹理绘制到本Label纹理中（加入绘制队列）</li></ol><p>这里面，涉及到两个纹理：</p><ul><li>使用同TTF文件时，共用的纹理</li><li>每个Label使用的自己的纹理</li></ul><p>每次新字符都要经历：</p><ol><li>从TTF获取绘制信息，绘制到 TTF文件共用纹理上</li><li>再从TTF文件共用纹理，绘制到 Label自己的纹理上</li></ol><p><br></p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>Label与TTF文件对应关系</p><ul><li>Label : FontAtlas = 1 : 1</li><li>FontAtlas : FT_Face = 1 : 1</li></ul><p><em>此处Label与FontAtlas实际并不是1:1；实际上不同字体大小和描边大小，会使用不同的FontAtlas，为了展述逻辑方便，刻意忽略了这点</em></p><p>有两个方式实现：</p><ol><li>多FontAtlas <ul><li>Label : FontAtlas 变为 1 : n</li></ul></li><li>多FT_Face<ul><li>FontAtlas : FT_Face 变为 1 : n</li></ul></li></ol><p>相对于多FT_Face，多FontAtlas会导致单个Label使用多个纹理，会增加DC；带来额外负担，所以，使用多FT_Face来实现。</p><p><br></p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p>此处，只简要展示一些重要方法</p><p>Label支持多TTF创建方式<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Allocates and initializes a Label, base on FreeType2 with multi font file path.</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* @param text The initial text</span></span><br><span class="line"><span class="comment">* @param fontFilePathList Multi font file.</span></span><br><span class="line"><span class="comment">* @param fontSize The font size.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> Label* <span class="title">createWithMultiTTF</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; text, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; fontFilePathList, <span class="keyword">float</span> fontSize)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">initWithMultiTTF</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; text, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; fontFilePathList, <span class="keyword">float</span> fontSize)</span></span>;</span><br></pre></td></tr></table></figure></p><p>注意tolua的支持</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lua_cocos2dx_Label_createWithTTF02</span><span class="params">(lua_State* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == L)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> argc = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    tolua_Error tolua_err;</span><br><span class="line">    <span class="keyword">if</span> (!tolua_isusertable(L, <span class="number">1</span>, <span class="string">"cc.Label"</span>, <span class="number">0</span>, &amp;tolua_err)) <span class="keyword">goto</span> tolua_lerror;</span><br><span class="line"></span><br><span class="line">    argc = lua_gettop(L) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!tolua_isstring(L, <span class="number">2</span>, <span class="number">0</span>, &amp;tolua_err) ||</span><br><span class="line">            !tolua_istable(L, <span class="number">3</span>, <span class="number">0</span>, &amp;tolua_err) ||</span><br><span class="line">            !tolua_isnumber(L, <span class="number">4</span>, <span class="number">0</span>, &amp;tolua_err)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">goto</span> tolua_lerror;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">string</span> text = tolua_tostring(L, <span class="number">2</span>, <span class="string">""</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; fontFileList;</span><br><span class="line">            <span class="keyword">if</span> (tolua_istable(L, <span class="number">3</span>, <span class="number">0</span>, &amp;tolua_err)) &#123;</span><br><span class="line">                <span class="keyword">size_t</span> len = lua_objlen(L, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; len; ++i) &#123;</span><br><span class="line">                    lua_pushnumber(L, i + <span class="number">1</span>);</span><br><span class="line">                    lua_gettable(L, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">                    fontFileList.push_back(lua_tostring(L, <span class="number">-1</span>));</span><br><span class="line">                    lua_pop(L, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">float</span> fontSize = tolua_tonumber(L, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            cocos2d::Label* ret = cocos2d::Label::createWithMultiTTF(text, fontFileList, fontSize);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> ID = ret ? (<span class="keyword">int</span>)(ret-&gt;_ID) : <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">int</span>* luaID = ret ? &amp;(ret-&gt;_luaID) : <span class="literal">nullptr</span>;</span><br><span class="line">            toluafix_pushusertype_ccobject(L, ID, luaID, (<span class="keyword">void</span>*)ret, <span class="string">"cc.Label"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">tolua_lerror:</span><br><span class="line">    <span class="keyword">return</span> lua_cocos2dx_Label_createWithTTF00(L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从 FontFreeType中获取字形信息的时候，要遍历所有FT_Face</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* FontFreeType::getGlyphBitmap(<span class="keyword">uint64_t</span> theChar, <span class="keyword">long</span> &amp;outWidth, <span class="keyword">long</span> &amp;outHeight, Rect &amp;outRect,<span class="keyword">int</span> &amp;xAdvance)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_isMultiTTF) &#123;</span><br><span class="line">        <span class="keyword">bool</span> findChar = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* ret = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; _fontRefList.size(); i++) &#123;</span><br><span class="line">            FT_Face face = _fontRefList.at(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_distanceFieldEnabled)  &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(face, theChar, FT_LOAD_RENDER | FT_LOAD_NO_HINTING | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(face, theChar, FT_LOAD_RENDER | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">auto</span>&amp; metrics = face-&gt;glyph-&gt;metrics;</span><br><span class="line">            outRect.origin.x = metrics.horiBearingX &gt;&gt; <span class="number">6</span>;</span><br><span class="line">            outRect.origin.y = -(metrics.horiBearingY &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.width = (metrics.width &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.height = (metrics.height &gt;&gt; <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            xAdvance = (<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(face-&gt;glyph-&gt;metrics.horiAdvance &gt;&gt; <span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">            outWidth = face-&gt;glyph-&gt;bitmap.width;</span><br><span class="line">            outHeight = face-&gt;glyph-&gt;bitmap.rows;</span><br><span class="line"></span><br><span class="line">            ret = face-&gt;glyph-&gt;bitmap.buffer;</span><br><span class="line">            <span class="comment">//if (ret &amp;&amp; outWidth &gt; 0 &amp;&amp; outHeight &gt; 0) &#123;</span></span><br><span class="line">            <span class="keyword">if</span>(ret) &#123;</span><br><span class="line">                <span class="comment">//unsigned char t = *ret;</span></span><br><span class="line">                <span class="comment">//if (t != unsigned char(128) &amp;&amp; t != unsigned char(176) &amp;&amp; t != unsigned char(20) &amp;&amp; t != unsigned char(104)) &#123;</span></span><br><span class="line">                    findChar = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//&#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (findChar)  &#123;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  &#123;</span><br><span class="line">            outRect.size.width = <span class="number">0</span>;</span><br><span class="line">            outRect.size.height = <span class="number">0</span>;</span><br><span class="line">            xAdvance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">bool</span> invalidChar = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* ret = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (_fontRef == <span class="literal">nullptr</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_distanceFieldEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(_fontRef, theChar, FT_LOAD_RENDER | FT_LOAD_NO_HINTING | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(_fontRef, theChar, FT_LOAD_RENDER | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">auto</span>&amp; metrics = _fontRef-&gt;glyph-&gt;metrics;</span><br><span class="line">            outRect.origin.x = metrics.horiBearingX &gt;&gt; <span class="number">6</span>;</span><br><span class="line">            outRect.origin.y = -(metrics.horiBearingY &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.width = (metrics.width &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.height = (metrics.height &gt;&gt; <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            xAdvance = (<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(_fontRef-&gt;glyph-&gt;metrics.horiAdvance &gt;&gt; <span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">            outWidth = _fontRef-&gt;glyph-&gt;bitmap.width;</span><br><span class="line">            outHeight = _fontRef-&gt;glyph-&gt;bitmap.rows;</span><br><span class="line">            ret = _fontRef-&gt;glyph-&gt;bitmap.buffer;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_outlineSize &gt; <span class="number">0</span> &amp;&amp; outWidth &gt; <span class="number">0</span> &amp;&amp; outHeight &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">auto</span> copyBitmap = <span class="keyword">new</span> (<span class="built_in">std</span>::nothrow) <span class="keyword">unsigned</span> <span class="keyword">char</span>[outWidth * outHeight];</span><br><span class="line">                <span class="built_in">memcpy</span>(copyBitmap, ret, outWidth * outHeight * <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>));</span><br><span class="line"></span><br><span class="line">                FT_BBox bbox;</span><br><span class="line">                <span class="keyword">auto</span> outlineBitmap = getGlyphBitmapWithOutline(theChar, bbox);</span><br><span class="line">                <span class="keyword">if</span> (outlineBitmap == <span class="literal">nullptr</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ret = <span class="literal">nullptr</span>;</span><br><span class="line">                    <span class="keyword">delete</span>[] copyBitmap;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">long</span> glyphMinX = outRect.origin.x;</span><br><span class="line">                <span class="keyword">long</span> glyphMaxX = outRect.origin.x + outWidth;</span><br><span class="line">                <span class="keyword">long</span> glyphMinY = -outHeight - outRect.origin.y;</span><br><span class="line">                <span class="keyword">long</span> glyphMaxY = -outRect.origin.y;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">auto</span> outlineMinX = bbox.xMin &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineMaxX = bbox.xMax &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineMinY = bbox.yMin &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineMaxY = bbox.yMax &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineWidth = outlineMaxX - outlineMinX;</span><br><span class="line">                <span class="keyword">auto</span> outlineHeight = outlineMaxY - outlineMinY;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">auto</span> blendImageMinX = MIN(outlineMinX, glyphMinX);</span><br><span class="line">                <span class="keyword">auto</span> blendImageMaxY = MAX(outlineMaxY, glyphMaxY);</span><br><span class="line">                <span class="keyword">auto</span> blendWidth = MAX(outlineMaxX, glyphMaxX) - blendImageMinX;</span><br><span class="line">                <span class="keyword">auto</span> blendHeight = blendImageMaxY - MIN(outlineMinY, glyphMinY);</span><br><span class="line"></span><br><span class="line">                outRect.origin.x = blendImageMinX;</span><br><span class="line">                outRect.origin.y = -blendImageMaxY + _outlineSize;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span>* blendImage = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (blendWidth &gt; <span class="number">0</span> &amp;&amp; blendHeight &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">long</span> index, index2;</span><br><span class="line">                    blendImage = <span class="keyword">new</span> (<span class="built_in">std</span>::nothrow) <span class="keyword">unsigned</span> <span class="keyword">char</span>[blendWidth * blendHeight * <span class="number">2</span>];</span><br><span class="line">                    <span class="built_in">memset</span>(blendImage, <span class="number">0</span>, blendWidth * blendHeight * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">auto</span> px = outlineMinX - blendImageMinX;</span><br><span class="line">                    <span class="keyword">auto</span> py = blendImageMaxY - outlineMaxY;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; outlineWidth; ++x)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; outlineHeight; ++y)</span><br><span class="line">                        &#123;</span><br><span class="line">                            index = px + x + ((py + y) * blendWidth);</span><br><span class="line">                            index2 = x + (y * outlineWidth);</span><br><span class="line">                            blendImage[<span class="number">2</span> * index] = outlineBitmap[index2];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    px = glyphMinX - blendImageMinX;</span><br><span class="line">                    py = blendImageMaxY - glyphMaxY;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; outWidth; ++x)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; outHeight; ++y)</span><br><span class="line">                        &#123;</span><br><span class="line">                            index = px + x + ((y + py) * blendWidth);</span><br><span class="line">                            index2 = x + (y * outWidth);</span><br><span class="line">                            blendImage[<span class="number">2</span> * index + <span class="number">1</span>] = copyBitmap[index2];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                outRect.size.width = blendWidth;</span><br><span class="line">                outRect.size.height = blendHeight;</span><br><span class="line">                outWidth = blendWidth;</span><br><span class="line">                outHeight = blendHeight;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">delete</span>[] outlineBitmap;</span><br><span class="line">                <span class="keyword">delete</span>[] copyBitmap;</span><br><span class="line">                ret = blendImage;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            invalidChar = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (invalidChar)</span><br><span class="line">        &#123;</span><br><span class="line">            outRect.size.width = <span class="number">0</span>;</span><br><span class="line">            outRect.size.height = <span class="number">0</span>;</span><br><span class="line">            xAdvance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h4 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h4><p>通过如此配置，已经实现了一个样例，效果如下：</p><p><img src="./实现样例.png" alt="实现样例"></p><p>可以发现几个问题：</p><ul><li>部分文本显示异常</li><li>空格消失</li><li>字符间距有问题</li><li>行间距有问题</li></ul><p>部分文本显示异常</p><ul><li>主要是因为，我们是按照固定顺序来遍历所有ttf文件，判断未找到的条件是FT_Face返回的字符显示信息为nullptr或者位图宽高小于等于0。但是，如果前面的TTF文件中存储了显示不出来的字符信息且设定为占位符，就会导致不再遍历后面的ttf文件</li><li>例如：<ul><li>韩语显示不了一些汉语，但是又不想显示为空，就拿一些看起来就有问题的字符 × 来替代，让文本显示起来更美观一些；但是这会导致我们向下查找的逻辑失效</li></ul></li><li>解决方案<ul><li>可以统计所有非法字符，如果返回的字符是非法字符，也继续向下查找</li><li>可以计算字符unicode值，根据unicode来判断所属国家，然后优先去对应国家TTF文件中查找</li></ul></li></ul><p>可见，距离投入使用还有一段路程，要后续慢慢优化，</p><p><br></p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>方案一是修改底层的方式，在一个绘制批次中，显示来自于不同字库的字形。<br>这里，也可以用在业务层扩展的方式来实现具体需求。</p><ol><li>分析输入的文本中每个字符所属的国家（通过Unicdoe值）</li><li>每个字符用对应的字库来创建</li><li>将这些文本拼接起来（使用富文本）</li></ol><p>这样，就可以在业务层直接解决问题，虽然这样修改批次会增多，但是基于使用场景、实现复杂度、维护成本等，使用方案二性价比更高。</p><p><br></p><h4 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h4><p>在之前的文章中，实现了 判断字符所属国家： <a href="http://www.lt-tree.com/2021/10/26/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/" target="_blank" rel="noopener">字符集与字符编码</a><br>以此为基础，扩展实现。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- refer to Xutf8.lua  UnicodeNationRangeList</span></span><br><span class="line"><span class="keyword">local</span> NationIndex2TTF = &#123;</span><br><span class="line">    default = <span class="string">"static/common.ttf"</span>,</span><br><span class="line">    <span class="comment">-- [1] = "static/common.ttf",</span></span><br><span class="line">    [<span class="number">2</span>] = <span class="string">"static/common_en.ttf"</span>,</span><br><span class="line">    [<span class="number">3</span>] = <span class="string">"static/common_cn.ttf"</span>,</span><br><span class="line">    [<span class="number">4</span>] = <span class="string">"static/common_kr.ttf"</span>,</span><br><span class="line">    [<span class="number">5</span>] = <span class="string">"static/common_jp.ttf"</span>,</span><br><span class="line">    [<span class="number">6</span>] = <span class="string">"static/common_ta.ttf"</span>,</span><br><span class="line">    [<span class="number">7</span>] = <span class="string">"static/common_rs.ttf"</span>,</span><br><span class="line">    [<span class="number">8</span>] = <span class="string">"static/common_gr.ttf"</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 分析传入的文本</span></span><br><span class="line"><span class="comment">    一般传入的结构为</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">      content = 文本内容</span></span><br><span class="line"><span class="comment">      font = 字体文件</span></span><br><span class="line"><span class="comment">      fontsize = 字体大小</span></span><br><span class="line"><span class="comment">      color = 文本色值</span></span><br><span class="line"><span class="comment">      opacity = 文本透明度</span></span><br><span class="line"><span class="comment">      outlinecolor = 描边色值</span></span><br><span class="line"><span class="comment">      outlinesize = 描边大小</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  v: table</span></span><br><span class="line"><span class="comment">    富文本element已有结构</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  return:</span></span><br><span class="line"><span class="comment">    array&lt;v&gt;: 传入格式同结构的数组</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RichTextFactory:analyseNationalContent</span><span class="params">(element)</span></span></span><br><span class="line">    <span class="keyword">local</span> nationList = &#123;&#125;</span><br><span class="line">    <span class="keyword">local</span> content = element.content</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> curNationIdx = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">local</span> startPos = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">local</span> endPos = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">len</span> = Xutf8.<span class="built_in">len</span>(content)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, <span class="built_in">len</span> <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> c = Xutf8.<span class="built_in">sub</span>(content, i, i)</span><br><span class="line">        <span class="keyword">local</span> idx, tip = Xutf8.analyseCharBelong(c)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">local</span> collectEle = (i == <span class="built_in">len</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 不识别，一般是空格、符号等，归属于附近的语言体系</span></span><br><span class="line">        <span class="keyword">if</span> idx == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> curNationIdx == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">                startPos = i</span><br><span class="line">                endPos = i</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                endPos = i</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> curNationIdx == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">                curNationIdx = idx</span><br><span class="line">                startPos = i</span><br><span class="line">                endPos = i</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> curNationIdx == idx <span class="keyword">then</span></span><br><span class="line">                    endPos = i</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    collectEle = <span class="literal">true</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> collectEle <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> temp = clone(element)</span><br><span class="line">            temp.content = Xutf8.<span class="built_in">sub</span>(content, startPos, endPos)</span><br><span class="line">            <span class="keyword">if</span> NationIndex2TTF[curNationIdx] <span class="keyword">then</span></span><br><span class="line">                temp.font = NationIndex2TTF[curNationIdx]</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                temp.font = NationIndex2TTF.default</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            nationList[#nationList + <span class="number">1</span>] = temp</span><br><span class="line"></span><br><span class="line">            curNationIdx = idx</span><br><span class="line">            startPos = i</span><br><span class="line">            endPos = i</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nationList</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>最后结果：<br>三部分</p><ul><li>上面部分是富文本实现</li><li>中间部分是系统字</li><li>下面部分是TTF分别创建的文本</li></ul><p><img src="./实现样例2.png" alt="实现样例2"></p><p><br></p><h4 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h4><p>每个TTF的基线不一致，导致看起来并不在同一个水平线。<br>调整对齐方式，所有元素在垂直方向上居中对齐。</p><p><img src="./实现样例3.png" alt="实现样例3"></p><p><br><br><br></p><h2 id="获取SytemFont实际长度"><a href="#获取SytemFont实际长度" class="headerlink" title="获取SytemFont实际长度"></a>获取SytemFont实际长度</h2><h3 id="问题-3"><a href="#问题-3" class="headerlink" title="问题"></a>问题</h3><p>系统字不支持 getLetter方法。<br>但在富文本中，若使用系统字，就无法做到精准的分割字符串。</p><p><br></p><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>系统字创建，是通过 Texture2D::initWithString 来创建出来的，这里面应该能获取到每个字符的举行区域，每个字符在图内的位置。<br>但，实际上，创建文本是直接调用字库来创建一批文本，并没有一个个传入，然后创建。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SIZE <span class="title">sizeWithText</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span> * pszText, <span class="keyword">int</span> nLen, DWORD dwFmt, LONG nWidthLimit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// ....</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 这里显示的是 Windows平台的实现</span></span><br><span class="line">  <span class="comment">// pszText为具体文本内容， nLen为文本长度，rc为整个文本矩形大小</span></span><br><span class="line">  DrawTextW(_DC, pszText, nLen, &amp;rc, dwCalcFmt);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，这块也可以做成，每个字符传递一次，然后获得每个举行大小，然后再具体计算，成本过高，不推荐。<br>临时方案，就根据最终宽度与文本长度，进行大概的分割。</p><p><br><br><br></p><h2 id="Label支持渐变色"><a href="#Label支持渐变色" class="headerlink" title="Label支持渐变色"></a>Label支持渐变色</h2><h3 id="问题-4"><a href="#问题-4" class="headerlink" title="问题"></a>问题</h3><p>让Label支持渐变色。</p><p><br></p><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>在updateColor的时候，要设置左上、左下、右上、右下的色值，可以在此处进行处理</p><p><br></p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>创建相关变量、函数并初始化，注册给lua<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==== Label.h</span></span><br><span class="line"><span class="comment">// 0 - none, 1 - from left to right , 2 - from top to bottom</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gradientColor</span><span class="params">(<span class="keyword">int</span> dir, Color4B color = Color4B::WHITE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _gradientColorDir;</span><br><span class="line">Color4B _gradientColor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ==== lua_cocos2dx_auto.cpp</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lua_cocos2dx_Label_gradientColor</span><span class="params">(lua_State* tolua_S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> argc = <span class="number">0</span>;</span><br><span class="line">    cocos2d::Label* cobj = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    tolua_Error tolua_err;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    <span class="keyword">if</span> (!tolua_isusertype(tolua_S, <span class="number">1</span>, <span class="string">"cc.Label"</span>, <span class="number">0</span>, &amp;tolua_err)) <span class="keyword">goto</span> tolua_lerror;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    cobj = (cocos2d::Label*)tolua_tousertype(tolua_S, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    <span class="keyword">if</span> (!cobj)</span><br><span class="line">    &#123;</span><br><span class="line">        tolua_error(tolua_S, <span class="string">"invalid 'cobj' in function 'lua_cocos2dx_Label_gradientColor'"</span>, <span class="literal">nullptr</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    argc = lua_gettop(tolua_S) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> arg0;</span><br><span class="line">        ok &amp;= luaval_to_int32(tolua_S, <span class="number">2</span>, (<span class="keyword">int</span>*)&amp;arg0, <span class="string">"cc.Label:gradientColor"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ok)</span><br><span class="line">        &#123;</span><br><span class="line">            tolua_error(tolua_S, <span class="string">"invalid arguments in function 'lua_cocos2dx_Label_gradientColor'"</span>, <span class="literal">nullptr</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cobj-&gt;gradientColor(arg0);</span><br><span class="line">        lua_settop(tolua_S, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(argc == <span class="number">2</span>)  &#123;</span><br><span class="line">        <span class="keyword">int</span> arg0;</span><br><span class="line">        ok &amp;= luaval_to_int32(tolua_S, <span class="number">2</span>, (<span class="keyword">int</span>*)&amp;arg0, <span class="string">"cc.Label:gradientColor"</span>);</span><br><span class="line"></span><br><span class="line">        cocos2d::Color4B arg1;</span><br><span class="line">        ok &amp;= luaval_to_color4b(tolua_S, <span class="number">3</span>, &amp;arg1, <span class="string">"cc.Label:gradientColor"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ok)</span><br><span class="line">        &#123;</span><br><span class="line">            tolua_error(tolua_S, <span class="string">"invalid arguments in function 'lua_cocos2dx_Label_gradientColor'"</span>, <span class="literal">nullptr</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cobj-&gt;gradientColor(arg0, arg1);</span><br><span class="line">        lua_settop(tolua_S, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    luaL_error(tolua_S, <span class="string">"%s has wrong number of arguments: %d, was expecting %d \n"</span>, <span class="string">"cc.Label:gradientColor"</span>, argc, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    tolua_lerror:</span><br><span class="line">    tolua_error(tolua_S, <span class="string">"#ferror in function 'lua_cocos2dx_Label_gradientColor'."</span>, &amp;tolua_err);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调整updateColor方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> Label::updateColor()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_batchNodes.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">Color4B <span class="title">color4</span><span class="params">(_textColor.r, _textColor.g, _textColor.b, _displayedOpacity)</span></span>;</span><br><span class="line">    <span class="function">Color4B <span class="title">color42</span><span class="params">(_gradientColor.r, _gradientColor.g, _gradientColor.b, _displayedOpacity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// special opacity for premultiplied textures</span></span><br><span class="line">    <span class="keyword">if</span> (_isOpacityModifyRGB)</span><br><span class="line">    &#123;</span><br><span class="line">        color4.r *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        color4.g *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        color4.b *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        color42.r *= _displayedOpacity / <span class="number">255.0f</span>;</span><br><span class="line">        color42.g *= _displayedOpacity / <span class="number">255.0f</span>;</span><br><span class="line">        color42.b *= _displayedOpacity / <span class="number">255.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cocos2d::TextureAtlas* textureAtlas;</span><br><span class="line">    V3F_C4B_T2F_Quad *quads;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp;&amp; batchNode:_batchNodes)</span><br><span class="line">    &#123;</span><br><span class="line">        textureAtlas = batchNode-&gt;getTextureAtlas();</span><br><span class="line">        quads = textureAtlas-&gt;getQuads();</span><br><span class="line">        <span class="keyword">auto</span> count = textureAtlas-&gt;getTotalQuads();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (_gradientColorDir)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>: &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; count; ++index)</span><br><span class="line">                &#123;</span><br><span class="line">                    quads[index].bl.colors = color4;</span><br><span class="line">                    quads[index].br.colors = color4;</span><br><span class="line">                    quads[index].tl.colors = color4;</span><br><span class="line">                    quads[index].tr.colors = color4;</span><br><span class="line">                    textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; count; ++index)</span><br><span class="line">                &#123;</span><br><span class="line">                    quads[index].bl.colors = color4;</span><br><span class="line">                    quads[index].br.colors = color42;</span><br><span class="line">                    quads[index].tl.colors = color4;</span><br><span class="line">                    quads[index].tr.colors = color42;</span><br><span class="line">                    textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; count; ++index)</span><br><span class="line">                &#123;</span><br><span class="line">                    quads[index].bl.colors = color42;</span><br><span class="line">                    quads[index].br.colors = color42;</span><br><span class="line">                    quads[index].tl.colors = color4;</span><br><span class="line">                    quads[index].tr.colors = color4;</span><br><span class="line">                    textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><img src="./渐变样例.png" alt="渐变样例"></p><p><br><br><br><br><br></p><hr><p>参考资料</p><ul><li>《精通COCOS2D-X游戏开发 基础卷》</li><li><a href="http://www.angelcode.com/products/bmfont/doc/file_format.html" target="_blank" rel="noopener">Bitmap Font Generator</a></li><li><a href="https://freetype.org/download.html" target="_blank" rel="noopener">FreeType库</a></li><li><a href="https://docs.cocos2d-x.org/api-ref/cplusplus/V3.17/db/de4/classcocos2d_1_1_label.html" target="_blank" rel="noopener">Cocos2d-x V3.17 API</a></li><li><a href="https://docs.cocos.com/cocos2d-x/manual/zh/ui_components/labels.html" target="_blank" rel="noopener">Cocos2d文档 GitBook</a></li></ul><p><br><br><br><br><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cocos2d之Label&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
      <category term="多实践" scheme="http://yoursite.com/tags/%E5%A4%9A%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="Cocos2d" scheme="http://yoursite.com/tags/Cocos2d/"/>
    
  </entry>
  
  <entry>
    <title>《曾国藩的正面与侧面》读记</title>
    <link href="http://yoursite.com/2021/12/26/%E3%80%8A%E6%9B%BE%E5%9B%BD%E8%97%A9%E7%9A%84%E6%AD%A3%E9%9D%A2%E4%B8%8E%E4%BE%A7%E9%9D%A2%E3%80%8B%E8%AF%BB%E8%AE%B0/"/>
    <id>http://yoursite.com/2021/12/26/%E3%80%8A%E6%9B%BE%E5%9B%BD%E8%97%A9%E7%9A%84%E6%AD%A3%E9%9D%A2%E4%B8%8E%E4%BE%A7%E9%9D%A2%E3%80%8B%E8%AF%BB%E8%AE%B0/</id>
    <published>2021-12-26T08:40:00.000Z</published>
    <updated>2021-12-26T13:14:25.061Z</updated>
    
    <content type="html"><![CDATA[<p>岁月让人从批判走向了建设</p><a id="more"></a><p><br></p><h1 id="读因"><a href="#读因" class="headerlink" title="读因"></a>读因</h1><p>很早前，就想读读一本自传了；也不知道什么时候，在APP中书架里有这么一本书。</p><p>曾国藩，也在历史课本里听过，清朝名臣；曾国藩家书，也如雷贯耳。</p><p>看很多人说他 古今第一完人；当然也有很多人不认。总之各种争议不断，这就非常让我感兴趣。</p><p><br></p><p><br></p><h1 id="读感"><a href="#读感" class="headerlink" title="读感"></a>读感</h1><h2 id="书"><a href="#书" class="headerlink" title="书"></a>书</h2><p>作者，在书中说过：对许多人来说，曾国藩的主要意义证明了一个资质平平的人，在意志力的推动下，可以达到什么样的高度。</p><p>第一部分，作者讲了曾国藩是如何从一个愤青变的老奸巨猾的。</p><p>这一段，给我的感觉，就是，每个人的成功背后果然都有非常惨痛的过去，和我最近看到的一句话，有些相得益彰 “未经他人苦，莫劝他人善”。</p><p>这种感觉真的是，从科举入京，本是光宗耀祖，全省骄傲，但是入了凤凰群，也就算不得什么了，再加上性格的孤傲，众人皆醉我独醒，要拯救这江山社稷的宏远，让他更加难以相处，最终也是被敲打的体无完肤。</p><p>但我真正欣赏的，还是他能够及时自省，能自我反省到问题所在，自省这件事真的说起来很简单，但是做起来太难，不亚于揪着自己头发把自己提起来。</p><p>第二部分，作者叙述曾国藩的家境情况，收入支出，同时也对比了整个背景环境，其他官员等；从所说的方面看，显然是一个清官，但是，这个清官如果分等级，那只能算是那种没有主动贪污行为的清官，为什么做到这就止了呢？为了更高更大的目的。</p><p>第三部分，他的迷信与天命；经历了世事变迁，经历了愤青到老奸巨猾，在这乱世中颠沛，必然要有强大的精神力；如同我之前说的，自省是很难的，尤其是纯自省不外乎揪发自提，因此，必然需要外力介入，正如李世民之前所说“以铜为镜，可以正衣冠，以史为镜，可以知兴替，以人为镜，可以明得失”；他也是通过外力来不断自省。对于曾国藩的外力，就是这份理学。</p><p>最后一部分，就是对曾国藩这些多面多向的总结了；但是这本书，也正如书名，写的是曾国藩的正面、侧面；那他就没有背面了吗？有很多事情还是没有说的，感觉还是以捧为主，并不是那么客观，阐述事实，让大家来评价的书籍。</p><p><br></p><h2 id="己"><a href="#己" class="headerlink" title="己"></a>己</h2><p>然后，就是看完书，我自己的感悟吧。有很多点。</p><p>第一点，职场。</p><p>职场对应曾国藩的官场；只不过我们现在有得选，而他没得选。但正因为是有得选，让更多人去更倾向于做出选择，而不是去探究该不该做选择。在职场中遇到不适应、不理解、不认可的事情，是正常的，这不是我们选择离开的理由；而是在进入一个职场的时候，明确自己的两条线，第一条是上线，为什么选择这里，希望得到什么，第二条是下线，哪些行为是绝对不能接受的。确立好这两条线以后，剩下中间的区域，就是我们可以灵活变通的地方了。</p><p>第二点，自省。</p><p>自省，真的很重要；尤其是，现在大家越来越在乎别人的感受，反而经常会听不到真话。正如作者所说的：曾国藩的主要意义证明了一个资质平平的人，在意志力的推动下，可以达到什么样的高度。这个高度，就是曾国藩不断自省，不断汲取，不断进化。我们怎么做自省呢？第一点，要善于做一些总结，比如年终总结等；第二点，善于从事来发现自己的问题，我一般是从每次的爆发中探寻问题。（比如与老婆的争吵、与同事的争论、发生的事故等等）</p><p>第三点，经验主义。</p><p>这也算是我自己的人生观吧，更喜欢尝试、体验新奇的东西。</p><p>最后，这本书，不论是从曾国藩的亲身经历，还是作者讲述的一些其他知识，都让我有很深的共鸣感与认同感；想起自己曾经也是面对这困难，更多的是批判与逃离，现如今，也已经开始走向建设；</p><ul><li>我们改变不了世界，但我们可以努力的去影响，影响不了世界，那就影响我自己，影响我周围，我们能控制影响的范围。</li><li>我们改变不了所有的规则，但我们可以努力的改变部分规则，开始都是服从规则，努力去影响规则，甚至去制定规则。</li><li>区别，只是在于，心有多大，目标有多大，而已。</li><li>不要因为改变不了世界，就放弃自己。</li></ul><p><br></p><p><br></p><h1 id="片段"><a href="#片段" class="headerlink" title="片段"></a>片段</h1><h2 id="序-岁月让人从批判走向了建设"><a href="#序-岁月让人从批判走向了建设" class="headerlink" title="序 岁月让人从批判走向了建设"></a>序 岁月让人从批判走向了建设</h2><p>顾与曾这两个人都是体制中人，都并非天才，受尽困厄，回到平实，都经历了从理想主义到经验主义的痛苦转变。</p><p>其苟且者，知将来之必敝；其知当者，知将来之必因。所谓虽百世可知也。</p><p>胡适思想上的一次大变化，也因对柔软与刚强的理解而起。他曾有一段时间深信老子说，“至柔可以克万物”。后来他在美国之后，有次他去大峡谷，看到很大的瀑布，就对韦莲司说，你看，水的力量多大啊，因为水在我们中国人心中是特别柔弱的东西。韦莲司就以典型的美国人精神告诉他，你错了，水绝对不会因为柔弱才有力量，水的力量是因为有势能。</p><p>不晓事则挟私固谬，秉公亦谬；小人固谬，君子亦谬；乡愿固谬，狂狷亦谬。</p><p>天下无一成不变之君子，无一成不变之小人。今日能知人，能晓事，则为君子；明日不知人，不晓事，则为小人。寅刻公正光明，则为君子；卯刻偏私晻暧，则为小人。</p><p>强分黑白、遇事激扬者，文人轻薄之习、优怜风切之态也。而吾辈不察而效之，动辄区别善恶，品第高下，使优者未必加劝，而劣者几无以自处。</p><p>曾国藩能成为曾国藩，靠的不是道德勇气，而是精神上不断地自我更新，“前世所袭误者，可以自我更之；前世所未及者，可以自我创之。</p><p>大抵任事之人，断不能有毁而无誉，有恩而无怨。体制内的改良者，大都经历过这样的处境，像蔡元培说的锅里的小鱼，”两边煎“。政府觉得你不忠诚，老百姓觉得你是走狗，保守者觉得你动摇根基，激进者觉得你迟滞迂缓。总是两边都骂你，什么好也落不着。</p><p><br></p><h2 id="第一编-正面：愤青-与-老奸巨猾"><a href="#第一编-正面：愤青-与-老奸巨猾" class="headerlink" title="第一编 正面：愤青 与 老奸巨猾"></a>第一编 正面：愤青 与 老奸巨猾</h2><p>向前无法贡献自己的才智于国家，退后无法很好地营谋自己的出路，除了直接向皇帝上书之外，还有什么办法呢？</p><p>权力是官员们的眼珠，是官员们的生命，是官员们的精神支柱，也是官员们灰色收入的主要来源和得到他人尊敬、巴结、攀附的唯一资本。因此官员们视自己的权力范围就如同狗看着自己食盆里的骨头，寡妇看着自己的独子，或者美女守着自己的敏感地带一样，绝不许人触碰。他们可以允许自己无所作为，“占着茅坑不拉屎”，却绝不允许别人在这里有所作为。</p><p>对有志者来说，挫辱是最大的动力，打击是最好的帮助。咬紧牙关，把挫辱活生生吞下，就成了滋养自己意志和决心的营养。</p><p>曾国藩终于认识到，行事过于方刚者，表面上似乎是强者，实际上却是弱者。这片土地上真正的强者，是表面上看起来柔弱退让之人。所谓“天下之至柔，驰骋天下之至坚”，“江海所以能为百谷王者，以其善下之”。所谓“大柔非柔，至刚无刚”。中国社会的潜规则是不可能一下子被扫荡的。那些他以前所看不起的虚伪、麻木、圆滑、机诈，是在这片土地上生存的必需手段。只有必要时和光同尘，圆滑柔软，才能顺利通过一个个困难的隘口。只有海纳百川，兼收并蓄，才能调动各方面的力量，达到胜利的彼岸。</p><p>第一，他变得和气、谦虚、周到了。第二，他对皇帝，不再那么直言不讳，而是学会了打太极拳。第三，他不再慎于保举，而是“同流合污”了。第四，治军不再一味从严，而是宽严相济。</p><p>曾国藩早年是一个典型的愤青。单线思维、唯我独革、愤世嫉俗、矫激傲岸。做起事来手段单一、风格强硬、纯刚至猛、一往无前，因此处处碰壁，动辄得咎。中年以后，曾国藩终于在与世界的战斗中变得圆融了。然而这种圆融不是他本性中所有，是靠不屈不挠的精神从一次又一次跌倒中悟出来的，是从质朴刚子中升发来的。这是曾国藩和别人的不同之处，所以他的圆融是以质朴刚正为基础的，和世俗的油滑机智比，其境界力量不可同日而语。历经千折百磨之后，曾国藩的初心并无任何变化。他的志向仍然是“致君尧舜上，再使风俗淳”。他不再认为通过雷霆手段能迅速达到目的。然而他相信通过浸润之功，日将月就，还是会实现这个理想的。</p><p>曾国藩一贯认为，精神的力量远大于身体的力量。行伍出身的莽夫虽有一时之勇，但是没有坚定不摇的信仰。曾国藩要建立的，是一支有信仰、有精神力量的军队，让信仰出战斗力，让精神出战斗力。</p><p>知止而后有定，定而后能静，静而后能安，安而后能虑，虑而后能得。</p><p>有操守，没官气，多条理，少大言。</p><p>征兵主要收淳朴的农民，而且是山农，这是因为中国有句古话：近山者仁，近水者智。“山僻之民多悍，水乡之民多浮滑，城市多游惰之习，乡村多朴拙之夫，善用兵者，尝好用山乡之卒，而不好用城市近水乡之人。”</p><p>其实曾国藩一生做事，都没有什么特殊的地方，就是做得扎实，做得牢靠。这种作战方式，也是曾国藩独特的人生哲学和思维方式的体现。因此曾国藩打仗的第一秘诀是“稳”，先立于不败之地。军事首重“自固”，就是先要保存自我，然后才能谈到争取胜利。</p><p>曾国藩一生打仗不贪小利，不求奇谋，踏踏实实，稳扎稳打。在具体作战规则上，曾国藩的战略思想是“以静制动、反客为主”。不主动出击，总是诱使敌人先来攻他，后发制人。曾国藩反复强调，湘军打仗，不能浪战，不先急于进攻，而是先站稳脚步，等着敌人露出破绽，然后再出手。</p><p>以平庸的身体资质试图成为圣人，付出的身体上的代价就是如此。</p><p>曾国藩一生反感懒散的生活态度。他认为人之大恶不过是意志消沉、苟且偷生、不求上进，生活上随便潦草，工作上马虎懒散。他说：“大约军事之败，非傲即惰，二者必居其一；巨室之败，非傲即惰，二者必居其一。”又说，“人败，离不得个‘逸’字”，“天下古今之庸人，皆以一惰字致败”。</p><p>曾国藩在论为官之道时，说为官者当有五勤：“一曰身勤。险远之路，身往验之；艰苦之境，身亲尝之。二曰眼勤。遇一人，必详细察看；接一文，必反复审阅。三曰手勤。易弃之物，随手收拾；易忘之事，随笔记载。四曰口勤。待同僚，则互相规劝；待下属，则再三训导。五曰心勤。精诚所至，金石亦开；苦思所积，鬼神亦通。”</p><p>曾国藩之于后人的最大意义是，他以自己的实践证明，一个中人，通过“陶冶变化”，可以成为超人。换句话说，如果一个人真诚地投入自我完善，他的本领可以增长十倍，见识可以高明十倍，心胸可以扩展十倍，气质可以纯净十倍。愚钝之人，通过自我磨砺，也可以看得透，立得定，说得出，办得来。浮嚣之人，也可以变得清风朗月般从容澄净。偏执之人，亦可以做到心胸开阔，不矜不伐。</p><p>道家认为，人通过修炼，可以不食五谷，吸风饮露，逍遥无恃，长生久视，与天地同，成为“至人”“真人”“神人”。佛教则认为人皆有佛性，通过自修，都可以达到不生不灭、断尽欲望的佛的境界。儒家自然也不例外。儒家的圣人理想，其完美与超绝不下于神仙或者佛陀。儒家经典说，所谓“圣人”，就是达到了完美境界的人。圣人通过自己的勤学苦修体悟了天理，掌握了天下万物运行的规律。因此可以“前知五百年、后知五百载”，“明并日月，化行若神”。他的一举一动，无不合宜，对内可以问心无愧、不逾规矩，对外可以经邦治国，造福于民。这就是所谓“内圣外王”。</p><p>马斯洛将人的需求分成五个层次。第一层是食色性也，第二层次是安全的生存环境，第三层次是人际交往的需要，第四个层次是功名荣耀、出人头地。最后一个层次是自我实现。所谓自我实现，就是将自身的生命能量燃烧到最充分，把自己变成一个大写的人。</p><p>以“完人”为人生目标，确实可以称得上是“取法乎上”了。曾国藩一生成功的第一个要诀，就是立志高远。这一志向，驱动他一生不在小诱惑、小目标面前止步。促使他在多大的困难面前都不苟且，不退缩。促使他“洗除旧日晻昧卑污之见，矫然直趋广大光明之域，视人世之浮荣微利，若蝇蚋之触于目而不留”。</p><p><br></p><h2 id="第二编-左侧面：收入与支出"><a href="#第二编-左侧面：收入与支出" class="headerlink" title="第二编 左侧面：收入与支出"></a>第二编 左侧面：收入与支出</h2><p>从曾国藩这个个例来看，清代的“低薪制”表面上为国家节省了财政开支，其实惩罚的是奉公守法的清廉之员，方便的是贪墨之徒。俸薄如此，“不取之百姓，势必饥寒”。国家不得不对官员们的“灰色收入”睁一只眼闭一只眼，由此使得官员贪污舞弊成为半公开的必然。</p><p>士兵们对一个军官服不服气，有两点，一是打仗时你敢不敢冲在前面，二就是看你在钱上头，干不干净。</p><p>不过身在官场，你想从始至终片礼不沾是不可能的。因为官员送礼，送的不光是钱，还是人情。你一点不收，就显得你“不近人情”，这不符合曾国藩“和光同尘”的作风，也不利于他与下属建立基本的情感联系。所以在实在拒绝不了的情况下，他会从下属送来的礼物中挑一两样价值最轻的收下来。</p><p>那么通过禁止迎送仪式、拒收礼品、约束工作人员这几方面，我们可以看出曾国藩是一个清官，为官场带来一阵新风。但是人们在历数清代著名清官时，很少有人会提到曾国藩，因为除此之外，曾国藩做官还有另外一面，就是与其他官员同流合污的一面。第一项是吃喝应酬。在官场应酬上，曾国藩并不标新立异，而是尽量从俗。第二项是冰敬、炭敬、程仪之类的“灰色支出”。</p><p>综观曾国藩一生，他的为官风格十分独特。一方面，曾国藩确实是一个清官。他的“清”货真价实，问心无愧。但另一方面，曾国藩的逸事中缺少“囊橐萧然”、“贫不能殓”、在官府里种菜吃这样容易涌动人悲情的极端化情节。在中国人眼里，真正的清官，必须“清可见底”，一尘不染，清到成为海瑞式的“自虐狂”或者“受虐狂”，才叫人佩服。曾国藩远没有清到这个程度。骨子里清廉刻苦，表面上和光同尘。这是因为曾国藩的志向不是做“清官”，而是做大事。</p><p>以海瑞为代表的传统清官，他们的特点是宁折不弯，只承认字面上的规章制度，而对事实存在的潜规则绝不妥协。所以海瑞拒绝任何灰色收入，工资不够花，不得不在官署之中自辟菜园才能维持生活，而偶尔买几斤肉也能成为“轰动性事件”。然而这样一清到底的清官，只能成为官场上的公敌，无法获得别人的配合。海瑞一清如水，必然反衬出他人的不洁。因此海瑞一生被官场排挤打击，无法调动一切可能的力量，来办成一些真正有益国计民生的大事。</p><p><br></p><h2 id="第三编-右侧面：迷信与天命"><a href="#第三编-右侧面：迷信与天命" class="headerlink" title="第三编 右侧面：迷信与天命"></a>第三编 右侧面：迷信与天命</h2><p>许多人对“超自然力量”的迷信，都是源于自身经验。</p><p>有人认为，作为“千古完人”“理学宗师”，曾国藩如此热衷风水，似乎不是什么光彩的事。其实这是一个误解。谈论风水鬼神，是理学家的本分之事。换句话说，“风水鬼神”是“理学”庞大体系之内的一个光明正大的分支。与早期儒学“六合之外，存而不论”不同，理学家们偏偏爱碰“天”“人”“性”“命”“宇宙”“人心”这样的大命题。主要原因有二：一是，理学兴起的原动力是为了与佛教抗衡。二是，儒家学说建立在宗法传统之上，异常强调慎终追远的意义，对祠堂里的那块冷猪肉特别当回事。</p><p>今人“格”物，可以站在康德、黑格尔、牛顿、爱因斯坦们的肩膀上。而曾国藩只能站在孔子和朱熹们的肩膀上。孔子和朱熹们当然也很高明，不过中世纪以前的智慧与近代知识体系毕竟不可同日而语。朱熹以“格物致知”闻名，也就是说，提倡通过研究具体事物得出普遍真理。这听起来是很现代的观念，问题是他的操作思路实在太现代了。</p><p>和风水说一样，天命说对中国人的影响也是根深蒂固的。中华民族多灾多难，所谓富不过三代，三十年河东，绝大多数中国人终生都在造物的簸弄中颠沛挣扎。对风云之变幻，祸福之旦夕，命运之无常，自身之渺小，体认极深，中国人因此成为世界上命运感最强的民族之一。</p><p>中国文化因此也痴迷于追问命运。甲骨文中绝大部分内容都是预测吉凶，六经之首的《易经》，创作初衷本也是追问天命。诸子百家的著作中，理性与非理性，命运与鬼神，神秘的“天”与世俗的“人”，也往往纠缠难分。墨子重功利，不信命运，却信鬼神。老子认为宇宙之玄，是众妙之门。庄子主张要顺从命运，“知其不可奈何而安之若命”。孔子和孟子都明确主张人要顺从命运。</p><p>而揆诸子自身，更让他体悟到天意的难以捉摸。他的一生有太多想不到。二十八岁之前，他考秀才考了七次才成功，考进士也落榜两次，可谓命运淹蹇。在前途茫茫之际，他怎么也料想不到从二十八岁起，自己的命运又变得出奇的顺利。二十八岁那年，他终于考中了进士，不过，仅列三甲第四十二名，本来没什么希望进入翰林院。据说是因为朋友的苦劝才勉强参加了朝考。结果，朝考成绩却出奇的好，列一等第三名（试卷进呈御览后，又特别提为一等第二名），因此得以入翰林院深造。这在当时，绝对是一个小概率事件。而且，在此后的京官生涯中，仅仅靠动动笔头，写写文章，就十年七迁，从道光二十年得授翰林院检讨，到道光二十九年升任礼部右侍郎，跃了十级，三十多岁就成了二品大员。“朝为田舍郎，暮登天子堂”，这是他第二个想不到。离开北京后，他又遇到第三个想不到：在太平军攻入湖南之前，他从来没想到这辈子还会领兵打仗，并且成了中国历史上最大一次农民起义战争中另一方的第一主角。回顾往事，细究天人，曾国藩恍然发觉，人生不过是一股水流，流到哪里，完全是由地形决定的。自己其实不过如一粒豆粒，在命运的簸箕中随机跃动。</p><p>他相信，太平天国能不能平，大清王朝还能存在多少年，这些大尺度的事件，不是某一个人甚至某一个集团能够决定的。在这些大事件背后，有着天时、历史、人心等诸多深层次力量，个人所能发挥的作用是很有限的。因此，他要做的，只是在可能的范围内尽自己的能力而已，而不必杞人忧天，将太多无法承受之重揽到自己肩上。</p><p>而国家的现状，更让他伤心。他早年立下内圣外王之宏愿，并为此辛苦奋斗了一生。然而在垂暮之年，他猛然发现用尽一生精力换来的“同治中兴”不过是一片虚假繁荣。他遵循圣人之道一丝不苟地苦学苦修，却并没有达到“为天地立心，为生民立命，为往圣继绝学，为万世开太平”的理想。他眼看着神州不断陆沉，自己却无能为力。他以一人之力，无法挽回传统社会积千百年形成的强大颓势。一生的奋斗，最后竟然如拔刀斫水，并不能丝毫影响水之东流。自诩为“好汉”，“平生倔强”的曾国藩在晚年却失去了当年的豪气。悲观和失望成了他晚年生命的主色调。</p><p>虽然深信天命，曾国藩一生却很少当众谈论这个话题。他在日记中写道：“圣人有所言，有所不言。积善余庆，其所言者也；万事由命不由人，其所不言者也”。也就是说，虽然天命决定一切，但是圣人们还是要自欺欺人地提倡人定胜天，告诉别人相信命运是掌握在自己手中的。他们从来不向世人揭开命运难违的悲惨真相，否则，生命这场游戏，就彻底失去了魅力。</p><p>“以不言者为体，以所言者为用，以不言者存诸心，以所言者勉诸身”，是皈依了天命说之后的曾国藩的行事策略。也就是说，以天命说来排解心中的迷惑愤懑，以天人感应说来激励自己继续奋斗。</p><p>天道忌巧，谦退不争，不伎不求。</p><p><br></p><h2 id="笨拙-与-精明"><a href="#笨拙-与-精明" class="headerlink" title="笨拙 与 精明"></a>笨拙 与 精明</h2><p>曾国藩的智商不过中等。湘乡流传着这样一个笑话，说是曾国藩在家读书，一篇短短的文章，朗诵了多少遍还背不下来。一小偷本想等他入睡后偷窃。可是左等右等 ，就是不见他睡。小偷忍无可忍，跳出来大叫：“这种笨脑袋，读什么书？！”</p><p>积苦力学的经历给了曾国藩独特的启示。他发现笨拙有笨拙的好处。笨拙的人没有智力资本，因此比别人更虚心。笨拙的人从小接受挫折教育，因此抗打击能力特别强。笨拙的人不懂取巧，遇到问题只知硬钻过去，因此不留死角。</p><p>中国式思维尚直觉，重体悟，善类比，却轻逻辑。中国式思维最大的弱点是喜欢从整体上、宏观上把握一切，却缺乏严密细致的推理过程。在这种整体论的思维方式影响下，中国知识分子总是大而化之，以一言而括万物。总想找到一个窍门，一下子把握宇宙全部规律，“放之四海而皆准”，小葱拌豆腐，三下五除二，彻底解决一切问题。</p><p>中国知识分子的缺点一个是太容易下结论，另一个太容易听信别人的结论。曾国藩却不是这样。因为“笨”，曾国藩在一切知识面前都十分谦虚，不敢稍有成见，不敢带有色眼镜去读书。因为“笨”，曾国藩不想省力，不想借用别人的脑子，每本书都要认认真真，一个字一个字地读。所以他一生视野广阔，无书不读，无学不窥。</p><p>曾国藩是一个经验主义者，凡事总愿意亲身经历，亲自体验，乐于尝试，勇于尝试，勤于尝试。他不被什么定论先入为主，总是要亲身尝试了，亲眼见到了，才下结论。</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;岁月让人从批判走向了建设&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多看书" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%9C%8B%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d之环境搭建</title>
    <link href="http://yoursite.com/2021/12/24/Cocos2d%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2021/12/24/Cocos2d%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-12-24T13:06:16.000Z</published>
    <updated>2021-12-26T13:12:39.964Z</updated>
    
    <content type="html"><![CDATA[<p>Cocos2d之环境搭建</p><a id="more"></a><p><br></p><h1 id="Cocos2d-x"><a href="#Cocos2d-x" class="headerlink" title="Cocos2d-x"></a>Cocos2d-x</h1><p><a href="https://www.cocos.com/cocos2dx" target="_blank" rel="noopener">官网 各版本压缩包地址</a></p><p>其实下载完后，按照各自的 README 按部就班配置即可</p><p><br></p><h2 id="V3-17-2"><a href="#V3-17-2" class="headerlink" title="V3.17.2"></a>V3.17.2</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ol><li><p>从官网下载压缩包并解压</p></li><li><p>查看README中 Build Requirements 项，查看依赖</p><ul><li>Python 2.7.5+(NOT Python 3)</li><li>Windows 7+, VS 2015</li><li>其他的都是出包时才用，可以先不管</li></ul></li><li><p>进入解压目录，执行 setup脚本；如果准备NDK、SDK等，则填目录，或者一路回车也可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py</span><br></pre></td></tr></table></figure></li></ol><p>执行官方样例</p><ol><li>用 Visual Studio 2015+ 打开 build/cocos2d-win32.sln<ul><li>一定要是 VS2015+</li><li>过新的VS，可能提示需要重定目标解决方案，按指示做即可</li></ul></li><li>指定一个启动项（建议 cpp-tests）生成解决方案</li><li>运行样例程序</li></ol><p>创建新工程</p><ol><li><p>执行命令创建工程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cocos new 工程名称 -p 包名 -l 语言 -d 目录</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">cocos new MyGame_3_17_2 -p com.ltree.mygame -l lua -d D:\work\cocos2d_offical\space</span><br></pre></td></tr></table></figure></li><li><p>等待工程创建完毕，进入到工程目录，找到sln文件，用VS2015+打开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">此处我创建的是lua工程，路径为：</span><br><span class="line">xxxx\MyGame_3_17_2\frameworks\runtime-src\proj.win32\MyGame_3_17_2.sln</span><br></pre></td></tr></table></figure></li><li><p>生成解决方案</p></li><li><p>运行</p></li></ol><p>问题：</p><ul><li><p>如果提示 cocos 指令不存在，可能是cocos指令文件没加入到环境变量中（之前 setup.py 脚本）；可以通过直接指定 cocos目录来执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cocos2dx根目录\tools\cocos2d-console\bin\cocos new 工程名称 -p 包名 -l 语言 -d 目录</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">D:\work\cocos2d_offical\cocos2d-x-3.17.2\tools\cocos2d-console\bin\cocos new MyGame_3_17_2 -p com.ltree.mygame -l lua -d D:\work\cocos2d_offical\space</span><br></pre></td></tr></table></figure></li><li><p>cocos其他配置，可通过 -h 来看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cocos -h</span><br></pre></td></tr></table></figure></li></ul><p><br></p><p><br></p><h2 id="V4-0"><a href="#V4-0" class="headerlink" title="V4.0"></a>V4.0</h2><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><ol><li><p>从官网下载压缩包并解压</p></li><li><p>查看README中 Build Requirements 项，查看依赖</p><ul><li>Python 2.7.5+(NOT Python 3)</li><li>Windows 7+, VS 2015</li><li>cmake</li><li>其他的都是出包时才用，可以先不管</li></ul></li><li><p>进入解压目录，执行 setup脚本；如果准备NDK、SDK等，则填目录，或者一路回车也可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py</span><br></pre></td></tr></table></figure></li></ol><p>执行官方样例</p><ol><li><p>创建编译文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir win32-build</span><br><span class="line"><span class="built_in">cd</span> win32-build</span><br></pre></td></tr></table></figure></li><li><p>执行 cmake 编译，注意64位/32位问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmake 路径 -G<span class="string">"编译版本"</span></span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">cmake .. -G<span class="string">"Visual Studio 17 2022"</span> -A win32</span><br></pre></td></tr></table></figure></li><li><p>等待编译完毕，进入自己创建的编译目录，找到sln文件，用VS2015+打开</p></li><li><p>生成解决方案</p></li><li><p>运行</p></li></ol><p>创建新工程</p><ol><li><p>执行命令创建工程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cocos new 工程名称 -p 包名 -l 语言 -d 目录</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">cocos new MyGame_4_0_0 -p com.ltree.mygame -l lua -d D:\work\cocos2d_offical\space</span><br></pre></td></tr></table></figure></li><li><p>创建编译文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br></pre></td></tr></table></figure></li><li><p>执行 cmake 编译，注意64位/32位问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmake 路径 -G<span class="string">"编译版本"</span></span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">cmake .. -G<span class="string">"Visual Studio 17 2022"</span> -A win32</span><br></pre></td></tr></table></figure></li><li><p>等待编译完毕，进入自己创建的编译目录，找到sln文件，用VS2015+打开</p></li><li><p>生成解决方案</p></li><li><p>运行</p></li></ol><p>问题：</p><ul><li><p>不知道当前编译的VS版本，通过命令可以查询，会列出所有选项，根据自己情况选择</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -G</span><br></pre></td></tr></table></figure></li><li><p>编译失败，如下错误，是由于默认编译 64位导致，可以在cmake时指定编译32位，就是后面 -A win32</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">错误信息：</span><br><span class="line">error C2065: “GWL_WNDPROC”: 未声明的标识符</span><br></pre></td></tr></table></figure></li><li><p>如果提示 cocos 指令不存在，可能是cocos指令文件没加入到环境变量中（之前 setup.py 脚本）；可以通过直接指定 cocos目录来执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cocos2dx根目录\tools\cocos2d-console\bin\cocos new 工程名称 -p 包名 -l 语言 -d 目录</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">D:\work\cocos2d_offical\cocos2d-x-3.17.2\tools\cocos2d-console\bin\cocos new MyGame_3_17_2 -p com.ltree.mygame -l lua -d D:\work\cocos2d_offical\space</span><br></pre></td></tr></table></figure></li><li><p>cocos其他配置，可通过 -h 来看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cocos -h</span><br></pre></td></tr></table></figure></li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cocos2d之环境搭建&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
      <category term="Cocos2d" scheme="http://yoursite.com/tags/Cocos2d/"/>
    
  </entry>
  
</feed>
