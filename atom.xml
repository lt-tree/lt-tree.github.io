<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tree House</title>
  
  <subtitle>不如自挂东南枝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2022-04-05T15:29:29.714Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ltree98</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全球化处理之时间</title>
    <link href="http://yoursite.com/2022/04/05/%E5%85%A8%E7%90%83%E5%8C%96%E5%A4%84%E7%90%86%E4%B9%8B%E6%97%B6%E9%97%B4/"/>
    <id>http://yoursite.com/2022/04/05/%E5%85%A8%E7%90%83%E5%8C%96%E5%A4%84%E7%90%86%E4%B9%8B%E6%97%B6%E9%97%B4/</id>
    <published>2022-04-05T15:06:16.000Z</published>
    <updated>2022-04-05T15:29:29.714Z</updated>
    
    <content type="html"><![CDATA[<p>处理全球化问题的重要部分，时间处理。</p><a id="more"></a><p><br></p><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h2><p>距离某一时刻的到现在所经过的秒数(毫秒数)，通常用字符串表示。<br>一般取 格林威治时间 1970年01月01日00时00分00秒，即 1970-01-01 00:00:00 UTC<br>同一时刻，全球各时区的时间戳是一致的，并不会根据时区而变化。</p><p><br></p><p><br></p><h2 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h2><p>由于世界各地区的经度不同，地方时也有所不同，为了克服各时间上的混乱，划分时区。</p><p>1884年在华盛顿召开的国际经度会议上，规定将全球划分为24个时区，中时区（零时区）、东1-12区，西1-12区，每个时区横跨经度15度，时间正好1小时，最后东西12区，各跨经度7.5度，以东西经180度为界。</p><p>实际上，很多国家或地区都不严格按照时区来计算时间，时区的划分是为了方便沟通克服混乱，以中国为例，横跨5个时区，但一般都只用北京时间作为标准（东八区）。</p><p><img src="24时区.jpeg" alt=""></p><p><br></p><p><br></p><h2 id="GMT-amp-UTC"><a href="#GMT-amp-UTC" class="headerlink" title="GMT &amp; UTC"></a>GMT &amp; UTC</h2><p>GMT</p><ul><li>Greenwich Mean Time</li><li>格林威治标准时间、世界时</li><li>GMT以地球自转运动为标准的时间计量系统</li></ul><p>UTC</p><ul><li>Universal Time Cooridinated</li><li>协调世界时、世界统一时间、世界标准时间、国际协调时间</li><li>UTC是以原子时秒长为基础，在时刻上尽量接近于世界时的一种时间计量系统，更加精准，广泛用在科技领域<ul><li>原子时：物质的原子内部发射的电磁振荡频率为基准的时间计量系统</li></ul></li></ul><p>划分24时区后，东时区可表示为 GMT/UTC +1, GMT/UTC +2 …，西时区可表示为 GMT/UTC -1, GMT/UTC -2 …</p><p><br></p><p><br></p><h2 id="夏令时-amp-冬令时"><a href="#夏令时-amp-冬令时" class="headerlink" title="夏令时 &amp; 冬令时"></a>夏令时 &amp; 冬令时</h2><p>出于种种原因，推行一种时间机制，在一年的某个时间开始，把时间调快一个小时，某个时间之后，再把时间调慢一个小时。<br>将时间调快后到下次调慢前的这段时间，称为夏令时；以此衍生出冬令时概念，就是与夏令时对应，其实可以理解为正常的时间。<br>这种方式的好处，据说节能减排等，没感觉到，但是弊端，计时混乱却显而易见，中国曾在1986年至1991年实行过，后面就不再实行了。</p><p>不管是夏令时还是所谓的冬令时，最大的问题是在于 时间调快 和 时间调慢 的那两个时间点；正常两天的时间间隔是 86400 秒，但是时间被调整的那天时间间隔将变成 82800 秒 和 90000 秒。</p><p>以时区 UTC -5 东部时间（美国和加拿大）为例，时间戳与对应日期如下</p><p>2022-03-11 06:00:00  1646996400<br>2022-03-12 06:00:00  1647082800<br>2022-03-13 06:00:00  1647165600<br>2022-03-14 06:00:00  1647252000</p><p>2022-11-05 06:00:00  1667642400<br>2022-11-06 06:00:00  1667732400<br>2022-11-07 06:00:00  1667818800</p><p>2022年3月12日到2022年3月13日 6点，时间戳间隔是 82800 秒<br>2022年11月5日到2022年11月6日 6点，时间戳间隔是 90000 秒</p><p><br></p><p><br></p><p><br></p><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h2 id="lua时间方法"><a href="#lua时间方法" class="headerlink" title="lua时间方法"></a>lua时间方法</h2><p>lua中主要有这几种方法来做时间相关转换</p><ul><li>os.time</li><li>os.date</li></ul><p>os.time([table])</p><ul><li>return: string<ul><li>时间戳字符串</li></ul></li><li>param: table<ul><li>[可选参数] table<ul><li>若不传参数，则返回当前时间时间戳；若传参，返回参数指定时间（年月日时分秒及是否夏令时）时间戳</li><li>table结构，必须包含字段 year、month、day，可选包含 hour(默认12)、min(默认0)、sec(默认0)、isdst(默认nil)</li></ul></li></ul></li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 环境：系统时区为 UTC -5  东部时间（美国加拿大）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">date</span> = &#123;</span><br><span class="line">    year = <span class="number">2021</span>,        <span class="comment">-- 年</span></span><br><span class="line">    month = <span class="number">1</span>,          <span class="comment">-- 月</span></span><br><span class="line">    day = <span class="number">1</span>,            <span class="comment">-- 日</span></span><br><span class="line">    hour = <span class="number">0</span>,           <span class="comment">-- 时</span></span><br><span class="line">    <span class="built_in">min</span> = <span class="number">0</span>,            <span class="comment">-- 分</span></span><br><span class="line">    sec = <span class="number">0</span>,            <span class="comment">-- 秒</span></span><br><span class="line">    isdst = <span class="literal">false</span>,      <span class="comment">-- 是否夏令时</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">time</span>())            <span class="comment">-- 1647329606</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">time</span>(<span class="built_in">date</span>))        <span class="comment">-- 1609477200</span></span><br></pre></td></tr></table></figure><p>os.date([format [, time]])</p><ul><li>return: string/table <ul><li>返回包含日期及时间的字符串或表结构</li></ul></li><li>param: string, string<ul><li>[可选参数] format, 格式<ul><li>前缀为 ‘!’ 则代表以UTC格式化</li><li>*t 代表返回table结构，其他则返回string结构</li><li>对于字符串的情况，可以预制一些参数，方便填充</li></ul></li><li>[可选参数] time, 时间戳<ul><li>若不传，则使用当前的时间戳</li></ul></li></ul></li></ul><p>format格式符</p><table><thead><tr><th>格式符</th><th>含义</th><th>样例</th></tr></thead><tbody><tr><td>%Y</td><td>年</td><td>2022</td></tr><tr><td>%y</td><td>年（后两位数）</td><td>22</td></tr><tr><td>%m</td><td>月</td><td>2</td></tr><tr><td>%d</td><td>日</td><td>20</td></tr><tr><td>%H</td><td>时（24小时制）</td><td>15</td></tr><tr><td>%I</td><td>时（12小时制）</td><td>3</td></tr><tr><td>%M</td><td>分</td><td>30</td></tr><tr><td>%S</td><td>秒</td><td>20</td></tr><tr><td>%x</td><td>日期</td><td>03/15/22</td></tr><tr><td>%X</td><td>时间</td><td>05:05:35</td></tr><tr><td>%c</td><td>日期和时间</td><td>03/15/22 05:05:35</td></tr><tr><td>%P</td><td>上午/下午</td><td>am/pm</td></tr><tr><td>%a</td><td>星期（简写）</td><td>Fri</td></tr><tr><td>%A</td><td>星期（全写）</td><td>Friday</td></tr><tr><td>%b</td><td>月份（简写）</td><td>Sep</td></tr><tr><td>%B</td><td>月份（全写）</td><td>September</td></tr><tr><td>%w</td><td>该星期中第几天</td><td>2 (0-6, 周日-周六)</td></tr><tr><td>%W</td><td>该年中第几星期</td><td>4</td></tr><tr><td>%j</td><td>该年中第几天</td><td>230</td></tr><tr><td>%%</td><td>字符串’%’</td><td>%</td></tr></tbody></table><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 环境：系统时区为 UTC -5  东部时间（美国加拿大）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">date</span>())</span><br><span class="line"><span class="comment">-- 03/15/22 05:05:35</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">"*t"</span>))</span><br><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">"&lt;var&gt;" = &#123;</span></span><br><span class="line"><span class="comment">    "day"   = 15        日</span></span><br><span class="line"><span class="comment">    "hour"  = 5         时</span></span><br><span class="line"><span class="comment">    "isdst" = true      是否夏令时</span></span><br><span class="line"><span class="comment">    "min"   = 5         分</span></span><br><span class="line"><span class="comment">    "month" = 3         月</span></span><br><span class="line"><span class="comment">    "sec"   = 35        秒</span></span><br><span class="line"><span class="comment">    "wday"  = 3         星期几（星期天为1，星期一为2，以此类推）</span></span><br><span class="line"><span class="comment">    "yday"  = 74        当年第几天</span></span><br><span class="line"><span class="comment">    "year"  = 2022      年</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">--]]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">"!*t"</span>))</span><br><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">"&lt;var&gt;" = &#123;</span></span><br><span class="line"><span class="comment">    "day"   = 15</span></span><br><span class="line"><span class="comment">    "hour"  = 9</span></span><br><span class="line"><span class="comment">    "isdst" = false</span></span><br><span class="line"><span class="comment">    "min"   = 5</span></span><br><span class="line"><span class="comment">    "month" = 3</span></span><br><span class="line"><span class="comment">    "sec"   = 35</span></span><br><span class="line"><span class="comment">    "wday"  = 3</span></span><br><span class="line"><span class="comment">    "yday"  = 74</span></span><br><span class="line"><span class="comment">    "year"  = 2022</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="literal">nil</span>, <span class="number">1647329606</span>))</span><br><span class="line"><span class="comment">-- 03/15/22 03:33:26</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">"*t"</span>, <span class="number">1647329606</span>))</span><br><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">"&lt;var&gt;" = &#123;</span></span><br><span class="line"><span class="comment">    "day"   = 15</span></span><br><span class="line"><span class="comment">    "hour"  = 3</span></span><br><span class="line"><span class="comment">    "isdst" = true</span></span><br><span class="line"><span class="comment">    "min"   = 33</span></span><br><span class="line"><span class="comment">    "month" = 3</span></span><br><span class="line"><span class="comment">    "sec"   = 26</span></span><br><span class="line"><span class="comment">    "wday"  = 3</span></span><br><span class="line"><span class="comment">    "yday"  = 74</span></span><br><span class="line"><span class="comment">    "year"  = 2022</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">"!*t"</span>, <span class="number">1647329606</span>))</span><br><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">"&lt;var&gt;" = &#123;</span></span><br><span class="line"><span class="comment">    "day"   = 15</span></span><br><span class="line"><span class="comment">    "hour"  = 7</span></span><br><span class="line"><span class="comment">    "isdst" = false</span></span><br><span class="line"><span class="comment">    "min"   = 33</span></span><br><span class="line"><span class="comment">    "month" = 3</span></span><br><span class="line"><span class="comment">    "sec"   = 26</span></span><br><span class="line"><span class="comment">    "wday"  = 3</span></span><br><span class="line"><span class="comment">    "yday"  = 74</span></span><br><span class="line"><span class="comment">    "year"  = 2022</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">]]</span></span><br></pre></td></tr></table></figure><p><br></p><p><br></p><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><p>作为处理时间的工具类，要考虑几个问题</p><ul><li>时间戳</li><li>客户端时区（本地时区）</li><li>服务器时区</li></ul><p>一般来说，禁止使用本地时间进行计算，都是用服务器时间进行计算，但是在时间戳与实践转换时，不可避免受到本地时区影响，要注意将这些影响消除掉，尤其是在做全球化的游戏。<br>就是一旦用到Lua自带的 os.time / os.date 方法，必然会带上本地的时区去计算，所以要转换成时间戳，就需要将本地时区的影响消除。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">    Filename:    TimeUtils.lua</span></span><br><span class="line"><span class="comment">    Author:      ltree98</span></span><br><span class="line"><span class="comment">    Des:</span></span><br><span class="line"><span class="comment">        定义：</span></span><br><span class="line"><span class="comment">        时间戳 - 0时区，现在距离某一时刻（一般为 1970年01月01日 00时:00分:00秒）经历的秒数</span></span><br><span class="line"><span class="comment">        时区 - 克服时间上的混乱，划分出时区</span></span><br><span class="line"><span class="comment">        夏令时/冬令时 - 在一年的某一时刻开始，把时间调快一小时，某一时刻之后，再把时间调慢一小时</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        时间 - 可理解为 时间戳 + 时区</span></span><br><span class="line"><span class="comment">        客户端时间（本地时间）- 时间戳 + 客户端所在时区</span></span><br><span class="line"><span class="comment">        服务器时间 - 时间戳 + 服务器所在时区</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Notion1: </span></span><br><span class="line"><span class="comment">            format格式符对应含义</span></span><br><span class="line"><span class="comment">            | %Y | 年 | 2022 |</span></span><br><span class="line"><span class="comment">            | %y | 年（后两位数）| 22 |</span></span><br><span class="line"><span class="comment">            | %m | 月 | 02 |</span></span><br><span class="line"><span class="comment">            | %d | 日 | 20 |</span></span><br><span class="line"><span class="comment">            | %H | 时（24小时制） | 15 |</span></span><br><span class="line"><span class="comment">            | %I | 时（12小时制） | 03 |</span></span><br><span class="line"><span class="comment">            | %M | 分 | 30 |</span></span><br><span class="line"><span class="comment">            | %S | 秒 | 20 |</span></span><br><span class="line"><span class="comment">            | %x | 日期 | 03/15/22 |</span></span><br><span class="line"><span class="comment">            | %X | 时间 | 05:05:35 |</span></span><br><span class="line"><span class="comment">            | %c | 日期和时间 | 03/15/22 05:05:35 |</span></span><br><span class="line"><span class="comment">            | %p | 上午/下午 | AM/PM |</span></span><br><span class="line"><span class="comment">            | %a | 星期（简写） | Fri |</span></span><br><span class="line"><span class="comment">            | %A | 星期（全写） | Friday |</span></span><br><span class="line"><span class="comment">            | %b | 月份（简写） | Sep |</span></span><br><span class="line"><span class="comment">            | %B | 月份（全写） | September |</span></span><br><span class="line"><span class="comment">            | %w | 该星期中第几天 | 2 (0-6, 周日-周六) |</span></span><br><span class="line"><span class="comment">            | %W | 该年中第几星期 | 11 |</span></span><br><span class="line"><span class="comment">            | %j | 该年中第几天 | 074 |</span></span><br><span class="line"><span class="comment">            | %% | 字符串'%' | % |</span></span><br><span class="line"><span class="comment">--]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">----------------------------------------</span></span><br><span class="line"><span class="comment">-- global variable</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">os</span> = <span class="built_in">os</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">math</span> = <span class="built_in">math</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">string</span> = <span class="built_in">string</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">tonumber</span> = <span class="built_in">tonumber</span></span><br><span class="line"></span><br><span class="line"><span class="comment">----------------------------------------</span></span><br><span class="line"><span class="comment">-- const value</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="keyword">local</span> TIMEZONE_PREFIX = <span class="string">"UTC "</span>                  <span class="comment">-- GMT/UTC</span></span><br><span class="line"><span class="keyword">local</span> DEFAULT_RESET_TIME = <span class="string">"05:00:00"</span>           </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> TimeUtils = &#123;</span><br><span class="line">    <span class="comment">-- 本地时间戳 &amp; 本地时区</span></span><br><span class="line">    clientUTC = <span class="literal">nil</span>,</span><br><span class="line">    clientTimezone = <span class="number">0</span>,</span><br><span class="line">    clientTimezoneDes = <span class="string">""</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 服务器时间戳 &amp; 服务器时区</span></span><br><span class="line">    serverUTC = <span class="literal">nil</span>,</span><br><span class="line">    serverTimezone = <span class="number">3600</span>,</span><br><span class="line">    serverTimezoneDes = <span class="string">""</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> timezone2des = <span class="function"><span class="keyword">function</span><span class="params">(timezone)</span></span></span><br><span class="line">    <span class="keyword">local</span> prefix = TIMEZONE_PREFIX</span><br><span class="line">    <span class="keyword">if</span> timezone &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        prefix = prefix .. <span class="string">'+'</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> prefix .. timezone / <span class="number">3600</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> refreshLocalTime = <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">local</span> now = <span class="built_in">os</span>.<span class="built_in">time</span>()</span><br><span class="line">    <span class="keyword">local</span> timezone = <span class="built_in">os</span>.<span class="built_in">difftime</span>(now, <span class="built_in">os</span>.<span class="built_in">time</span>(<span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">"!*t"</span>, now)))</span><br><span class="line"></span><br><span class="line">    TimeUtils.clientUTC = now</span><br><span class="line">    TimeUtils.clientTimezone = timezone</span><br><span class="line">    TimeUtils.clientTimezoneDes = timezone2des(timezone)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">refreshLocalTime()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- private</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 解析日期格式</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">        支持格式：</span></span><br><span class="line"><span class="comment">            年-月-日 时:分:秒    例：2022-03-23 15:30:00</span></span><br><span class="line"><span class="comment">            年/月/日 时/分/秒    例: 2022/03/23 15/30/00 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    dateDes: string</span></span><br><span class="line"><span class="comment">        日期格式</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        table: 年月日，&#123;1 = 年, 2 = 月, 3 = 日&#125;</span></span><br><span class="line"><span class="comment">        table: 时分秒，&#123;1 = 时, 2 = 分, 3 = 秒&#125;</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"><span class="keyword">local</span> analyseDateFormat = <span class="function"><span class="keyword">function</span><span class="params">(dateDes)</span></span></span><br><span class="line">    <span class="keyword">local</span> t = <span class="built_in">string</span>.split(dateDes, <span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">local</span> tDate, tTime, splitFlag</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">len</span> = #t</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span> &gt; <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        splitFlag = <span class="built_in">string</span>.<span class="built_in">find</span>(t[<span class="number">1</span>], <span class="string">'-'</span>) <span class="keyword">and</span> <span class="string">'-'</span> <span class="keyword">or</span> <span class="string">'/'</span></span><br><span class="line">        tDate = <span class="built_in">string</span>.split(t[<span class="number">1</span>], splitFlag)</span><br><span class="line">        </span><br><span class="line">        splitFlag = <span class="built_in">string</span>.<span class="built_in">find</span>(t[<span class="number">2</span>], <span class="string">':'</span>) <span class="keyword">and</span> <span class="string">':'</span> <span class="keyword">or</span> <span class="string">'/'</span></span><br><span class="line">        tTime = <span class="built_in">string</span>.split(t[<span class="number">2</span>], splitFlag)</span><br><span class="line">    <span class="keyword">elseif</span> <span class="built_in">len</span> &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        tDate = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">        </span><br><span class="line">        splitFlag = <span class="built_in">string</span>.<span class="built_in">find</span>(t[<span class="number">1</span>], <span class="string">':'</span>) <span class="keyword">and</span> <span class="string">':'</span> <span class="keyword">or</span> <span class="string">'/'</span></span><br><span class="line">        tTime = <span class="built_in">string</span>.split(t[<span class="number">1</span>], splitFlag)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        tDate = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">        tTime = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tDate, tTime</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将服务器时间转换为时间戳</span></span><br><span class="line"><span class="keyword">local</span> getTimestampByServerDate = <span class="function"><span class="keyword">function</span><span class="params">(dateDes)</span></span></span><br><span class="line">    <span class="keyword">local</span> tDate, tTime = analyseDateFormat(dateDes)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> timestamp = TimeUtils.<span class="built_in">time</span>(&#123;</span><br><span class="line">        year = tDate[<span class="number">1</span>],</span><br><span class="line">        month = tDate[<span class="number">2</span>],</span><br><span class="line">        day = tDate[<span class="number">3</span>],</span><br><span class="line">        hour = tTime[<span class="number">1</span>],</span><br><span class="line">        <span class="built_in">min</span> = tTime[<span class="number">2</span>],</span><br><span class="line">        sec = tTime[<span class="number">3</span>],</span><br><span class="line">    &#125;) <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- check summer time</span></span><br><span class="line">    <span class="keyword">if</span> TimeUtils.<span class="built_in">date</span>(<span class="string">"*t"</span>, timestamp).isdst <span class="keyword">then</span> </span><br><span class="line">        timestamp = timestamp + <span class="number">3600</span> </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- check time zone</span></span><br><span class="line">    timestamp = timestamp + TimeUtils.clientTimezone    </span><br><span class="line">    <span class="keyword">if</span> TimeUtils.serverTimezone <span class="keyword">then</span></span><br><span class="line">        timestamp = timestamp - TimeUtils.serverTimezone</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> timestamp</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将客户端时间转换为时间戳</span></span><br><span class="line"><span class="keyword">local</span> getTimestampByLocalDate = <span class="function"><span class="keyword">function</span><span class="params">(dateDes)</span></span></span><br><span class="line">    <span class="keyword">local</span> tDate, tTime = analyseDateFormat(dateDes)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> timestamp = TimeUtils.<span class="built_in">time</span>(&#123;</span><br><span class="line">        year = tDate[<span class="number">1</span>],</span><br><span class="line">        month = tDate[<span class="number">2</span>],</span><br><span class="line">        day = tDate[<span class="number">3</span>],</span><br><span class="line">        hour = tTime[<span class="number">1</span>],</span><br><span class="line">        <span class="built_in">min</span> = tTime[<span class="number">2</span>],</span><br><span class="line">        sec = tTime[<span class="number">3</span>],</span><br><span class="line">    &#125;) <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- check summer time</span></span><br><span class="line">    <span class="keyword">if</span> TimeUtils.<span class="built_in">date</span>(<span class="string">"*t"</span>, timestamp).isdst <span class="keyword">then</span> </span><br><span class="line">        timestamp = timestamp + <span class="number">3600</span> </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    timestamp = timestamp + TimeUtils.clientTimezone</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> timestamp</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- override</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 封装Lua os.time, 外部禁止直接调用 os.time ]]</span></span><br><span class="line">TimeUtils.<span class="built_in">time</span> = <span class="function"><span class="keyword">function</span><span class="params">(param)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">os</span>.<span class="built_in">time</span>(param)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 封装Lua os.date, 外部禁止直接调用 os.date ]]</span></span><br><span class="line">TimeUtils.<span class="built_in">date</span> = <span class="function"><span class="keyword">function</span><span class="params">(format, time)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">os</span>.<span class="built_in">date</span>(<span class="built_in">format</span>, <span class="built_in">time</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 封装Lua os.difftime, 外部禁止直接调用 os.difftime ]]</span></span><br><span class="line">TimeUtils.<span class="built_in">difftime</span> = <span class="function"><span class="keyword">function</span><span class="params">(t2, t1)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">os</span>.<span class="built_in">difftime</span>(t2, t1)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- interface</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[ DESC: 更新服务器时间戳及时区 ]]</span></span><br><span class="line">TimeUtils.updateServerTime = <span class="function"><span class="keyword">function</span><span class="params">(timestamp, timezone)</span></span></span><br><span class="line">    TimeUtils.serverUTC = timestamp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> timezone <span class="keyword">then</span></span><br><span class="line">        TimeUtils.serverTimezone = timezone <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">        TimeUtils.serverTimezoneDes = timezone2des(timezone)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 根据时间戳与格式填充日期信息</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        替换lua的os.date方法，</span></span><br><span class="line"><span class="comment">        如果有服务器时区，计算服务器时区，转化为格林尼治时间</span></span><br><span class="line"><span class="comment">        如果无服务器时区，转化为本地时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    [format]: string</span></span><br><span class="line"><span class="comment">        日期格式，默认 "%Y-%m-%d %H:%M:%S"</span></span><br><span class="line"><span class="comment">    [isLocalTime]: bool[false]</span></span><br><span class="line"><span class="comment">        本地时间</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        string: 根据格式填充后的日期信息</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.serverDate = <span class="function"><span class="keyword">function</span><span class="params">(timestamp, format, isLocalTime)</span></span></span><br><span class="line">    timestamp = timestamp <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">    isLocalTime = isLocalTime <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line">    <span class="built_in">format</span> = <span class="built_in">format</span> <span class="keyword">or</span> <span class="string">"%Y-%m-%d %H:%M:%S"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> isLocalTime <span class="keyword">or</span> TimeUtils.serverTimezone == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> TimeUtils.<span class="built_in">date</span>(<span class="built_in">format</span>, timestamp)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        timestamp = timestamp + TimeUtils.serverTimezone</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TimeUtils.<span class="built_in">date</span>(<span class="string">'!'</span> .. <span class="built_in">format</span>, timestamp)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 格式化时间戳</span></span><br><span class="line"><span class="comment">    格式化相关含义，可见顶部文件注释，Notion1-format格式符含义</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    [format]: string</span></span><br><span class="line"><span class="comment">        格式</span></span><br><span class="line"><span class="comment">            格式符可见文件顶部注释</span></span><br><span class="line"><span class="comment">            若要获取详细表结构，可传 '*t'</span></span><br><span class="line"><span class="comment">    [timezoneType]: 0/1/2</span></span><br><span class="line"><span class="comment">        计算的时区类型</span></span><br><span class="line"><span class="comment">            1 - 算上客户端时区</span></span><br><span class="line"><span class="comment">            2 - 算上服务器时区</span></span><br><span class="line"><span class="comment">            其他 - 不算时区（0时区）</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        string/table: 格式化后的时间字符串或表结构</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.formatTime = <span class="function"><span class="keyword">function</span><span class="params">(timestamp, format, timezoneType)</span></span></span><br><span class="line">    <span class="built_in">format</span> = <span class="built_in">format</span> <span class="keyword">or</span> <span class="string">"%Y-%m-%d %H:%M:%S"</span></span><br><span class="line">    timezoneType = timezoneType <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> timezoneType == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        timestamp = timestamp - TimeUtils.clientTimezone</span><br><span class="line">    <span class="keyword">elseif</span> timezoneType == <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">        timestamp = timestamp + TimeUtils.serverTimezone</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">format</span> = <span class="string">'!'</span> .. <span class="built_in">format</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TimeUtils.<span class="built_in">date</span>(<span class="built_in">format</span>, timestamp)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 秒数转换为 时:分:秒 形式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    seconds: int</span></span><br><span class="line"><span class="comment">        秒数</span></span><br><span class="line"><span class="comment">    [gapFlag]: string[':']</span></span><br><span class="line"><span class="comment">        小时，分钟，秒 之间的分割符，默认 ':'</span></span><br><span class="line"><span class="comment">    [fillWithZero]: bool[false]</span></span><br><span class="line"><span class="comment">        填充0</span></span><br><span class="line"><span class="comment">    [unitType]: int[0]</span></span><br><span class="line"><span class="comment">        单位类型，默认0</span></span><br><span class="line"><span class="comment">        其他 - 2 11:20:35</span></span><br><span class="line"><span class="comment">        1 - 2D 11H:20M:35S</span></span><br><span class="line"><span class="comment">        2 - 2d 11h:20m:35s</span></span><br><span class="line"><span class="comment">        3 - 2天 11时:20分:35秒</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        是否带单位，比如 xx天 xx时:xx分钟:xx秒数</span></span><br><span class="line"><span class="comment">    [assignType]: int[0]</span></span><br><span class="line"><span class="comment">        强制位数，默认0</span></span><br><span class="line"><span class="comment">        0 - 不强制</span></span><br><span class="line"><span class="comment">        1 - 强制显示到天</span></span><br><span class="line"><span class="comment">        2 - 强制显示到时</span></span><br><span class="line"><span class="comment">        3 - 强制显示到分</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        string: 按要求转换后的时间字符串</span></span><br><span class="line"><span class="comment">        array: 时间结构，索引从1开始对应 &#123;天, 时, 分, 秒&#125;</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"><span class="keyword">local</span> UNIT_TYPE_MAP = &#123;</span><br><span class="line">    [<span class="number">1</span>] = &#123;<span class="string">'D'</span>, <span class="string">'H'</span>, <span class="string">'M'</span>, <span class="string">'S'</span>&#125;,</span><br><span class="line">    [<span class="number">2</span>] = &#123;<span class="string">'d'</span>, <span class="string">'h'</span>, <span class="string">'m'</span>, <span class="string">'s'</span>&#125;,</span><br><span class="line">    [<span class="number">3</span>] = &#123;<span class="string">'天'</span>, <span class="string">'时'</span>, <span class="string">'分'</span>, <span class="string">'秒'</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> UNIT_TO_SEC = &#123;<span class="number">86400</span>, <span class="number">3600</span>, <span class="number">60</span>, <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line">TimeUtils.convertSecToDate = <span class="function"><span class="keyword">function</span><span class="params">(seconds, gapFlag, fillWithZero, unitType, assignType)</span></span></span><br><span class="line">    gapFlag = gapFlag <span class="keyword">or</span> <span class="string">':'</span></span><br><span class="line">    fillWithZero = fillWithZero <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line">    assignType = assignType <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">local</span> unitMap = UNIT_TYPE_MAP[unitType <span class="keyword">or</span> <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> assemblyPart</span><br><span class="line">    assemblyPart = <span class="function"><span class="keyword">function</span><span class="params">(des, type)</span></span></span><br><span class="line">        <span class="keyword">if</span> fillWithZero <span class="keyword">then</span> </span><br><span class="line">            des = des .. <span class="string">"%02d"</span> </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            des = des .. <span class="string">'%d'</span> </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> unitMap <span class="keyword">then</span> des = des .. unitMap[<span class="built_in">type</span>] <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 天</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            des = des .. <span class="string">' '</span></span><br><span class="line">            des = assemblyPart(des , <span class="built_in">type</span> + <span class="number">1</span>)</span><br><span class="line">        <span class="comment">-- 时</span></span><br><span class="line">        <span class="keyword">elseif</span> <span class="built_in">type</span> == <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">            des = des .. gapFlag</span><br><span class="line">            des = assemblyPart(des , <span class="built_in">type</span> + <span class="number">1</span>)</span><br><span class="line">        <span class="comment">-- 分</span></span><br><span class="line">        <span class="keyword">elseif</span> <span class="built_in">type</span> == <span class="number">3</span> <span class="keyword">then</span></span><br><span class="line">            des = des .. gapFlag</span><br><span class="line">            des = assemblyPart(des , <span class="built_in">type</span> + <span class="number">1</span>)</span><br><span class="line">        <span class="comment">-- 秒</span></span><br><span class="line">        <span class="keyword">elseif</span> <span class="built_in">type</span> == <span class="number">4</span> <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- pass</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> des</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> day = <span class="built_in">math</span>.<span class="built_in">floor</span>(seconds / <span class="number">86400</span>)</span><br><span class="line">    <span class="keyword">local</span> hour = <span class="built_in">math</span>.<span class="built_in">floor</span>(seconds / <span class="number">3600</span>) % <span class="number">24</span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">min</span> = <span class="built_in">math</span>.<span class="built_in">floor</span>(seconds / <span class="number">60</span>) % <span class="number">60</span></span><br><span class="line">    <span class="keyword">local</span> sec = seconds % <span class="number">60</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">format</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">local</span> timeStr = <span class="string">""</span></span><br><span class="line">    <span class="keyword">if</span> day &gt; <span class="number">0</span> <span class="keyword">or</span> assignType == <span class="number">1</span> <span class="keyword">then</span> </span><br><span class="line">        <span class="built_in">format</span> = assemblyPart(<span class="built_in">format</span>, <span class="number">1</span>)</span><br><span class="line">        timeStr = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="built_in">format</span>, day, hour, <span class="built_in">min</span>, sec)</span><br><span class="line">    <span class="keyword">elseif</span> hour &gt; <span class="number">0</span> <span class="keyword">or</span> assignType == <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">format</span> = assemblyPart(<span class="built_in">format</span>, <span class="number">2</span>)</span><br><span class="line">        timeStr = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="built_in">format</span>, hour, <span class="built_in">min</span>, sec)</span><br><span class="line">    <span class="keyword">elseif</span> <span class="built_in">min</span> &gt; <span class="number">0</span> <span class="keyword">or</span> assignType == <span class="number">3</span> <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">format</span> = assemblyPart(<span class="built_in">format</span>, <span class="number">3</span>)</span><br><span class="line">        timeStr = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="built_in">format</span>, <span class="built_in">min</span>, sec)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">format</span> = assemblyPart(<span class="built_in">format</span>, <span class="number">4</span>)</span><br><span class="line">        timeStr = <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="built_in">format</span>, sec)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> timeStr, &#123;day, hour, <span class="built_in">min</span>, sec&#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 将 时:分:秒 转换为 秒数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    format: string</span></span><br><span class="line"><span class="comment">        时间格式</span></span><br><span class="line"><span class="comment">    [gapFlag]: string[':']</span></span><br><span class="line"><span class="comment">        小时，分钟，秒 之间的分割符，默认 ':'</span></span><br><span class="line"><span class="comment">    [unitType]: int[0]</span></span><br><span class="line"><span class="comment">        单位类型，默认0</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    return：</span></span><br><span class="line"><span class="comment">        int: 秒数</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.convertDateToSec = <span class="function"><span class="keyword">function</span><span class="params">(dateDes, gapFlag, unitType)</span></span></span><br><span class="line">    gapFlag = gapFlag <span class="keyword">or</span> <span class="string">':'</span></span><br><span class="line">    <span class="keyword">local</span> unitMap = UNIT_TYPE_MAP[unitType <span class="keyword">or</span> <span class="number">0</span>] <span class="keyword">or</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> sec = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> t = <span class="built_in">string</span>.split(dateDes, <span class="string">' '</span>)</span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">len</span> = #t</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span> &gt; <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> days = <span class="built_in">string</span>.split(t[<span class="number">1</span>], unitMap[<span class="number">1</span>])</span><br><span class="line">        sec = sec + days[<span class="number">1</span>] * UNIT_TO_SEC[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">local</span> times = <span class="built_in">string</span>.split(t[<span class="number">2</span>], gapFlag)</span><br><span class="line">        <span class="keyword">for</span> i = <span class="number">1</span>, <span class="number">3</span> <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">local</span> splitMap = <span class="built_in">string</span>.split(times[i], unitMap[i + <span class="number">1</span>])</span><br><span class="line">            sec = sec + splitMap[<span class="number">1</span>] * UNIT_TO_SEC[i + <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elseif</span> <span class="built_in">len</span> &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> times = <span class="built_in">string</span>.split(t[<span class="number">1</span>], gapFlag)</span><br><span class="line">        <span class="keyword">for</span> i = <span class="number">1</span>, <span class="number">3</span> <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">local</span> splitMap = <span class="built_in">string</span>.split(times[i], unitMap[i + <span class="number">1</span>])</span><br><span class="line">            sec = sec + splitMap[<span class="number">1</span>] * UNIT_TO_SEC[i + <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sec</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 根据指定日期字符串，返回0时区时间（时间戳）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    dateDes: string</span></span><br><span class="line"><span class="comment">        日期详情字符串，包含 年月日时分秒 信息</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        支持格式：</span></span><br><span class="line"><span class="comment">            年-月-日 时:分:秒    例：2022-03-23 15:30:00</span></span><br><span class="line"><span class="comment">            年/月/日 时/分/秒    例: 2022/03/23 15/30/00 </span></span><br><span class="line"><span class="comment">    [isLocalTime]: bool[false]</span></span><br><span class="line"><span class="comment">        是否本地时间，默认false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        string: 时间戳</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.getSecByDate = <span class="function"><span class="keyword">function</span><span class="params">(dateDes, isLocalTime)</span></span></span><br><span class="line">    isLocalTime = isLocalTime <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> timestamp</span><br><span class="line">    <span class="keyword">if</span> isLocalTime <span class="keyword">then</span></span><br><span class="line">        timestamp = getTimestampByLocalDate(dateDes)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        timestamp = getTimestampByServerDate(dateDes)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> timestamp</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 计算给定时间戳所在天的重置时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    [resetTimeFormat]: string[DEFAULT_RESET_TIME]</span></span><br><span class="line"><span class="comment">        每日重置时间，默认 DEFAULT_RESET_TIME    </span></span><br><span class="line"><span class="comment">    [isLocalTime]: bool[false]</span></span><br><span class="line"><span class="comment">        是否本地时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        string: 时间戳</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.getResetTimestamp = <span class="function"><span class="keyword">function</span><span class="params">(timestamp, resetTimeFormat, isLocalTime)</span></span></span><br><span class="line">    resetTimeFormat = resetTimeFormat <span class="keyword">or</span> DEFAULT_RESET_TIME</span><br><span class="line">    isLocalTime = isLocalTime <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> t = TimeUtils.getAssignTimestamp(timestamp, resetTimeFormat, isLocalTime)</span><br><span class="line">    <span class="keyword">if</span> timestamp &lt; t <span class="keyword">then</span></span><br><span class="line">        t = t - <span class="number">86400</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 计算给定时间戳所在天的指定时间的时间戳</span></span><br><span class="line"><span class="comment">        注意，假设重置时间为 05:00:00</span></span><br><span class="line"><span class="comment">        给定时间为 2022年3月10日 07:00:00，求当天 04:00:00，所得时间戳为 2022年3月11日 04:00:00</span></span><br><span class="line"><span class="comment">        因为理论上 3月10日范围为 3月10日 05:00:00 - 3月11日 05:00:00</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    [resetTimeFormat]: string[DEFAULT_RESET_TIME]</span></span><br><span class="line"><span class="comment">        重置时间</span></span><br><span class="line"><span class="comment">    [assignedTime]: string[00:00:00]</span></span><br><span class="line"><span class="comment">        指定时间</span></span><br><span class="line"><span class="comment">    [isLocalTime]: bool[false]</span></span><br><span class="line"><span class="comment">        是否本地时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        string: 时间戳</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.getAssignTimestamp = <span class="function"><span class="keyword">function</span><span class="params">(timestamp, resetTimeFormat, assignedTimeFormat, isLocalTime)</span></span></span><br><span class="line">    resetTimeFormat = resetTimeFormat <span class="keyword">or</span> DEFAULT_RESET_TIME</span><br><span class="line">    assignedTimeFormat = assignedTimeFormat <span class="keyword">or</span> <span class="string">"00:00:00"</span></span><br><span class="line">    isLocalTime = isLocalTime <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> assignedTimeSec = TimeUtils.getSecByDate(assignedTimeFormat)</span><br><span class="line">    <span class="keyword">local</span> tstamp = TimeUtils.getResetTimestamp(timestamp, resetTimeFormat, isLocalTime)</span><br><span class="line">    tstamp = tstamp + assignedTimeSec</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tstamp</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 判断是否跨天</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp1: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    timestamp2: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    [resetTimeFormat]: string[DEFAULT_RESET_TIME]</span></span><br><span class="line"><span class="comment">        每日重置时间，默认 DEFAULT_RESET_TIME</span></span><br><span class="line"><span class="comment">    [isLocalTime]: bool[false]</span></span><br><span class="line"><span class="comment">        是否本地时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        bool: 是否跨天</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.checkCrossDay = <span class="function"><span class="keyword">function</span><span class="params">(timestamp1, timestamp2, resetTimeFormat, isLocalTime)</span></span></span><br><span class="line">    isLocalTime = isLocalTime <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line">    resetTimeFormat = resetTimeFormat <span class="keyword">or</span> DEFAULT_RESET_TIME</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> t1 = TimeUtils.getResetTimestamp(timestamp1, resetTimeFormat, isLocalTime)</span><br><span class="line">    <span class="keyword">local</span> t2 = TimeUtils.getResetTimestamp(timestamp2, resetTimeFormat, isLocalTime)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> t1 ~= t2</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 判断是否跨周</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp1: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    timestamp2: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    [resetTimeFormat]: string[DEFAULT_RESET_TIME]</span></span><br><span class="line"><span class="comment">        每日重置时间，默认 DEFAULT_RESET_TIME</span></span><br><span class="line"><span class="comment">    [isLocalTime]: bool[false]</span></span><br><span class="line"><span class="comment">        是否本地时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        bool: 是否跨周</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.checkCrossWeek = <span class="function"><span class="keyword">function</span><span class="params">(timestamp1, timestamp2, resetTimeFormat, isLocalTime)</span></span></span><br><span class="line">    isLocalTime = isLocalTime <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line">    resetTimeFormat = resetTimeFormat <span class="keyword">or</span> DEFAULT_RESET_TIME</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> weekStartTimestamp, weekEndTimestamp = TimeUtils.getWeekRangeByTimestamp(timestamp1, resetTimeFormat, isLocalTime)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">not</span> (timestamp2 &gt;= weekStartTimestamp <span class="keyword">and</span> timestamp2 &lt;= weekEndTimestamp)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 计算给定时间戳所在周起止点</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment">    [resetTimeFormat]: string[DEFAULT_RESET_TIME]</span></span><br><span class="line"><span class="comment">        每日重置时间，默认 DEFAULT_RESET_TIME</span></span><br><span class="line"><span class="comment">    [isLocalTime]: bool[false]</span></span><br><span class="line"><span class="comment">        是否本地时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        string: 周起始时间戳</span></span><br><span class="line"><span class="comment">        string: 周结束时间戳</span></span><br><span class="line"><span class="comment">        int: 当天是周几（0为周日，1-6为周一-周六）</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.getWeekRangeByTimestamp = <span class="function"><span class="keyword">function</span><span class="params">(timestamp, resetTimeFormat, isLocalTime)</span></span></span><br><span class="line">    isLocalTime = isLocalTime <span class="keyword">or</span> <span class="literal">false</span></span><br><span class="line">    resetTimeFormat = resetTimeFormat <span class="keyword">or</span> DEFAULT_RESET_TIME</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> weekStart, weekEnd, curWeekday</span><br><span class="line">    <span class="keyword">local</span> totalFormat = <span class="string">"%Y-%m-%d "</span> .. resetTimeFormat</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 0 -&gt; Sunday, 1 -&gt; 6 Monday -&gt; Saturday</span></span><br><span class="line">    curWeekday = <span class="built_in">tonumber</span>(TimeUtils.serverDate(timestamp, <span class="string">'%w'</span>, isLocalTime))</span><br><span class="line">    <span class="keyword">if</span> curWeekday == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        weekEnd = TimeUtils.getSecByDate(TimeUtils.serverDate(timestamp + <span class="number">86400</span>, totalFormat, isLocalTime), isLocalTime)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">local</span> <span class="built_in">time</span> = timestamp + (<span class="number">8</span> - curWeekday) * <span class="number">86400</span></span><br><span class="line">        weekEnd = TimeUtils.getSecByDate(TimeUtils.serverDate(<span class="built_in">time</span>, totalFormat, isLocalTime), isLocalTime)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    weekStart = weekEnd - <span class="number">604800</span>        <span class="comment">-- 7 * 86400</span></span><br><span class="line">    <span class="keyword">return</span> weekStart, weekEnd, curWeekday</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 时间戳所在月份有几天</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    timestamp: string</span></span><br><span class="line"><span class="comment">        时间戳</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        int: 天</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line">TimeUtils.getDaysOfMonth = <span class="function"><span class="keyword">function</span><span class="params">(timestamp)</span></span></span><br><span class="line"><span class="keyword">local</span> year = TimeUtils.serverDate(timestamp, <span class="string">"%Y"</span>)</span><br><span class="line">    <span class="keyword">local</span> month = TimeUtils.serverDate(timestamp, <span class="string">"%m"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TimeUtils.<span class="built_in">date</span>(<span class="string">"%d"</span>, TimeUtils.<span class="built_in">time</span>(&#123;year = year, month = month + <span class="number">1</span>, day = <span class="number">0</span>&#125;))</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TimeUtils</span><br></pre></td></tr></table></figure><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;处理全球化问题的重要部分，时间处理。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
      <category term="多实践" scheme="http://yoursite.com/tags/%E5%A4%9A%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="Cocos2d" scheme="http://yoursite.com/tags/Cocos2d/"/>
    
  </entry>
  
  <entry>
    <title>《精通Cocos2d-x 基础卷》学习笔记</title>
    <link href="http://yoursite.com/2022/04/05/%E3%80%8A%E7%B2%BE%E9%80%9ACocos2d-x%20%E5%9F%BA%E7%A1%80%E5%8D%B7%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2022/04/05/%E3%80%8A%E7%B2%BE%E9%80%9ACocos2d-x%20%E5%9F%BA%E7%A1%80%E5%8D%B7%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-04-05T13:00:00.000Z</published>
    <updated>2022-04-05T15:33:05.536Z</updated>
    
    <content type="html"><![CDATA[<p>生活中，所有事情都有最后一次。你会最后一次出门，最后一次吃你最喜欢的菜，最后一次听一首歌，或者最后一次呼吸。但是在那之前，你有很多机会做所有这些事情，珍惜你做的每一次。</p><a id="more"></a><p><br></p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>本文是在团队内组织共读会，所做的读书笔记。</p><p>选择这本书，也是带领团队成员更深刻了解自己平常所使用的的控件在引擎层的实现，对以后排查问题，以及了解整个游戏框架引擎层面，找到自己未来更感兴趣的发展方向都有很大的价值。</p><p><br></p><p><br></p><h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><h2 id="启航"><a href="#启航" class="headerlink" title="启航"></a>启航</h2><p>Cocos2d-x是一款开源的手机游戏开发框架。</p><p>核心使用C++编写，支持C++、Lua、JavaScript三种编程语言接口，支持开发跨平台的游戏。</p><p>主要优点</p><ul><li>跨平台</li><li>高性能</li><li>高兼容性</li><li>可热更新</li><li>可定制</li><li>易用性</li></ul><p>主要应用在 手机游戏、儿童教育软件、网络多媒体UI解决方案等交互性的图形化应用。</p><p>较为流行版本 Cocos2d-x v3.3 / v3.10 / v3.17</p><p><img src="技术架构.png" alt="技术架构"></p><h3 id="游戏开发框架"><a href="#游戏开发框架" class="headerlink" title="游戏开发框架"></a>游戏开发框架</h3><p>游戏开发框架实现了各个平台相关的封装，提供了图像渲染、UI系统、输入交互、文件操作、动作动画、消息系统、时间调度、音乐音效、物理引擎、脚本绑定等一系列基础功能，让开发者无需从最基础去封装实现，而是以现有的方案去快速开发产品，并且可对所需要的部分进行优化修改。</p><h3 id="类比"><a href="#类比" class="headerlink" title="类比"></a>类比</h3><p>Unity</p><p>Unreal Engine</p><h3 id="v4"><a href="#v4" class="headerlink" title="v4"></a>v4</h3><p>现在常用的都是 v3版本，例如 v3.3 与 v3.10；然后各项目组在这基础上进行本项目的定制化优化改造。</p><p>官方最新的版本是 v4；v4版本最大的变动是在苹果系统使用Metal替代OpenGL ES作为渲染引擎；并且删除对JS部分的支持。</p><p>v4版本仅仅适用于支持 Metal 的 iOS/Mac设备。</p><p><em>目前OpenGL &amp; DirectX 的组合，逐渐在被 Vulkan &amp; Metal 替代。</em> </p><table><thead><tr><th></th><th>OpenGL</th><th>OpenGL ES</th><th>Direct3D</th><th>Vulkan</th><th>Metal</th></tr></thead><tbody><tr><td>平台支持</td><td>Windows, MacOS, Linux</td><td>Android, iOS</td><td>Windows, Xbox</td><td>Windows, Linux, Android,</td><td>iOS, MacOS</td></tr><tr><td>学习门槛</td><td>低</td><td>低</td><td>高</td><td>高</td><td>高</td></tr></tbody></table><p><br></p><p><br></p><h2 id="Cocos2d-x-主逻辑"><a href="#Cocos2d-x-主逻辑" class="headerlink" title="Cocos2d-x 主逻辑"></a>Cocos2d-x 主逻辑</h2><p>轻量级引擎主逻辑</p><ol><li>初始化场景等</li><li>主循环每帧调用<ul><li>update，处理逻辑</li><li>draw，处理绘制</li></ul></li><li>达到退出条件，销毁场景等</li></ol><p>Cocos2d-x主逻辑同那些相同；不过有场景树来组织管理所有节点。</p><ol><li>初始化导演类及视图并绑定<ul><li>Director初始化、OpenGL视图初始化</li></ul></li><li>设定分辨率等参数并刷新帧率与刷新方法</li><li>场景初始化，并让导演类运行（加入到场景树）<ul><li>调用各种虚函数刷新方法</li></ul></li></ol><p>处理逻辑的三个入口</p><ul><li>初始化或销毁时，被自动调用的虚函数方法。<ul><li>例如：init、onEnter、onExit</li></ul></li><li>使用定时器定时执行的方法<ul><li>例如：注册在scheduleUpdate后，定时执行的update方法</li></ul></li><li>指定事件发生后的回调方法<ul><li>例如：UI按钮的点击回调</li></ul></li></ul><p><br></p><p><br></p><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p>引用计数</p><ul><li>引用计数的处理，如果创建出节点后，若没有绑定到某个已加入场景树的节点上，就会在本帧结束后释放掉。</li><li>刚创建出的节点，引用计数为1，在创建的时候加入到autorelease池中，在本帧结束时引用计数自动-1，会变为0，然后被释放掉；</li><li>节点通过retain引用计数+1，release引用计数-1，当引用计数为0时，节点会被立即释放掉。</li></ul><p>create与init（二阶段构造机制）</p><ul><li>将初始化放在init而非create中，是因为在init初始化时候若报错，可以在create中捕获错误，并处理。</li></ul><p>警示</p><ul><li>using导入命名空间的代码，放在源文件中，而非头文件中</li><li>若两个类之间互相包含时，在各自类前加向前声明，以便通过编译</li><li>使用平台相关API时，注意添加平台预处理判定</li></ul><p><br><br><br></p><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><p>任何指针，本质都是存储地址，不因指针类型而改变。</p><p>经典问题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// * 前是指针的类型，* 后是对指针的修饰</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// const指针，指针指向的内容不能修改</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* p1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指向const对象的指针，指针指向不能修改</span></span><br><span class="line"><span class="keyword">char</span>* <span class="keyword">const</span> p2;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指向const对象的const指针</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* <span class="keyword">const</span> p3;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="C-11"><a href="#C-11" class="headerlink" title="C++11"></a>C++11</h2><p>类型推导</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// auto，根据右值，识别类型</span></span><br><span class="line"><span class="keyword">auto</span> temp = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// decltype，根据指定变量，识别变量类型</span></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">decltype</span>(a) b = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>智能指针</p><ul><li>shared_ptr，引用计数指针；只有在已经没有任何其他shared_ptr指向其原本指向的对象时，才会销毁对象</li><li>weak_ptr，弱指针；并不指向对象，因此不会影响对象销毁</li></ul><p>空指针（nullptr）</p><ul><li>解决NULL二义性问题，NULL可以代表0，也可以代表空指针</li><li>nullptr不能隐式转换为整数，也不能和整数作比较</li></ul><p>Lambda特性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[函数外部对象参数](函数参数)-&gt;返回值类型 &#123; 函数体 &#125;</span><br></pre></td></tr></table></figure><ul><li>[] 中的函数外部对象参数，允许在函数体内直接调用函数外部的参数</li><li>() 中的函数参数，同正常的函数参数无异，是每次函数调用传入的变量</li><li>-&gt; 后面跟着函数返回值的类型</li><li>{} 中可以编写逻辑，并使用 [] 和 () 中传入的参数</li></ul><p>定义在lambda函数相同作用域的参数引用也可以被使用，这种参数集合一般被称为闭包。</p><p>在 [] 中可以填写下面几种类型参数，将定义lambda函数作用域内的变量传入函数体中</p><ul><li>[] 没有任何参数，代表 不传入外部参数</li><li>[a, &amp;b] ，代表传入变量a的值与变量b的引用</li><li>[&amp;]，代表以引用的方式将所有作用域内变量传入</li><li>[=]，代表以值专递的方式将所有作用域内变量传入</li><li>[&amp;, a]，代表除了a用值传递的方式，其他所有作用域内变量使用引用方式传入</li><li>[=, &amp;a]，代表除了a用引用的方式，其他所有作用域内变量使用值传递方式传入</li></ul><p><br></p><p><br></p><p><br></p><h1 id="基础框架"><a href="#基础框架" class="headerlink" title="基础框架"></a>基础框架</h1><h2 id="控件"><a href="#控件" class="headerlink" title="控件"></a>控件</h2><h3 id="节点系统，Node"><a href="#节点系统，Node" class="headerlink" title="节点系统，Node"></a>节点系统，Node</h3><h4 id="Node，CCNode-h-amp-CCNode-cpp"><a href="#Node，CCNode-h-amp-CCNode-cpp" class="headerlink" title="Node，CCNode.h &amp; CCNode.cpp"></a>Node，CCNode.h &amp; CCNode.cpp</h4><p>Node是场景图的基础元素；场景图所有节点必须是Node类或Node的派生类。</p><p><img src="tree.jpg" alt="场景图"></p><p>Node类主要特性有：</p><ul><li>可以包含其他Node对象</li><li>可以设置定时器回调</li><li>可以使用动作系统</li></ul><p>Node类重点属性：</p><ul><li>position: 坐标；默认(x = 0, y = 0)</li><li>scale: 放缩系数；默认(1)</li><li>rotation: 旋转系数（顺时针方向角度）；默认(0)</li><li>anchor point: 锚点；默认(x = 0, y = 0)</li><li>contentSize: 大小；默认(width = 0, height = 0)</li><li>visible: 可见性；默认(true)</li></ul><p>Node绘制流程: Visit &amp; Draw</p><p>遍历：</p><ol><li>[Node:visit] 开始遍历节点</li><li>判断可见性</li><li>计算当前节点的 flags</li><li>压入并加载模型矩阵</li><li>对所有子节点排序</li><li>遍历所有 ZOrder小于0 的子节点</li><li>绘制自己</li><li>遍历所有 ZOrder大于0 的子节点</li><li>弹出模型矩阵</li></ol><p>绘制：</p><ol><li>[Node:draw] 开始绘制节点</li></ol><p>方法列表_基础：</p><ul><li>create: 创建</li><li>addChild: 添加节点</li><li>get ChildByTag/ChildByName: 根据tag/name获取节点</li><li>enumerateChildren: 根据正则匹配名字获取节点</li><li>getChildren: 获取所有节点数组</li><li>getChildrenCount: 获取所有节点数量</li><li>set/get Parent: 设置/获取 父节点</li><li>removeFromParent/removeFromParentAndCleanup: 将自己从父节点移除，根据参数决定是否停止所有动作及回调</li><li>removeChild/removeChildByTag/removeChildByName: 移除自己的单个子节点</li><li>removeAllChildren/removeAllChildrenWithCleanup: 移除自己的所有子节点</li><li>isRunning: 正在运行中</li><li>onEnter: Node出现时回调的方法，若存在变换，则在变换开始时调用</li><li>onEnterTransitionDidFinish: Node出现时回调的方法，若存在变换，则在变换结束时调用</li><li>onExit: Node退出时回调的方法，若存在变换，则在变换结束时调用</li><li>onExitTransitionDidStart: Node退出时回调的方法，若存在变换，则在变换开始时调用</li><li>cleanup: 停止所有动作及定时器</li><li>draw: 具体的绘制方法，如何绘制</li><li>visit: 遍历节点，递归调用绘制</li><li>update: 每帧更新</li></ul><p>方法列表_支持：</p><ul><li>getAttachedNodeCount: 获取当前Node所在场景树的Node数量</li><li>getDescription: 详细信息，方便Debug</li><li>set/get LocalZOrder(ZOrder): 设置/获取 局部ZOrder</li><li>set/get GlobalZOrder: 设置/获取 全局ZOrder</li><li>updateOrderOfArrival: 当ZOrder相同时，设置到达顺序（方便确定唯一遍历顺序），仅供内部使用</li><li>set/get ScaleX: 设置/获取 X轴放缩系数</li><li>set/get ScaleY: 设置/获取 Y轴放缩系数</li><li>set/get ScaleZ: 设置/获取 Z轴放缩系数</li><li>set/get Scale: 设置/获取 X轴与Y轴放缩系数</li><li>set/get PositionX: 设置/获取 X轴坐标</li><li>set/get PositionY: 设置/获取 Y轴坐标</li><li>set/get Position: 设置/获取 2D坐标，vec2(x, y)</li><li>set/get PositionZ(VertexZ): 设置/获取 Z轴坐标 </li><li>set/get Position3D: 设置/获取 3D坐标，vec3(x, y, z)</li><li>set/get PositionNormalized(NormalizedPosition): 设置/获取 归一化坐标，范围[0, 1]</li><li>set/get SkewX: 设置/获取 X轴倾斜角度</li><li>set/get SkewY: 设置/获取 Y轴倾斜角度</li><li>set/get AnchorPoint: 设置/获取 锚点坐标，vec2(x, y)</li><li>getAnchorPointInPoints: 返回锚点的绝对像素值，返回值不再是[0, 1]范围内</li><li>set/get ContentSize: 设置/获取 宽高，Size(width, height)</li><li>set/is Visible: 设置/获取 可见性</li><li>set/get Rotation: 设置/获取 旋转角度，正数为顺时针方向、负数为逆时针方向</li><li>set/get Rotation3D: 设置/获取 3D旋转角度，vec3(x, y, z)</li><li>set/get RotationQuat: 设置/获取 四元数（归一化的）旋转角度，Quaternion(x, y, z, w)</li><li>set/get RotationSkewX(RotationX): X轴旋转倾斜</li><li>set/get RotationSkewY(RotationY): Y轴旋转倾斜</li><li>set/is IgnoreAnchorPointForPosition: 设置/获取 忽略坐标锚点；仅限内部使用，一般针对Scene与Layer</li><li>reorderChild: 修改已加入节点的ZOrder，并重新排序</li><li>sortAllChildren: 在绘制前，根据ZOrder对所有子节点排序</li><li>set/get Tag: 设置/获取 标记；一个数字，通常用来分辨节点（人为定义，非强制唯一）</li><li>set/get Name: 设置/获取 名称；一个字符串，通常用来分辨节点（认为定义，非强制唯一）</li><li>set/get UserData/UserObject: 设置/获取 自定义用户数据指针</li><li>set/get GLProgram/ShaderProgram: 设置/获取 节点的着色器程序</li><li>set/get GLProgramState: 设置/获取 节点着色器程序状态</li><li>scheduleUpdateWithPriorityLua: 定时更新Lua脚本</li><li>getScene: 获取节点所在场景</li><li>getBoundingBox/boundingBox: 获取节点所在父节点坐标系统的包含框</li><li>set/get EventDispatcher: 设置/获取 场景的事件派发器</li><li>set/get ActionManager: 设置/获取 动作管理器</li><li>runAction: 执行动作</li><li>stopAllActions: 停止所有动作</li><li>stopAction: 停止某个动作</li><li>stopActionByTag/stopAllActionByTag: 根据tag停止部分动作</li><li>getActionByTag: 获取某tag的动作</li><li>getNumberOfRunningActions: 获取节点正在执行的动作数量</li><li>getNumberOfRunningActionsByTag: 获取节点正在执行的指定tag的动作数量</li><li>set/get Scheduler: 设置/获取 定时器对象</li><li>isScheduled: 指定定时器是否执行中</li><li>scheduleUpdate: 每帧执行定时器，默认优先级为0的</li><li>scheduleUpdateWithPriority: 自定义优先级执行定时器</li><li>unscheduleUpdate: 停止每帧执行的定时器</li><li>schedule: 执行某个定时器，可配参数：间隔时间、重复次数(-1永远重复）、延迟时间</li><li>scheduleOnce: 执行一次某个定时器，可配参数：延迟时间</li><li>unschedule: 停止执行某个定时器</li><li>pause/resume: 暂停/恢复 所有定时器、动作和事件监听</li><li>pause/resume SchedulerAndActions: 暂停/恢复 所有定时器、动作</li><li>updateTransform: 更新变换</li><li>setAdditionalTransform: 为节点设置一个额外的变换矩阵</li><li>set/get NodeToParentTransform: 返回Node本地空间坐标转换为父节点空间坐标的像素矩阵</li><li>getNodeToParentAffineTransform: 返回Node本地空间坐标转换为父节点空间坐标的仿射变换像素矩阵</li><li>getParentToNodeTransform: 返回父节点空间坐标转换为Node本地空间坐标的像素矩阵</li><li>getParentToNodeAffineTransform: 返回父节点空间坐标转换为Node本地空间坐标的仿射变换像素矩阵</li><li>getNodeToWorldTransform: 返回世界像素矩阵</li><li>getNodeToWorldAffineTransform: 返回世界仿射变换像素矩阵</li><li>getWorldToNodeTransform: 返回逆世界像素矩阵</li><li>getWorldToNodeAffineTransform: 返回逆世界仿射变换像素矩阵</li><li>convertToNodeSpace: 世界坐标转换为节点坐标 </li><li>convertToNodeSpaceAR: 世界坐标转换为节点坐标，考虑锚点</li><li>convertToWorldSpace: 节点坐标转换为世界坐标</li><li>convertToWorldSpaceAR: 节点坐标转换为世界坐标，考虑锚点</li><li>convertTouchToNodeSpace: 将触摸坐标转换为节点坐标</li><li>convertTouchToNodeSpaceAR: 将触摸坐标转换为节点坐标，考虑锚点</li><li>add/get/remove Component: 新增/获取/移除 组件</li><li>set/get Opacity: 设置/获取 透明度</li><li>getDisplayedOpacity: 获取显示透明度</li><li>updateDisplayedOpacity: 根据父节点透明度，更新显示透明度</li><li>set/is CascadeOpacityEnabled: 是否开启子节点透明度随父节点透明度变化</li><li>set/get Color: 设置/获取 颜色</li><li>getDisplayedColor: 获取显示颜色</li><li>updateDisplayedColor: 根据父节点颜色更新显示颜色</li><li>set/is CascadeColorEnabled: 是否开启子节点颜色随父节点颜色变化</li><li>set/is OpacityModifyRGB: 是否开启透明度影响颜色</li><li>set/get CameraMask: 相机遮罩</li></ul><h5 id="GLProgram-与-GLProgramState"><a href="#GLProgram-与-GLProgramState" class="headerlink" title="GLProgram 与 GLProgramState"></a>GLProgram 与 GLProgramState</h5><p>简单来说，一个GLProgram就是着色器程序；<br>抽离出GLProgramState是为了便于GLProgram重用；</p><ul><li>比如，对于置灰Shader，灰度色值可能由外部传入；但是仅仅色值的改变就要创建多个GLProgram就比较繁琐</li><li>于是，整个置灰的Shader着色器程序是可重用的，配置变量的部分，抽离成GLProgramState，来定制化使用</li></ul><h5 id="Skew-与-RotationSkew"><a href="#Skew-与-RotationSkew" class="headerlink" title="Skew 与 RotationSkew"></a>Skew 与 RotationSkew</h5><p>RotationSkew与Skew区别</p><ul><li>RotationSkew，模拟Flash的倾斜功能</li><li>Skew，真正的倾斜</li></ul><p><a href="https://www.youtube.com/watch?v=G6DfZr0zYnw" target="_blank" rel="noopener">YouTube演示</a></p><p><img src="skew_rotationskew.png" alt="效果"></p><p><br></p><h4 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h4><p>文件：</p><ul><li>CCComponent.h &amp; CCComponent.cpp</li><li>CCComponentContainer.h &amp; CCComponentContainer.cpp</li><li>CCComponentLua.h &amp; CCComponentLua.cpp</li><li>CCComponentJS.h &amp; CCComponentJS.cpp</li></ul><p>Component 方法列表</p><ul><li>create: 创建</li><li>init: 初始化</li><li>update: 更新</li><li>set/is Enabled: 设置/获取 启用</li><li>set/get Name: 设置/获取 名称</li><li>set/get Owner: 设置/获取 自己的拥有者（Node对象）</li><li>serialize: 序列化</li><li>onEnter: 进入回调</li><li>onExit: 退出回调</li><li>onAdd: 添加回调</li><li>onRemove: 移除回调</li></ul><p>ComponentContainer 方法列表</p><ul><li>get: 根据名称获取Component</li><li>add: 添加Component</li><li>remove: 根据名称移除Component</li><li>removeAll: 移除所有Component</li><li>visit: 遍历方法；调用所有Component的update方法</li><li>onEnter: 调用所有Component:onEnter</li><li>onExit: 调用所有Component:onExit</li></ul><p><br></p><h3 id="Scene，场景"><a href="#Scene，场景" class="headerlink" title="Scene，场景"></a>Scene，场景</h3><p>Scene是Node类派生类，通常仅仅用来作为一个抽象的概念。<br>同时只能存在一个场景，各场景间互斥；创建场景时默认会创建一个相机。</p><p>绘制方法 [Scene::render]</p><ul><li>遍历所有相机</li><li>重置默认相机 CameraFlag::DEFAULT</li><li>遍历多视图<ul><li>设置相机的额外变换与投影矩阵</li><li>压入并加载投影矩阵</li></ul></li><li>应用相机FBO、RenderTargets、viewport</li><li>清空相机背景</li><li>遍历本场景所有内容 [Scene::visit]</li><li>开始绘制</li><li>恢复相机FBO、RenderTargets、viewport</li><li>遍历多视图<ul><li>弹出投影矩阵</li></ul></li></ul><p>方法列表</p><ul><li>create/createWithSize: 创建/创建指定大小场景</li><li>getDiscription: debug描述</li><li>getCameras: 获取所有相机</li><li>getDefaultCamera: 获取默认相机</li><li>getLights: 获取所有灯光</li><li>render: 绘制</li></ul><p><br></p><h3 id="Layer，层"><a href="#Layer，层" class="headerlink" title="Layer，层"></a>Layer，层</h3><p>Layer是Node类的派生类，它支持触摸接口。<br>除了Node的所有特性，Layer还支持接收触摸与重力感应输入。<br>一个场景中可以存在多个Layer，它们之间并不互斥。</p><p>Layer及其相关类：</p><ul><li>Layer, 继承自Node</li><li>LayerColor, 继承自Layer与BlendProtocol；扩展RGBA接口，调整色值及透明度，还可以设置颜色混合</li><li>【弃】<strong>LayerRGBA，继承自Layer与</strong>RGBAProtocol；扩展了RGBA接口，调整色值及透明度</li><li>LayerGradient，继承自LayerColor；支持绘制渐变色背景</li><li>LayerRadialGradient，继承自Layer；支持绘制径向渐变背景</li><li>LayerMultiplex，继承自Layer；可管理多个Layer，但同时只有一个可被激活</li></ul><p><img src="Layer系列.png" alt="Layer系列"></p><p>Layer方法列表</p><ul><li>create: 创建</li><li>onTouchBegan: 触摸开始回调</li><li>onTouchMoved: 触摸移动回调</li><li>onTouchEnded: 触摸结束回调</li><li>onTouchCancelled: 触摸取消回调</li><li>onAcceleration: 重力加速器回调</li><li>onKeyPressed: 键盘输入按压回调</li><li>onKeyReleased: 键盘输入释放回调</li></ul><p><br></p><h3 id="Sprite，精灵"><a href="#Sprite，精灵" class="headerlink" title="Sprite，精灵"></a>Sprite，精灵</h3><p>Sprite是一个2D图像，可以通过一个图像或者图像的某个矩形区域创建。</p><p>优化Sprite绘制准则：</p><ul><li>将所有图像放在一张图集上</li><li>对所有图像使用同样的混合方式</li></ul><p>Sprite的四种绘制模式</p><ul><li>QUAD；使用2个三角形绘制；占用内存少，但会绘制一些空像素（慢）</li><li>POLYGON；使用多个三角形绘制；占用内存多，但绘制空像素少（快）</li><li>SLICE9；使用18个三角形绘制；用于放缩的按钮和矩形精灵（9宫格）</li><li>QUAD_BATCHNODE；通过静态批次的2个三角形绘制；有一定局限性（给SpriteBatchNode使用）<ul><li>局限性<ul><li>无法给每个Sprite单独设置Alias/Antialias属性，该属性设置在SpriteBatchNode上，对其所有Sprite生效</li><li>无法给每个Sprite单独设置混合函数</li><li>不支持 ParallaxNode，但是可以用 proxy sprite 模拟</li><li>Sprite只能挂载其他Sprite节点</li></ul></li></ul></li></ul><p>Sprite创建流程</p><ul><li>使用文件名，PolygonInfo，文件名&amp;矩形区域，纹理，SpriteFrame</li></ul><p>Sprite方法列表</p><ul><li>create/createWithTexture/createWithSpriteFrame， 创建</li><li>updateTransform，根据旋转、坐标、缩放值更新四边形；仅支持QUAD_BATCHNODE</li><li>set/get BatchNode，设置/获取 SpriteBatchNode</li><li>set/get Texture，设置/获取 纹理</li><li>setTextureRect，更新纹理坐标与矩形顶点信息</li><li>setVertexRect，设置矩形顶点信息</li><li>set/get CenterRect，设置九宫格区域，像素坐标</li><li>set/get CenterRectNormalized，设置九宫格区域，归一化坐标</li><li>set/get SpriteFrame，设置/获取 精灵</li><li>isFrameDisplayed，精灵是否在显示中</li><li>setDisplayFrameWithAnimationName，使用动画名称和索引修改显示帧</li><li>set/is Dirty，设置脏标记</li><li>getQuad，获取 顶点坐标、纹理坐标、色值信息</li><li>isTextureRectRotated，纹理矩形是否被旋转</li><li>set/get AtlasIndex，设置/获取 纹理索引</li><li>set/get TextureAtlas，设置/获取 纹理图集</li><li>getOffsetPosition，获取偏移坐标</li><li>set/is FlippedX，设置/获取 X轴翻转</li><li>set/is FlippedY，设置/获取 Y轴翻转</li><li>set/get PolygonInfo，设置/获取 Polygon信息</li><li>set/is StretchEnabled，设置/获取 拉伸信息</li><li>set/get BlendFunc，设置/获取 颜色混合</li><li>set/get Position，设置/获取 坐标</li><li>set/get Scale/ScaleX/ScaleY，设置/获取 放缩值/横向放缩值/纵向放缩值</li><li>set/get Rotation，设置/获取 旋转值</li><li>set/get SkewX/SkewY，设置/获取 横向倾斜/纵向倾斜</li><li>setIgnoreAnchorPointForPosition，设置忽略坐标锚点</li></ul><h4 id="SpriteBatchNode"><a href="#SpriteBatchNode" class="headerlink" title="SpriteBatchNode"></a>SpriteBatchNode</h4><p>SpriteBatchNode是一个批处理节点，它可以将自己的节点在一个OpenGL批次内绘制完。</p><p>一个SpriteBatchNode只可以关联一张纹理，并且只有Sprite可以作为其子节点，SpriteBatchNode下所有精灵都是用同一种抗锯齿、纹理混合等。</p><p>方法列表：</p><ul><li>create/createWithTexture，创建</li><li>set/get Texture，设置/获取 纹理</li><li>set/get TextureAtlas，设置/获取 纹理</li><li>getDescendants，获取子节点数组（SpriteBatchNode特殊方法，其他控件请使用getChildren）</li><li>increaseAtlasCapacity，增加纹理容量</li><li>appendChild，添加一个Sprite</li><li>removeChildAtIndex，移除某索引位置子节点</li><li>removeSpriteFromAtlas，从图集中移除Sprite</li><li>rebuildIndexInOrder，根据层级重新构建索引</li><li>lowest/hightest AtlasIndexInChild，在所有图集中获取 最小/最大 索引</li><li>atlasIndexForChild，获取某层级附近的索引</li><li>reorderBatch，对子节点排序，禁止手动调用</li><li>set/get BlendFunc，设置/获取 颜色混合</li><li>insertQuadFromSprite，在指定索引处插入一个四边形Sprite；该Sprite不会加入到子节点数组中，只会在处理大图集且其中Sprite不刷新时调用，如瓦片地图与大量字符的LabelBMFont</li><li>addSpriteWithoutQuad，将Sprite添加到子节点数组，但并不更新纹理数据</li><li>reserveCapacity，检查容量，当容量不足时，分配新容量</li></ul><h4 id="SpriteFrame"><a href="#SpriteFrame" class="headerlink" title="SpriteFrame"></a>SpriteFrame</h4><p>实际显示的图片纹理<br>一个SpriteFrame包含</p><ul><li>纹理：给Sprite使用的Textrue2D纹理</li><li>矩形区域：纹理的矩形区域</li></ul><p>创建方式：</p><ul><li>文件名<ul><li>参数<ul><li>string 文件名 &amp; Rect 矩形</li><li>string 文件名 &amp; Rect 矩形 &amp; bool 旋转 &amp; Vec2 偏移 &amp; Size 宽高</li></ul></li><li>流程<ul><li>赋值<ul><li>纹理</li><li>矩形（像素单位 &amp; 点单位）</li><li>偏移（像素单位 &amp; 点单位）</li><li>初始大小（像素单位 &amp; 点单位）</li><li>旋转</li><li>锚点</li><li>中心矩形区域</li></ul></li></ul></li></ul></li><li>纹理<ul><li>参数<ul><li>Texture2D 纹理 &amp; Rect 矩形</li><li>Texutre2D 纹理 &amp; Rect 矩形 &amp; bool 旋转 &amp; Vec2 偏移 &amp; Size 宽高</li></ul></li><li>流程<ul><li>赋值<ul><li>纹理名</li><li>矩形（像素单位 &amp; 点单位）</li><li>偏移（像素单位 &amp; 点单位）</li><li>初始大小（像素单位 &amp; 点单位）</li><li>旋转</li><li>锚点</li><li>中心矩形区域</li></ul></li></ul></li></ul></li></ul><p>九宫格图片</p><ul><li>图片被切成3X3格子（共9个）</li><li>四个角（左上、左下、右上、右下）的格子不会变化</li><li>上、中、下，三个格子在放缩时，进行水平放缩</li><li>左、中、右，三个格子在放缩时，进行垂直放缩</li></ul><p>方法列表：</p><ul><li>create/createWithTexture，创建</li><li>set/get RectInPixels，设置/获取 像素单位的矩形区域</li><li>set/is Rotated，设置/获取 是否旋转</li><li>set/get Rect，设置/获取 矩形区域</li><li>set/has CenterRect，设置/获取 中心矩形区域（针对九宫格）</li><li>set CenterRectInPixels，设置 像素中心矩形区域</li><li>set/get OffsetInPixels，设置/获取 像素偏移</li><li>set/get Offset，设置/获取 偏移</li><li>set/get OriginalSizeInPixels，设置/获取 初始像素大小</li><li>set/get OriginalSize，设置/获取 初始大小</li><li>set/get Texture，设置/获取 纹理</li><li>set/get/has AnchorPoint，设置/获取/检测 锚点坐标</li><li>set/get/has PolygonInfo，设置/获取/检测 多边形信息</li></ul><h4 id="SpriteFrameCache"><a href="#SpriteFrameCache" class="headerlink" title="SpriteFrameCache"></a>SpriteFrameCache</h4><p>缓存SpriteFrame的单例类</p><p>SpriteFrameCache通过解析plist文件及对应图片来加载SpriteFrame</p><p>一个 plist 文件，包含如下信息</p><ul><li>frames<ul><li>所有图片映射，key是图片名字，value是一个包含图片信息的字典结构</li><li>图片信息包含<ul><li>spriteOffset，修剪图片与原始图片的中心偏移值</li><li>spriteSize，修剪图片大小</li><li>spriteSourceSize，原始图片大小</li><li>textureRect，图片在图集内矩形区域</li><li>textureRotated，图片是否旋转</li><li>anchor，锚点</li></ul></li><li>当使用多边形描边时的信息<ul><li>triangles，每个三角形的三个索引，指向顶点信息与顶点UV信息</li><li>vertices，图片的顶点坐标，由x与y组成</li><li>verticesUV，图片图集的顶点信息，由x与y组成</li></ul></li></ul></li><li>metadata<ul><li>关于图片图集其他信息</li><li>信息包含<ul><li>format，plist文件格式</li><li>size，纹理大小</li><li>pixelFormat，像素格式</li><li>textureFileName，对应图集名称</li><li>premultiplyAlpha，是否预处理alpha</li></ul></li></ul></li></ul><p>plist文件样例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>frames<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>bind_sign1.png<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>aliases<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">array</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteOffset<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;0,0&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;52,58&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSourceSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;52,58&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRect<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;&#123;0,170&#125;,&#123;52,58&#125;&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRotated<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>bind_sign2.png<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>aliases<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">array</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteOffset<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;0,0&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;28,36&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSourceSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;28,36&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRect<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;&#123;410,170&#125;,&#123;28,36&#125;&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRotated<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>bind_title1.png<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>aliases<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">array</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteOffset<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;0,0&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;526,168&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSourceSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;526,168&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRect<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;&#123;0,0&#125;,&#123;526,168&#125;&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRotated<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>bind_title2.png<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>aliases<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">array</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteOffset<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;0,0&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;348,40&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>spriteSourceSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;348,40&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRect<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;&#123;60,170&#125;,&#123;348,40&#125;&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureRotated<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>metadata<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>format<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">integer</span>&gt;</span>3<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>pixelFormat<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>RGBA8888<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>premultiplyAlpha<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>realTextureFileName<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>activityBinding.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>size<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;526,222&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>textureFileName<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>activityBinding.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>PlistFramesCache类，主要处理 plist，frame，SpriteFrame的关联对应关系</p><ul><li>1个plist对应n个frame</li><li>1个frame对应1个plist</li><li>1个frame对应1个SpriteFrame</li></ul><p>PlistFramesCache 方法列表</p><ul><li>insertFrame，关联 plist、frame、SpriteFrame</li><li>eraseFrame，移除一个frame</li><li>eraseFrames，移除一批frames</li><li>erasePlistIndex，移除一个plist</li><li>clear，清空所有容器</li><li>hasFrame，查看frame是否存在</li><li>isPlistUsed，查看plist是否使用</li><li>at，获取frame对应的SpriteFrame</li><li>getSpriteFrames，获取所有SpriteFrame</li><li>markPlistFull，标记plist状态</li><li>isPlistFull，获取plist状态</li></ul><p>SpriteFrameCache 方法列表</p><ul><li>addSpriteFramesWithFile，</li><li>addSpriteFramesWithFileContent，</li><li>addSpriteFrame，</li><li>removeSpriteFrames，</li><li>isSpriteFramesWithFileLoaded，</li><li>removeUnusedSpriteFrames，</li><li>removeSpriteFrameByName，</li><li>removeSpriteFramesFromFile，</li><li>removeSpriteFramesFromFileContent，</li><li>removeSpriteFramesFromTexture，</li><li>getSpriteFrameByName，</li><li>reloadTexture，</li></ul><p><br></p><h3 id="Label，文本"><a href="#Label，文本" class="headerlink" title="Label，文本"></a>Label，文本</h3><p>引擎使用Label系列节点来实现文字显示的功能。</p><p>Label通过FontAtlas来渲染字体，每个字体根据Label类型对应不同字体类，每个字体类都要提供创建FontAtlas的方法，FontAtlas会存储于FontAtlasCache中，方便重用。</p><p>旧版类型</p><ul><li>LabelTTF<ul><li>最容易创建的文本，不需要额外资源，使用系统字实现</li><li>资源：TTF文件</li><li>优点：创建方便，支持系统字体（节省资源），可显示内容丰富</li><li>缺点：创建效率低，文字更新效率低，文字效果简陋</li></ul></li><li>LabelBMFont<ul><li>使用FNT配置文件+图片来显示的文本标签</li><li>资源：FNT配置文件 与 对应图集</li><li>优点：效率高于LabelTTF，可以对要显示的字体做定制化美化</li><li>缺点：只能显示图片中的字符</li></ul></li><li>LabelAtlas<ul><li>常用于显示数字</li><li>资源：单图集 或 plist+图集</li><li>优点：效率高</li><li>缺点：只能显示有限的ASCII字符，功能简陋</li></ul></li></ul><p>引擎在3.x版本起，保留之前的Label系列类，并且新建Label类来管理所有类型文本。</p><p>新版本文本类型</p><ul><li>TTF<ul><li>使用TTF字体文件创建，并使用FontAtlas中的图集渲染，借助于FreeType2库</li></ul></li><li>BMFONT<ul><li>使用FNT配置文件与图集创建，使用FontAtlas中图集渲染</li></ul></li><li>CHARMAP<ul><li>使用单图集或plist+图集，使用FontAtlas中图集渲染</li></ul></li><li>STRING_TEXTURE<ul><li>默认系统字，每次更新重新创建纹理</li></ul></li></ul><p>Label可支持的特效（仅支持 STRING_TEXTURE 和 TTF）</p><ul><li>阴影</li><li>发光</li><li>描边</li></ul><p><br></p><h3 id="TextFieldTTF，文本输入框"><a href="#TextFieldTTF，文本输入框" class="headerlink" title="TextFieldTTF，文本输入框"></a>TextFieldTTF，文本输入框</h3><p>主要包含两部分</p><ul><li>TextFieldDelegate，文本输入框所需支持的接口<ul><li>用来实现软键盘、输入文本、删除文本、显示的控制</li></ul></li><li>TextFieldTTF，使用TTF字体实现的简单的文本输入框<ul><li>继承Label，用来实现文本处理</li><li>继承IMEDelegete，提供文字输入相关虚函数</li></ul></li></ul><p>关于IME</p><ul><li>由 IMEDelegate 和 IMEDispatcher 组成，IMEDispatcher调用IMEDelegate，IMEDelegate提供文本输入相关虚函数</li></ul><p><img src="IME流程图.png" alt=""></p><p><br></p><h3 id="物理按键-amp-重力感应"><a href="#物理按键-amp-重力感应" class="headerlink" title="物理按键 &amp; 重力感应"></a>物理按键 &amp; 重力感应</h3><p>物理按键</p><ul><li>使用EventListenerKeyboard来实现物理按键回调与PC键盘消息</li><li>EventKeyboard::KeyCode中定义所有可用按键信息</li><li>提供按下（onKeyPressed）、松开（onKeyReleased），两种事件回调</li></ul><p>重力感应</p><ul><li>使用EventListenerAcceleration来实现重力感应，但要调用 Device::setAccelerometerEnabled(true) 开启</li><li>可以注册多个Event</li><li>重力感应消息并不是当重力发生变化的时候才发送，而是不断发送</li><li>重力值的极限并非是1，数值会根据力量而增加</li></ul><p>Acceleration，记录玩家当前倾斜手机的详细信息，结构如下</p><ul><li>X轴表示手机左右倾斜的值，范围[-1, 1]，代表由左到右</li><li>Y轴表示手机上下倾斜的值，范围[-1, 1]，代表由下到上</li><li>Z轴表示手机朝向，范围[-1, 1]<ul><li>正面朝下为-1</li><li>正面朝上为1</li><li>垂直放置为0</li></ul></li></ul><p><img src="手机上的XYZ轴.png" alt=""></p><p><br></p><h3 id="Menu-amp-MenuItem"><a href="#Menu-amp-MenuItem" class="headerlink" title="Menu &amp; MenuItem"></a>Menu &amp; MenuItem</h3><p>Menu的子节点必须都是MenuItem对象或其子类对象，Menu负责管理MenuItem状态、布局、回调等，MenuItem只负责显示及绑定回调。</p><p><img src="Menu与MenuItem.png" alt="结构关系"></p><p><br></p><p><br></p><h2 id="配件"><a href="#配件" class="headerlink" title="配件"></a>配件</h2><h3 id="Director，导演"><a href="#Director，导演" class="headerlink" title="Director，导演"></a>Director，导演</h3><p>负责创建和处理游戏窗口，并且管理如何执行场景。<br>导演类主要职责还有：</p><ul><li>初始化OpneGL上下文</li><li>设置OpenGL深度缓存</li><li>设置投影</li></ul><p>导演类关联的机制</p><ul><li>PoolManager</li><li>Scheduler</li><li>ActionManager</li><li>EventDispatcher</li><li>GLView</li><li>TextureCache</li><li>Renderer</li><li>Console</li></ul><hr><p>mainloop，主循环</p><ul><li>导演类要被释放<ul><li>调用释放方法 Director::purgeDirector</li></ul></li><li>导演类要重启<ul><li>调用重启方法 Director::restartDirector</li></ul></li><li>导演类合法<ul><li>调用绘制方法 Director::drawScene<ul><li>计算间隔时间，Director::calculateDeltaTime</li><li></li></ul></li><li>清空引用计数池 PoolManager::clear</li></ul></li></ul><hr><p>一些定义</p><ul><li>导演类触发的事件<ul><li>EVENT_BEFORE_SET_NEXT_SCENE：设置下个场景之前</li><li>EVENT_AFTER_SET_NEXT_SCENE：设置下个场景之后</li><li>EVENT_PROJECTION_CHANGED：投影变化时</li><li>EVENT_BEFORE_UPDATE：定时器的update触发时</li><li>EVENT_AFTER_UPDATE：定时器update触发后</li><li>EVENT_RESET：重置导演类</li><li>EVENT_AFTER_VISIT：场景的绘制触发时</li><li>EVENT_AFTER_DRAW：场景绘制后，数据送到GPU时</li><li>EVENT_BEFORE_DRAW：场景绘制前，清空时</li></ul></li></ul><p>一些枚举<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 矩阵类型</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">MATRIX_STACK_TYPE</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  MATRIX_STACK_MODELVIEW,     <span class="comment">// 模型矩阵</span></span><br><span class="line">  MATRIX_STACK_PROJECTION,    <span class="comment">// 投影矩阵</span></span><br><span class="line">  MATRIX_STACK_TEXTURE,       <span class="comment">// 纹理矩阵</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 投影</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Projection</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  _2D,              <span class="comment">// 2D投影 (正交投影)</span></span><br><span class="line">  _3D,              <span class="comment">// 3D投影 (fovy=60, znear=0.5, zfar=1500)</span></span><br><span class="line">  CUSTOM,           <span class="comment">// 投影时，调用 updateProjection 方法</span></span><br><span class="line">  DEFAULT = _3D,    <span class="comment">// 默认投影</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>方法列表：</p><ul><li>getInstance: 获取导演类，单例类</li><li>getRunningScene: 获取当前正在运行的场景</li><li>set/get AnimationInterval: 获取动画间隔（FPS）</li><li>set/is DisplayStats: 设置/获取 左下角FPS相关显示</li><li>getSecondsPerFrame: 获取绘制每帧秒数</li><li>set/get OpenGLView: 设置/获取 OpenGL视图</li><li>getTextureCache: 获取纹理缓存</li><li>set/is NextDeltaTimeZero: 设置/获取 当前帧到下一帧时间间隔，只会影响一次</li><li>isPaused: 是否暂停</li><li>getTotalFrames: 获取自从导演类开始起的总帧数</li><li>set/get Projection: 设置/获取 OpenGL投影</li><li>setViewport: 设置OpenGL视图</li><li>isSendCleanupToScene: 更换场景后是否收到cleanup消息</li><li>set/get NotificationNode: 设置/获取 通知节点；通知节点在场景visit后被调用，通知节点需要定制visit方法，可以作为钩子使用</li><li>getWinSize/getWinSizeInPixels: 获得OpenGL视图宽高</li><li>getVisibleSize: 获取可见宽高</li><li>getVisibleOrigin: 获取可见原点坐标</li><li>getSafeAreaRect: 获取OpenGL视图安全区域</li><li>convertToGL: 将屏幕坐标转换为OpenGL坐标</li><li>convertToUI: 将OpenGL坐标转换为屏幕坐标</li><li>getZEye: 获取相机与最近裁剪帧距离</li><li>restart: 重新开启导演类</li><li>start/stop Animation: 开始/停止 动画</li><li>drawScene: 绘制场景，每帧自动调用</li><li>purgeCachedData: 清除所有缓存数据，包括 TextureCache、SpriteFrameCache、LabelBMFont cache</li><li>setDefaultValue: 根据配置信息，设置默认值</li><li>setGLDefaultValues: 根据配置信息，设置OpenGL相关默认值</li><li>setAlphaBlending: 设置 是否开启OpenGL的透明度测试</li><li>set/get ClearColor: 设置/获取 清空颜色缓冲区的颜色</li><li>setDepthTest: 设置 是否开启OpenGL深度测试</li><li>mainLoop: 主循环</li><li>set/get ContentScaleFactor: 设置/获取 内容缩放比，做适配等</li><li>set/get Scheduler: 设置/获取 定时器</li><li>set/get ActionManager: 设置/获取 动作管理器</li><li>set/get EventDispatcher: 设置/获取 事件派发器</li><li>getRenderer: 获取渲染器</li><li>getConsole: 获取控制台</li><li>getDeltaTime: 获取mainloop调用间隔</li><li>getFrameRate: 获取帧率</li><li>pushMatrix: 将指定类型矩阵栈顶元素克隆一份，压入指定类型矩阵栈</li><li>pushProjectionMatrix: 将投影矩阵栈顶元素克隆一份，压入投影矩阵栈</li><li>loadMatrix: 将指定矩阵压入指定类型矩阵栈</li><li>popMatrix: 将指定类型矩阵栈顶元素弹出</li><li>getMatrix: 获取指定类型矩阵栈顶元素</li><li>loadProjectionMatrix: 将指定矩阵压入投影矩阵栈</li><li>popProjectionMatrix: 将投影矩阵栈顶元素弹出</li><li>getProjectionMatrix: 获取投影矩阵栈顶元素</li><li>loadIdentityMatrix: 将指定类型的矩阵栈顶元素改为 Mat4::IDENTITY</li><li>loadProjectionIdentityMatrix：将投影矩阵栈顶元素改为 Mat4::IDENTITY</li><li>multiplyMatrix: 将指定类型矩阵栈顶元素与给定矩阵点乘</li><li>multiplyProjectionMatrix: 将投影矩阵栈顶元素与给定矩阵点乘</li><li>resetMatrixStack: 清空所有类型矩阵栈，并将 Mat4::IDENTITY 矩阵压入各矩阵栈</li><li>initProjectionMatrixStack: 初始化投影矩阵栈，压入 Mat4::IDENTITY</li><li>getProjectionMatrixStackSize: 获取投影矩阵栈数量</li><li>getCocos2dThreadId: 获取cocos2d线程id</li><li>isValid: 当前导演类是否合法</li></ul><p>场景管理</p><ul><li>runWithScene: 执行场景；仅在执行第一个场景时使用</li><li>pushScene: 压入场景；仅在已有运行的场景时使用</li><li>popScene: 弹出场景；仅在已有运行的场景时使用</li><li>popToRootScene: 弹出到根场景</li><li>popToSceneStackLevel: 弹出道指定层级的场景</li><li>replaceScene: 替换场景</li><li>end: 结束并释放运行的场景</li><li>pause/resume: 暂停/恢复 当前运行的场景</li></ul><p><br></p><h3 id="Camera，相机"><a href="#Camera，相机" class="headerlink" title="Camera，相机"></a>Camera，相机</h3><p><br></p><h3 id="Action，动作系统"><a href="#Action，动作系统" class="headerlink" title="Action，动作系统"></a>Action，动作系统</h3><p>框架</p><ul><li>Node: Node执行Action，将Acion交由ActionManager管理</li><li>Action: Action操作Node，每个Action只能操作一个Node</li><li>ActionManager: 管理所有Action执行</li><li>Schedule: 驱动ActionManger执行；定时器的加速减速、暂停恢复会影响所有Action</li></ul><p><img src="Action框架.png" alt="Action框架"></p><p>runAction特性</p><ul><li>多次调用runAction，会同步执行多个Action</li><li>一个Action对象只能被执行一次，多个对象无法执行同一个Action，需要创建多个Action分别给多个对象使用</li><li>只有当对象被加到场景中，才能执行Action</li><li>当对象被从场景中移除，cleanup参数将决定是否销毁Action</li></ul><p>Action执行流程</p><ol><li>Node执行runAction，将Action添加到 ActionManager中</li><li>ActionManager调用Action执行，Action操作Node</li><li>Scheduler驱动ActionManager:update，ActionManger调用所有执行中的Action的update</li><li>Action执行完毕后，调用stop并同步给ActionManager</li></ol><p><img src="Action运行流程.png" alt="Action运行流程"></p><p>Action 分类（不代表继承关系）</p><ul><li>Speed，有速度变化的动作</li><li>Follow，跟随节点的动作</li><li>ActionInstant，瞬时动作<ul><li>Show，显示</li><li>Hide，隐藏</li><li>ToggleVisibility，切换可见性</li><li>RemoveSelf，将自己从父节点移除</li><li>FlipX，X轴翻转</li><li>FlipY，Y轴翻转</li><li>Place，放到某一位置</li></ul></li><li>ActionInterval，持续动作（To 从当前状态变化到指定的状态，是一个绝对的变化；不支持 reverse Action；By 是变化一定的量；支持reverse Action）<ul><li>RotateTo/RotateBy，旋转到某值/旋转某值</li><li>MoveTo/MoveBy，移动到某值/移动某值</li><li>SkewTo/SkewBy，倾斜到某个值/倾斜某个值</li><li>ResizeTo/ResizeBy，调整大小到某值，调整大小某值</li><li>JumpTo/JumpBy，跳跃到某点，跳跃某点</li><li>BezierTo/BezierBy，贝塞尔曲线到某值，贝塞尔曲线某值</li><li>ScaleTo/ScaleBy，放缩到某值，放缩某值</li><li>Blink，闪烁几次</li><li>FadeTo，设置透明度到某值</li><li>FadeIn/FadeOut，渐显/渐隐</li><li>TintTo/TintBy，调整色值到某值，调整某些色值</li></ul></li><li>组合动作<ul><li>Sequence，依次执行</li><li>Repeat，重复N次执行</li><li>RepeatForever，永远重复执行</li><li>Spawn，同时执行</li></ul></li><li>变速动作（In 由慢到快，Out 由快到慢）<ul><li>Ease In/Out/InOut，线性变换</li><li>EaseExponential In/Out/InOut，指数级变换</li><li>EaseSine In/Out/InOut，正弦曲线变换</li><li>EaseElastic In/Out/InOut，弹性变换</li><li>EaseBounce In/Out/InOut，反弹变换</li><li>EaseBack In/Out/InOut，可以到负</li></ul></li><li>扩展动作<ul><li>Animate，播放帧动画</li><li>TargetedAction，目标动作</li><li>ReverseTime，时间翻转，update时候，传入1-time（默认是 time）</li><li>DelayTime，延迟时间</li><li>CallFunc，函数动作<ul><li>CallFunc，调用函数</li><li>CallFuncN，以Node为第一参数调用函数</li></ul></li></ul></li><li>特效动作<ul><li>OrbitCamera，摄像机环绕特效</li><li>Waves3D，3D旗帜翻滚特效</li><li>FlipX3D/FlipY3D，3D翻转</li><li>Lens3D，3D透镜</li><li>Ripple3D，3D涟漪</li><li>Shaky3D，3D摇晃</li><li>Liquid，流体效果</li><li>Waves2D，波浪效果</li><li>Twirl，旋转扭曲</li><li>PageTurn3D，3D翻页</li><li>ShakyTiles3D，3D瓦片抖动</li></ul></li></ul><p><br></p><h3 id="Animation，动画系统"><a href="#Animation，动画系统" class="headerlink" title="Animation，动画系统"></a>Animation，动画系统</h3><p>动画技术</p><ul><li>帧动画<ul><li>使用一系列图片，播放的时候轮流切换图片</li><li>使用和制作简单，但消耗资源量较大；在制作时要确保图片大小一致且制定好锚点</li><li>支持播放到某一帧时回调；所有播放到这一帧动画的对象，都会触发事件，需要通过target和userInfo信息进行辨别</li></ul></li><li>骨骼动画<ul><li>仿照真实骨骼结构，建立节点数，每个节点算作骨骼的关节，在关节上指定关键帧，通过计算生成中间帧</li><li>节省资源，方便维护，但制作复杂</li></ul></li></ul><h4 id="帧动画"><a href="#帧动画" class="headerlink" title="帧动画"></a>帧动画</h4><p>帧动画 创建流程</p><ol><li>加载所有用到的图片，存到数组中</li><li>根据数组，创建Animation对象，保存帧动画动画信息</li><li>根据Animation对象，创建Animate动作</li><li>创建Sprite对象，执行Animate动作</li></ol><p>Sprite可以运行多个Animate，但Animate间会有冲突，当多个Animate动作同时执行时会相互覆盖。<br>每个Animate需要一个Animation对象，但一个Animation可以被多个Animate对象重用，使用AnimationCache可以避免Animation的创建和销毁。</p><h4 id="进度动画"><a href="#进度动画" class="headerlink" title="进度动画"></a>进度动画</h4><p>进度动画是随着进度更新Sprite，将一个Sprite逐渐显示完整的动画，适合用来做进度更新与CD更新。<br>进度动画主要由Sprite节点、Progress动作和ProgressTimer节点组成。</p><p>类型</p><ul><li>半径扫描</li><li>水平扫描</li><li>垂直扫描</li><li>四边扩散/收缩</li></ul><p><br></p><h3 id="Schedule"><a href="#Schedule" class="headerlink" title="Schedule"></a>Schedule</h3><p>Schedule职责是按照设定的事件执行指定的回调，引擎中所有计时相关内容，都由Schedule实现。</p><p>主要有 Schedule 和 Timer 构成</p><ul><li>Timer<ul><li>负责将一个回调封装为对象，管理回调的计时、触发、保存回调的状态</li><li>类型<ul><li>TimerTargetSelector，封装对象回调</li><li>TimerTargetCallback，封装函数回调</li><li>TimerScriptHandler，封装脚本回调</li></ul></li></ul></li><li>Schedule<ul><li>管理大量Timer，负责注册、注销、驱动执行回调等工作</li></ul></li></ul><p>特点</p><ul><li>支持全局时间放缩、暂停、恢复</li><li>优先级<ul><li>只有update回调有优先级的概念，优先级按照数值从小到大的顺序执行，值越小优先级越高，默认优先级为0</li></ul></li><li>线程安全<ul><li>3.0开始，提供线程安全的定时器功能 performFuncionInCocosThread</li></ul></li></ul><p>更新顺序</p><ol><li>处理时间缩放</li><li>遍历update回调（优先级从低到高）</li><li>遍历对象回调与函数回调</li><li>清理注销update回调</li><li>遍历脚本回调</li><li>遍历执行回调</li></ol><p>生效规则</p><ul><li>顺序先的注册顺序后的回调，本帧执行；顺序后的注册顺序先的回调，下一帧执行；同类型的回调注册看具体回调<ul><li>在脚本回调中注册，当前帧生效，因为脚本回调时直接插入脚本列表尾部</li><li>在函数回调和对象回调中注册其他对象的回调，生效时间不确定，根据哈希便利的规则而定，若注册自身回调，当前帧生效</li><li>在update回调中注册，如果要注册的回调优先级低于等于当前回调的优先级，则该帧生效，否则下一帧生效</li></ul></li><li>例如<ul><li>Node回调中注册添加的所有计时回调，都会在下一帧开始生效</li><li>单击回调注册添加的所有计时回调，会在当前帧开始生效</li></ul></li></ul><p><br></p><p><br></p><h2 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h2><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><p>程序员可操作的内存区域，一般称之为堆栈。<br>C++内存</p><ul><li>栈<ul><li>程序调用函数时系统自动创建的内存空间，在函数返回时释放</li><li>使用栈空间很高效但栈空间容量有限</li></ul></li><li>堆<ul><li>程序运行时，开发者动态创建和管理的内存空间，一般使用new&amp;malloc请求，delete&amp;free回收</li></ul></li><li>常量存储区<ul><li>程序启动时，自动创建的只读内存空间；主要用来存储const常量及写在代码中的字符串</li></ul></li><li>静态存储区<ul><li>程序启动时，自动创建的内存空间；用来存储静态变量和全局变量，可读可写，但不能动态创建</li></ul></li><li>程序代码区<ul><li>存储程序代码二进制内容的只读空间</li></ul></li></ul><p>堆与栈：需要更好地控制对象的生命周期，则必须用堆；需要分配大块的或者动态大小的内存，倾向于用堆；其他情况下尽量用栈，保证安全高效，无内存碎片及内存泄漏。</p><p>内存泄漏：</p><ul><li>是什么：当一块堆上的内存，不再被用到却没有被释放，称之为内存泄漏。</li><li>为什么：<ul><li>函数内动态创建内存，提前return</li><li>多处引用内存，释放内存责任归属</li></ul></li></ul><p>野指针：</p><ul><li>是什么：使用已经被释放了的指针</li><li>为什么：<ul><li>释放指针，并没有手动设置为NULL</li><li>内存泄漏导致</li></ul></li></ul><p>Cocos2d-x的引用计数机制</p><ul><li>实现方法<ul><li>构造函数中，设置为1</li><li>通过retain，计数+1</li><li>通过release，计数-1</li><li>通过autorelease，下一帧-1</li></ul></li><li>其他<ul><li>autorelease优势<ul><li>一次设定后，无须再担心内存泄漏问题</li><li>完美应对，多处使用对象时，释放内存责任归属问题</li></ul></li></ul></li></ul><p>容器对象的内存管理<br>对每个添加进来的对象执行一次retian操作，对每个从容器中删除的对象，执行一次release操作</p><ul><li>CCArray/Vector，数组<ul><li>优点：遍历操作高效，使用下标进行随机访问高效，占用连续的内存空间，push_back操作高效</li><li>缺点：在内部进行插入和删除的效率低，插入的内容超出容量大小时，会有额外消耗</li></ul></li><li>CCDictionary/Map，key-value 关联容器<ul><li>优点：查找效率高，插入删除效率高</li><li>缺点：不适合存储非键值对的对象</li></ul></li><li>CCSet/Set，对STL的set简单封装（主要是retain与release调用）<ul><li>优点：查找效率高，插入删除效率高，可以快速得到两个set之间交集、并集、差集</li><li>缺点：插入和删除效率低于list，遍历效率低于vector</li></ul></li></ul><p>为什么用copy函数来拷贝对象，而不用赋值方法：使用赋值无法执行retain/release操作，易造成内存泄漏。</p><p>内存优化方法</p><ul><li>使用内存池，管理分配、回收内存；控制内存重用、分配适量内存，回收空闲内存</li></ul><h4 id="引擎内存管理"><a href="#引擎内存管理" class="headerlink" title="引擎内存管理"></a>引擎内存管理</h4><h5 id="Ref，CCRef-h-amp-CCRef-cpp"><a href="#Ref，CCRef-h-amp-CCRef-cpp" class="headerlink" title="Ref，CCRef.h &amp; CCRef.cpp"></a>Ref，CCRef.h &amp; CCRef.cpp</h5><p>Ref类用来管理引用计数，所有Ref类的派生类可以方便的被不同地方调用而不担心内存泄漏。</p><p>方法列表</p><ul><li>retain: 引用计数+1</li><li>release: 引用计数-1</li><li>autorelease: 引用计数+1，在下一帧自动-1</li><li>getReferenceCount: 获取当前引用计数值</li></ul><h5 id="PoolManager，CCAutoreleasePool-h-amp-CCAutoreleasePool-cpp"><a href="#PoolManager，CCAutoreleasePool-h-amp-CCAutoreleasePool-cpp" class="headerlink" title="PoolManager，CCAutoreleasePool.h &amp; CCAutoreleasePool.cpp"></a>PoolManager，CCAutoreleasePool.h &amp; CCAutoreleasePool.cpp</h5><p>AutoreleasePool：管理autorelease对象池</p><p>AutoreleasePool方法列表：</p><ul><li>AutoreleasePool: 构造方法，可以简单创建，也可以指定名称；请在栈中创建而不是在堆中</li><li>addObject: 添加Ref对象到池中；同一个对象被多次添加，会调用多次release（不会去重）</li><li>clear: 清空池；将调用所有池中对象的relase方法</li><li>contains: 检测池中是否有指定对象</li><li>dump: 输出所有池中对象（debug用）</li></ul><p>PoolManager<br>引擎中可以有多个autorelease池，管理所有的autorelase池</p><p>PoolManager方法列表</p><ul><li>sharedPoolManager: 创建，单例类，全局唯一</li><li>purgePoolManager: 释放</li><li>getCurrentPool: 获得当前autorelease池；引擎中至少存在1个，可以创建自定义的autorelease池</li><li>isObjectInPools: 检测某个对象是否在池中；会遍历所有的池</li><li>[private]push: 压入autorelease池</li><li>[private]pop: 弹出autorelease池</li></ul><p><br></p><h3 id="纹理"><a href="#纹理" class="headerlink" title="纹理"></a>纹理</h3><p>纹理是加载到内存中，用于渲染的一组图像数据。<br>将一个纹理应用到一个图元表面的操作，称之为纹理贴图。<br>图片往往占据一个游戏中大部分内存和安装包的体积，纹理加载和渲染也是影响游戏运行效率的因素。</p><p>纹理可分为</p><ul><li>1D纹理；一条线</li><li>2D纹理；一个面</li><li>3D纹理；一个体</li></ul><p>纹素是纹理元素的简称，是纹理空间的基本单位；图像由像素排列而成，纹理由纹素排列而成，使用图片生成纹理之后，像素转换成了纹素。</p><ul><li>像素转换成纹素后，依旧保存着颜色数据</li><li>像素是一个测量单位，纹素存在于一个虚拟无尺寸的数学坐标系中，无论纹理对应图像尺寸是多少，纹理尺寸永远是 [0, 1]</li><li>纹理坐标系中，S、T、R 三个轴分别对应三维坐标系的 X、Y、Z 三个轴</li></ul><h4 id="引擎的纹理"><a href="#引擎的纹理" class="headerlink" title="引擎的纹理"></a>引擎的纹理</h4><p>在Cocos2d引擎中，纹理被封装到了Texture2D中，Texture2D是Sprite以及一切可显示对象的基础，出了基础图元，其他一切可显示对象最底层都是基于 Texture2D。</p><p>Texture2D主要提供</p><ul><li>图片解析</li><li>纹理生成</li><li>纹理渲染</li></ul><p>Texture2D 初始化途径</p><ul><li>initWithData，根据加载到内存中的二进制数据初始化</li><li>initWithMipMaps，最终都会调用到此方法初始化</li><li>initWithImage，根据加载到内存的Image图像初始化</li><li>initWithString，根据字符串初始化</li></ul><p>纹理初始化考虑的问题：</p><ul><li>MipMap；<ul><li>意味着该纹理有多张图片，并且是多张内容一样但是尺寸不一样的图片，也称为LOD技术，目的是提高渲染质量与效率，但会增加额外的内存</li><li>如果纹理使用了MipMap，Texture2D将不支持转换该纹理格式</li></ul></li><li>纹理压缩<ul><li>对于被压缩的纹理，Texture2D调用不同的OpenGL接口来处理</li><li>压缩的纹理和MipMap不冲突</li></ul></li><li>纹理格式<ul><li>纹理格式转换会发生在普通纹理上</li><li>从格式A转换到格式B时，Texture2D会分配额外大块内存来存储转换后的纹理，在加载完毕后释放</li></ul></li></ul><p>引擎使用TextureCache来管理纹理</p><ul><li>TextureCache中以纹理名字为key，纹理对象为value</li><li>当纹理加载到TextureCache后，除非明确的调用删除纹理，否则，纹理会在程序结束时候由引擎释放</li><li>纹理支持异步加载</li></ul><p>引擎使用SpriteFrameCache来管理帧信息</p><ul><li>SpriteFrameCache中以plist文件名为key，SpriteFrame为value</li><li>SpriteFrameCache支持加载与写在plist图集，图集对应的纹理，存在TextureCache中</li><li>SpriteFrame不支持异步加载</li></ul><p>异步加载纹理流程</p><ol><li>判断纹理是否已经加载好<ul><li>是；则直接调用回调函数并返回</li></ul></li><li>判断加载队列是否为空<ul><li>是；创建队列以及线程，并Schedule自己的addImageAsyncCallBack方法</li></ul></li><li>将要加载的纹理插入到队列尾部，线程会开始加载</li><li>在线程中，依次加载队列中的纹理，如果纹理加载好则跳过加载步骤</li><li>所有纹理加载好后，清空释放队列，结束线程</li><li>在主线程的addImageAsyncCallBack回调中，根据加载完的Image创建Texture2D并执行回调</li><li>当所有纹理加载完后，addImageAsyncCallBack会注销自己</li></ol><h4 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h4><p>POT（Power Of Two） &amp; NPOT（Non Power Of Two）</p><ul><li>POT表示图片的宽高都是2的幂，NPOT表示图片的宽高不必是2的幂</li><li>原因：<ul><li>早期设备要求渲染的图片宽高必须是POT（iPhone 3GS之前不支持NPOT，Android设备无不支持）</li><li>由于字节对齐，可能给纹理渲染带来一点效率提升</li></ul></li></ul><p>纹理混合 </p><ul><li>决定在同一个位置，叠加渲染多种颜色时的最终颜色。正常情况下，任何绘制操作只会被丢弃或完全覆盖。</li><li>OpenGL在渲染时，会将颜色值放道OpenGL的颜色缓冲区，并将每个片段的深度值放道OpenGL的深度缓冲区中<ul><li>关闭深度测试时，颜色会直接被替换</li><li>开启深度测试时，离摄像机更近的片段的颜色会覆盖原先的颜色</li><li>颜色混合开启时，将要渲染的颜色会和颜色缓冲区当前的颜色进行一次混合运算，并将运算后的最终值存入颜色缓冲区中</li></ul></li></ul><p>颜色混合公式</p><ul><li>最终颜色 = 源颜色 <em> 源颜色混合系数 + 目标颜色 </em> 目标颜色混合系数</li></ul><p>Alpha混合公式</p><ul><li>最终颜色 = 颜色 * Alpha；</li></ul><p>Alpha预乘</p><ul><li>在导出图片资源时，已经计算过Alpha值，不必再运行时计算。</li></ul><p>纹理过滤</p><ul><li>根据一个拉伸或收缩的纹理贴图计算颜色片段的过程；OpenGL使用放大过滤器来处理纹理拉伸、缩小过滤器来处理纹理收缩</li><li>过滤类型<ul><li>GL_LINEAR，线性过滤，少许额外开销，效果会好很多</li><li>GL_NEAREST，最邻近过滤，快速，但效果差</li><li>各向异性过滤，极大提高纹理过滤质量（一般3D）</li></ul></li></ul><p>纹理环绕</p><ul><li>正常情况下，纹理坐标范围是 [0, 1]，当指定的纹理坐标在范围之外时，OpenGL会根据当前纹理环绕模式来处理</li><li>使用纹理环绕时，要指定哪个方向的纹理环绕，坐标系为 S、T、R（对应 X、Y、Z）</li><li>环绕类型<ul><li>GL_REPEAT，重复环绕，使用一小块纹理重复绘制一大片内容，平铺一个几何面</li><li>GL_CLAMP，截取环绕，对范围外的纹理坐标使用边界纹理单元和边界像素融合后的值</li><li>GL_CLAMP_TO_EDGE，截取到边缘环绕，强制对范围外的纹理坐标使用边界像素（沿着合法的纹理单元最后一行或最后一列进行采样）</li><li>GL_CLAMP_TO_BORDER，截取到边框环绕，对范围外的纹理只使用边界纹理单元</li></ul></li></ul><p>Mip贴图</p><ul><li>使用Mip贴图可以提高渲染性能以及渲染效果，主要解决纹理进行缩放时的闪烁效果，以及提高纹理缩放时的纹理过滤效率。</li><li>Mip贴图使用多张不同分辨率的纹理（分为多隔层），根据当前纹理在屏幕上的实际尺寸来决定使用哪个版本。</li><li>在Mip贴图的纹理过滤中，只有使用Mip贴图的过滤模式，Mip贴图才会生效<ul><li>GL_NEAREST，在Mip基层执行最邻近过滤</li><li>GL_LINEAR，在Mip基层执行线性过滤</li><li>GL_NEAREST_MIPMAP_NEAREST，选择最邻近的Mip层，执行最邻近过滤</li><li>GL_NEAREST_MIPMAP_LINEAR，在Mip层之间执行线性插补，并执行最邻近过滤</li><li>GL_LINEAR_MIPMAP_NEAREST，选择最邻近的Mip层，执行线性过滤</li><li>GL_LINEAR_MIPMAP_LINEAR，在Mip层之间执行线性插补，并执行线性过滤</li></ul></li></ul><h4 id="纹理格式"><a href="#纹理格式" class="headerlink" title="纹理格式"></a>纹理格式</h4><p>图片文件的存储格式</p><ul><li>类型<ul><li>JPG<ul><li>优点：压缩率高，占用空间小</li><li>缺点：有损压缩，显示效果差，不支持透明通道，解压时间久，需要占用大量额外内存，加载到内存时与PNG占用同样内存但效果远低于PNG</li></ul></li><li>PNG<ul><li>优点：无损压缩，支持透明通道，显示效果好</li><li>缺点：压缩率低</li></ul></li><li>TIFF<ul><li>常用语印刷和扫描</li></ul></li><li>TGA<ul><li>无损压缩，用于存储高质量图像，支持透明通道</li></ul></li><li>Webp<ul><li>Google用来替代PNG的格式，有损压缩，同质量比JPG体积小40%，编码压缩时间比JPG长8倍</li></ul></li></ul></li><li>关心问题<ul><li>图片文件占用磁盘空间大小</li><li>图片品质的高低</li><li>加载该图片文件的速度</li><li>引擎是否支持解析文件</li></ul></li></ul><p>纹理在内存中的存储格式</p><ul><li>类型<ul><li>BGRA8888 32位纹理，效果非常好，兼容性高</li><li>RGBA8888 32位纹理，效果非常好，兼容性比较差</li><li>RGB888 24位纹理，效果非常好，不支持透明通道</li><li>RGB565 16位纹理，效果较好，不支持透明通道</li><li>RGBA4444 16位纹理，色彩比RGB5A1略差，但半透明效果良好</li><li>RGBA5A1 16位纹理，色彩较好，但半透明效果差，透明通道仅用于镂空</li></ul></li><li>关心问题<ul><li>占用内存的大小</li></ul></li></ul><p>决定图片占用内存的因素</p><ul><li>图片的尺寸</li><li>图片的像素格式</li></ul><p>决定图片存储空间大小因素</p><ul><li>图片的文件格式</li><li>图片内容丰富成都</li></ul><h4 id="纹理压缩"><a href="#纹理压缩" class="headerlink" title="纹理压缩"></a>纹理压缩</h4><p>纹理压缩是一种专门为在计算机图形渲染系统中存储纹理而使用的图像压缩技术，与普通图形压缩算法的不同之处在于，纹理压缩算法为纹素的随机存取做了优化。</p><p>纹理压缩的特点是 解压速度快。</p><p>纹理压缩的目的是 节省内存，纹理压缩可以让更多的纹理装入图形硬件中（即显卡）。</p><p>纹理压缩图片只与压缩格式以及图片尺寸相关，与内容丰富度无关。即512x512大小图片，通过ETC压缩，大小恒定128KB。</p><p>纹理压缩格式对比</p><ul><li>PVRTC<ul><li>PowerVR系列GPU支持，移动平台上主要用于 iOS，压缩率最高，图像质量好，但图片必须是POT纹理</li></ul></li><li>ATITC<ul><li>高通Adreno系列GPU支持，来自以前的ATI，排他性较强，压缩率和质量也没有特别出色的地方</li></ul></li><li>DXTC/S3TC<ul><li>NVIDIA Tegra系列、VivanteGC系列，DXTC和S3TC是同一种压缩格式，是在DirectX和OpenGL中的两个称呼，具有不错的压缩率，主要用于PC与WinPhone</li></ul></li><li>ETC1<ul><li>ARM的Mali系列GPU支持，前面四个也支持，是OpenGL ES图形标准的一部分，安卓平台广泛支持ETC压缩的GPU加速，但不支持Alpha通道，部分显卡不支持NPOT，所以，尽量使用POT纹理</li></ul></li><li>ETC2<ul><li>向下兼容ETC1，比ETC1质量更好，且支持alpha的单通道和双通道的模式；但需要OpenGL ES 3.0版本以上</li></ul></li><li>ASTC<ul><li>ASTC支持RGBA，且支持NPOT，它的压缩质量好，容量小，性能优；但需要OpenGL ES 3.1版本以上，部分 OpenGL ES 3.0 的GPU也支持；目前基本都支持ASTC了，可以应用起来</li></ul></li></ul><p><br><br><br></p><h3 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h3><p>Cocos2d的运行流程主要封装到 Application 和 Director </p><ul><li>Application，关注程序如何在不同平台运行<ul><li>封装操作系统的细节（当前系统语言、资源搜索路径、应用程序的主循环）</li><li>主要控制的时机<ul><li>程序启动</li><li>程序更新</li><li>程序切换到后台</li><li>程序从后台切换回前台</li></ul></li></ul></li><li>Director，关注游戏内部逻辑的执行<ul><li>游戏的主循环控制、管理资源、设置定时器、管理触摸、重力感应等</li></ul></li></ul><p><br></p><h4 id="Cocos2d在Windows平台运行流程"><a href="#Cocos2d在Windows平台运行流程" class="headerlink" title="Cocos2d在Windows平台运行流程"></a>Cocos2d在Windows平台运行流程</h4><p>在WinMain函数中，创建Appliaction，在Appliaction:run方法中，执行AppDelegate的启动方法，实现游戏的主循环及游戏退出；对于Windows下OpenGL窗口创建和窗口消息，都是由GLFW提供的支持，并在处理窗口消息的回调中，将消息翻译并转发给Cocos2d程序。</p><p>Windows平台将应用程序分为控制台程序和窗口应用程序两种，两者入口函数不同，Cocos2d程序属于窗口应用程序，入口函数为 winMain</p><p>在main.cpp中启动Cocos2d应用程序，实例化AppDelegate对象，并调用run方法</p><ol><li>设置OpenGL属性</li><li>回调 程序启动（创建OpenGL窗口等）</li><li>循环调用，直到OpenGL窗口即将关闭</li><li>在循环中对帧率进行控制，执行 Director:mainLoop 和 GLView:pollEvents</li><li>如果强制关闭窗口，调用 Director:end 和 Director:mainLoop 来完成清理工作（正常关闭是 Director:end）</li></ol><p>GLFW提供很多回调支持<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CCGLViewImpl-desktop.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GLFW callbacks</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWError</span><span class="params">(<span class="keyword">int</span> errorID, <span class="keyword">const</span> <span class="keyword">char</span>* errorDesc)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWMouseCallBack</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> button, <span class="keyword">int</span> action, <span class="keyword">int</span> modify)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWMouseMoveCallBack</span><span class="params">(GLFWwindow* window, <span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWMouseScrollCallback</span><span class="params">(GLFWwindow* window, <span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWKeyCallback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> key, <span class="keyword">int</span> scancode, <span class="keyword">int</span> action, <span class="keyword">int</span> mods)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWCharCallback</span><span class="params">(GLFWwindow* window, <span class="keyword">unsigned</span> <span class="keyword">int</span> character)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWWindowPosCallback</span><span class="params">(GLFWwindow* windows, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWframebuffersize</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWWindowSizeFunCallback</span><span class="params">(GLFWwindow *window, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWWindowIconifyCallback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> iconified)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onGLFWWindowFocusCallback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> focused)</span></span>;</span><br></pre></td></tr></table></figure></p><h4 id="Cocos2d在Android平台运行流程"><a href="#Cocos2d在Android平台运行流程" class="headerlink" title="Cocos2d在Android平台运行流程"></a>Cocos2d在Android平台运行流程</h4><p>Android程序主要使用Java进行开发，使用JNI技术实现C++与Java语言的互相调用，从而让Cocos2d引擎的C++代码能够在Android下执行。</p><p>Android程序的入口是一个Activity，一个应用程序可以有多个Activity，入口Activity是AndroidMainfest.xml的第一个Activity。<br>Cocos2d引擎 3.x版本中，统一生成AppActivity，设置为程序入口。<br>在AndroidMainfest.xml配置文件中，还有一些其他重要的配置项。</p><p>自动生成的Activity（也就是AppActivity）继承与Cocos2dxActivity</p><ol><li>Android程序启动，创建AppActivity:onCreate</li><li>加载C++逻辑代码，编译一个so动态链接库</li><li>Android加载so动态链接库，加载完后可以在Java中通过JNI调用C++的native函数</li><li>Cocos2dxActivity初始化<ul><li>初始化Cocos2dxHandler、Cocos2dxHelper、Cocos2dxVideoHelper等</li><li>创建OpenGL视图</li></ul></li><li>各种初始化回调后，调用到Application:run，并进入主循环</li><li>游戏的逻辑由Cocos2dxRenderer:onDrawFrame驱动</li></ol><p>相对于Windows是GLFW来支持各种回调，在Android中是通过 Cocos2dxGLSurfaceView来捕获消息，并回调引擎方法。</p><h4 id="Cocos2d在iOS平台运行流程"><a href="#Cocos2d在iOS平台运行流程" class="headerlink" title="Cocos2d在iOS平台运行流程"></a>Cocos2d在iOS平台运行流程</h4><p>iOS程序使用Object-C语言进行开发，不同于JAVA需要借助于JNI，Object-C语言可以直接调用C++语言。</p><p>在Mac上使用Cocoa架构来编写程序，在iOS上使用Cocoa Touch架构运行，两者关系如同 OpenGL 与 OpenGL ES。</p><ul><li>Cocos2d-x引擎也是从Cocoa架构发展而来的，该架构中包含几大框架（类库）<ul><li>Foundation，通用基础类库，提供NSString、NSDictionary、NSArray这种基础容器</li><li>AppKit（Cocoa），用于开发Mac程序，实现窗口界面及交互功能</li><li>UIKit（Cocoa Touch），开发iOS程序，实现窗口界面及交互功能</li></ul></li><li>Cocoa架构使用MVC模式，开发者使用各种Controller操纵程序视图及模型</li></ul><p>启动流程</p><ol><li>UIAppliacation启动后，调用AppController方法</li><li>初始化OpenGL配置参数，创建全屏UIWindows显示</li><li>创建OpenGL视图CCEAGLView，实现渲染，并处理UI交互逻辑</li><li>使用CCEAGLView创建出iOS下的GLViewImpl对象，并将其设置为显示视图</li><li>执行Application:run，进入游戏主循环</li><li>CCEAGLView创建的CCES2Renderer执行渲染</li></ol><p>对应于WindowGLFW的监听与Android的Cocos2dxGLSurfaceView的捕获，iOS的CCEAGLView继承于UIView，它本身可以监听玩家触摸及键盘弹出关闭消息，重力感应则有单独的CCAccelerometerDispatcher处理。</p><p><br></p><h3 id="渲染机制"><a href="#渲染机制" class="headerlink" title="渲染机制"></a>渲染机制</h3><p>所有的渲染功能都由专门的Renderer来处理，降低耦合度，通过自动合并渲染批次更是极大的提升了渲染效率。</p><p>合批限制</p><ul><li>一次只能渲染一张纹理</li><li>使用统一的混合方式</li><li>使用同一个Shader，且该Shader不可使用uniform</li><li>当前待渲染的定点数量没超过指定值（65536）</li><li>如果使用SpriteBatchNode合批，子节点必须是Sprite</li></ul><p>渲染流程</p><ol><li>遍历节点 Node:visit<ol><li>先遍历节点ZOrder小于0的节点 Node:visit</li><li>调用节点渲染方法，向Renderer添加渲染命令 Node:draw</li><li>再遍历节点ZOrder大于0的节点 Node:visit</li></ol></li><li>调用Renderer，开始渲染</li></ol><p>Renderer</p><ul><li>职责<ul><li>管理RenderQueue</li><li>执行RenderCommand</li></ul></li><li>渲染顺序<ol><li>2D Z轴小于0的物体：根据设置决定是否开启深度测试</li><li>3D 不透明物体：开启深度测试</li><li>3D 透明物体：关闭深度测试</li><li>2D Z轴等于0的物体：根据设置决定是否开启深度测试</li><li>2D Z轴大于0的物体：根据设置决定是否开启深度测试</li></ol></li></ul><p>RenderQueue</p><ul><li>管理RenderCommand，设置优先级</li><li>类型<ul><li>普通的 RenderQueue，会根据RenderCommand的Z值（大于0，小于0，等于0），分成三个列表</li><li>专门负责 3D透明渲染的 TransparentRenderQueue，只有一个列表</li></ul></li></ul><p>RenderCommand</p><ul><li>渲染架构中最小单元，描述渲染所需基础信息，并实现渲染操作</li><li>类型<ul><li>TrianglesCommand<ul><li>渲染一系列三角形，根据glProgram、textureID、BlendFunc生成材质ID</li><li>初始化：<ul><li>globalOrder，全局Z轴坐标</li><li>textureID，纹理ID</li><li>GLProgramState，Shader</li><li>BlendFunc，颜色混合</li><li>Triangles，一系列三角形顶点信息</li><li>Mat4，模型视图矩阵</li></ul></li></ul></li><li>QuadCommand<ul><li>继承自TrianglesCommand，渲染一个四边形图元</li><li>初始化：<ul><li>globalOrder，全局Z轴坐标</li><li>textureID，纹理ID</li><li>GLProgramState，Shader</li><li>BlendFunc，颜色混合</li><li>V3F_C4B_T2F_Quad*，一系列顶点信息</li><li>MAat4，模型视图矩阵</li></ul></li><li>例如：Sprite、AtlasNode、Skin、ParticlesSystemQuad等</li></ul></li><li>MeshCommand<ul><li>渲染3D模型，包含大量关于Shader设置、灯光、材质、裁剪、深度测试渲染相关方法</li></ul></li><li>GroupCommand<ul><li>辅助渲染命令，用于命令的分组，内部只有一个groupId，ID对应Renderer中的某个RenderQueue</li><li>流程<ol><li>创建并初始化GroupCommand，生成一个GroupID</li><li>将GroupCommand添加到Renderer中</li><li>调用Renderer的pushGroup，切换当前RenderQueue</li><li>接下来所有addCommand都添加到当前RenderQueue中</li><li>调用Renderer的popGroup，切换回之前的RenderQueue</li></ol></li><li>例如：Armature、NodeGrid、RenderTexture、ClippingNode等 </li></ul></li><li>PrimitiveCommand<ul><li>用于渲染点、直线、曲线、三角形、圆形、四边形等基础图元</li><li>初始化：<ul><li>globalOrder，全局Z轴坐标</li><li>textureID，纹理ID</li><li>GLProgramState，Shader</li><li>BlendFunc，颜色混合</li><li>Mat4，模型视图矩阵</li><li>Primitive，图元顶点信息</li></ul></li></ul></li><li>BatchCommand<ul><li>每个BatchCommand都会执行一次DrawCall，且该DrawCall不会合批</li></ul></li><li>CustomCommand<ul><li>实现自定义渲染，手动调用OpenGL代码进行绘制</li><li>流程<ol><li>实现CustomCommand渲染方法并设置为CustomCommand的渲染回调</li><li>将渲染命令添加到Renderer中</li></ol></li></ul></li></ul></li></ul><p><br></p><h3 id="消息机制"><a href="#消息机制" class="headerlink" title="消息机制"></a>消息机制</h3><p>事件通知机制是使用观察者模式实现的将事件传递给多个监听对象的机制。</p><p>引擎通过EventDispatcher系列来实现事件通知机制。</p><ul><li>EventListener，监听并实现事件触发后的回调</li><li>Event，记录事件内容</li><li>EventDispatcher，管理、触发事件</li></ul><p>EventDispatcher使用流程</p><ol><li>创建EventListener，指定要监听的消息及监听到消息后触发的回调</li><li>将创建的EventListener注册到EventDispatcher中</li><li>任意地方需要触发事件，调用 Director::getInstance()-&gt;getEventDispatcher()-&gt;dispatchEvent(event)</li><li>不需要监听时间时，将监听器移除，Director::getInstance()-&gt;getEventDispatcher()-&gt;removeEventListener(listener)</li></ol><p>EventDispatcher缺点</p><ul><li>内部实现复杂，将各种监听、节点顺序都集合到类中不合理，职责不单一</li><li>代码冗余度高，可读性差</li></ul><h4 id="EventListenerTouch，触摸"><a href="#EventListenerTouch，触摸" class="headerlink" title="EventListenerTouch，触摸"></a>EventListenerTouch，触摸</h4><p>类型有</p><ul><li>TOUCH_ONE_BY_ONE，EventListenerTouchOneByOne，单点触摸<ul><li>可设置吞噬触摸，独占触摸事件，先后由优先级来指定</li></ul></li><li>TOUCH_ALL_AT_ONCE，EventListenerTouchAllAtOnce，多点触摸</li></ul><p>优先级</p><ul><li>触摸监听优先级整合到EventDispatcher中</li><li>方法<ul><li>addEventListenerWithSceneGraphPriority，局部优先级，使用指定节点的遮挡顺序来作为优先级，全局优先级默认都为0</li><li>addEventListenerWithFixedPriority，全局优先级，自定义优先级，不能为0</li></ul></li></ul><p>引擎内触摸流程</p><ol><li>开始，手指按下<ul><li>onTouchBegan &amp; onTouchesBegan</li></ul></li><li>移动，手指移动<ul><li>onTouchMove &amp; onTouchesMove</li></ul></li><li>结束，手指抬起<ul><li>onTouchEnded &amp; onTouchesEnded</li></ul></li><li>中断，被其他系统进程切换（如来电、短信、闹钟等）<ul><li>onTouchCancelled &amp; onTouchesCancelled</li></ul></li></ol><p>全局触摸流程</p><ol><li>用户输入<ul><li>按下、移动、抬起</li></ul></li><li>操作系统收集到用户输入<ul><li>Android、iOS、Windows等</li></ul></li><li>操作系统调用引擎接口<ul><li>GLViewImpl、handleTouchesXXX、EvnetDispatcher</li></ul></li><li>消息机制派发触摸事件<ol><li>对单点触摸监听列表与多点触摸监听列表进行排序</li><li>拷贝两份触摸点列表，一份给单点触摸用，一份给多点触摸用</li><li>处理单点触摸监听列表<ul><li>如果触发的是开始触摸事件，则判定是否吞噬触摸，若吞噬则将触摸点从多点触摸列表中移除</li></ul></li><li>处理多点触摸监听列表</li></ol></li><li>调用具体的监听回调<ul><li>EventListenerTouchOneByOne</li><li>EventListenerTouchAllAtOnce</li></ul></li></ol><p><img src="触摸输入流程.png" alt=""></p><p><br></p><p><br></p><p><br></p><h1 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h1><p>GUI（Graphical User Interface）图形用户界面，是指采用图形方式显示的计算机操作用户界面。<br>替代以前，在代码中create创建，setPosition设置位置，让开发者用可视化方式去创建，更加快捷方便。</p><p>Cocos2d引擎常配套的工具</p><ul><li>CocosStudio</li><li>CocosBuilder</li></ul><p>Cocos2d引擎GUI框架结构</p><ul><li>所有控件基础，UIWidget</li><li>所有容器基础（容器也算控件一种，即也继承自UIWidget），UILayout</li><li>操作UI工具方法，UIHelper<ul><li>支持对Widget遍历</li><li>支持辅助布局的功能</li></ul></li><li>九宫格缩放，Scale9Sprite<ul><li>定义：用一小块图片将其放大来绘制大范围区域而不失真的技术；用井字分割图片，四个角图片不变，中间和四条边拉伸（被拉伸图片要尽量简单）</li><li>目的：<ol><li>保证图片缩放时的边角不会出现变形和锯齿</li><li>节省图片资源</li></ol></li><li>实现：创建9个Sprite对象，每个对应九宫格一部分，通过setCapInsets传入Rect对象来设置九宫图中间格子位置和尺寸</li></ul></li></ul><h2 id="UIWidget-与-UILayout"><a href="#UIWidget-与-UILayout" class="headerlink" title="UIWidget 与 UILayout"></a>UIWidget 与 UILayout</h2><p>UIWidget</p><ul><li>ProcetedNode<ul><li>保护节点，保证节点结构完整性，避免通过removeAllChildren等方法误删所有节点</li><li>有两个容器，_children容器来处理一般节点， _protectedChildren来处理保护节点</li></ul></li><li>LayoutParameterProtocol<ul><li>提供布局参数对象 LayoutParameter，处理布局相关</li><li>LayoutParameter，存储控件的布局方式与Margin边距<ul><li>LinearLayoutParameter，线性布局</li><li>RelativeLayoutParameter，相对布局</li></ul></li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 线性布局类型</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">LinearGravity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    NONE,</span><br><span class="line">    LEFT,</span><br><span class="line">    TOP,</span><br><span class="line">    RIGHT,</span><br><span class="line">    BOTTOM,</span><br><span class="line">    CENTER_VERTICAL,</span><br><span class="line">    CENTER_HORIZONTAL</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相对布局类型</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">RelativeAlign</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    NONE,</span><br><span class="line">    PARENT_TOP_LEFT,</span><br><span class="line">    PARENT_TOP_CENTER_HORIZONTAL,</span><br><span class="line">    PARENT_TOP_RIGHT,</span><br><span class="line">    PARENT_LEFT_CENTER_VERTICAL,</span><br><span class="line">    </span><br><span class="line">    CENTER_IN_PARENT,</span><br><span class="line">    </span><br><span class="line">    PARENT_RIGHT_CENTER_VERTICAL,</span><br><span class="line">    PARENT_LEFT_BOTTOM,</span><br><span class="line">    PARENT_BOTTOM_CENTER_HORIZONTAL,</span><br><span class="line">    PARENT_RIGHT_BOTTOM,</span><br><span class="line">    </span><br><span class="line">    LOCATION_ABOVE_LEFTALIGN,</span><br><span class="line">    LOCATION_ABOVE_CENTER,</span><br><span class="line">    LOCATION_ABOVE_RIGHTALIGN,</span><br><span class="line">    LOCATION_LEFT_OF_TOPALIGN,</span><br><span class="line">    LOCATION_LEFT_OF_CENTER,</span><br><span class="line">    LOCATION_LEFT_OF_BOTTOMALIGN,</span><br><span class="line">    LOCATION_RIGHT_OF_TOPALIGN,</span><br><span class="line">    LOCATION_RIGHT_OF_CENTER,</span><br><span class="line">    LOCATION_RIGHT_OF_BOTTOMALIGN,</span><br><span class="line">    LOCATION_BELOW_LEFTALIGN,</span><br><span class="line">    LOCATION_BELOW_CENTER,</span><br><span class="line">    LOCATION_BELOW_RIGHTALIGN</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>设置控件位置与大小，也提供两种模式</p><ul><li>绝对坐标</li><li>相对父节点的百分比</li></ul><p>控件的触摸判断</p><ul><li>isVisible，自己是否可见</li><li>isEnabled，自己是否激活</li><li>isAncestorsVisible，递归检查父节点是否都可见</li><li>isAncestorsEnabled，递归检查父节点是否都激活</li><li>hitTest，触摸落在自己触摸范围内</li></ul><p>创建自定义Widget</p><ul><li>onSizeChanged，控件改变尺寸时的回调，默认通知所有子节点调整位置</li><li>initRenderer，初始化控件时回调，用于初始化控件的渲染对象</li><li>createCloneInstance，控件调用clone时回调</li><li>copySpecialProperties，克隆的控件有自定义属性需要被复制时，在此处处理</li><li>copyClonedWidgetChildren，若不想克隆某些子节点，就调整</li></ul><p><br></p><p>UILayout</p><ul><li>对应Layer，作为容器使用，支持各种背景支持、裁剪、Layout布局等</li><li>背景支持<ul><li>图片</li><li>纯色</li><li>渐变色</li></ul></li><li>裁剪<ul><li>STENCIL<ul><li>创建一个DrawNode并渲染，根据裁剪大小绘制一个矩形，使用OpenGL模板实现裁剪（显示在裁剪范围内的部分）</li></ul></li><li>SCISSOR<ul><li>调用glScissor对显示在裁剪范围外的部分进行裁剪</li></ul></li></ul></li><li>Layout布局<ul><li>类型<ul><li>绝对布局，以左下角为原点，不论分辨率如何变化，都按照绝对坐标位置排列</li><li>相对布局，基于父节点或兄弟节点，以 上 下 左 右 左上 左下 右上 右下 8个方向为停靠点的相对布局，在分辨率变化时保持相对停靠</li><li>线性横向，相对布局的简化版，去掉上中下的相对设置</li><li>线性纵向，相对布局的简化版，去掉左中右的相对设置</li></ul></li><li>流程<ol><li>每个Layout下的控件，会被设置对应的LayoutParameter</li><li>在visit函数中，Layout调用doLayout进行布局<ol><li>对子节点排序</li><li>根据当前布局类型创建LayoutManager</li><li>调用LayoutManager的doLayout对Layout进行布局</li></ol></li></ol></li><li>注意<ul><li>在创建完后，有所变化，需要手动调用 requestDoLayout 请求刷新布局</li></ul></li></ul></li></ul><p><br></p><h2 id="控件-1"><a href="#控件-1" class="headerlink" title="控件"></a>控件</h2><p>对UIWidget对象处理Shader无效，需要通过 getVirtualRenderer 来获取对应的渲染节点，然后进行设置。</p><p>UIButton</p><ul><li>组成<ul><li>3个Scale9Sprite节点，通过getVirtualRenderer获取渲染节点</li><li>1个Label节点，通过getTitleRenderer获取Label节点</li></ul></li><li>按钮上的图片支持9宫格放缩</li></ul><p>UICheckBox</p><ul><li>组成<ul><li>5个Sprite节点<ul><li>未选态背景图片</li><li>选中态背景图片</li><li>禁用态背景图片</li><li>选中态前景图片</li><li>禁用态前景图片</li></ul></li></ul></li></ul><p>UIImageView</p><ul><li>组成<ul><li>1个Scale9Sprite节点</li></ul></li></ul><p>UILoadingBar</p><ul><li>组成<ul><li>1个Scale9Sprite节点</li></ul></li><li>支持方向<ul><li>左到右</li><li>右到左</li></ul></li></ul><p>UISlider</p><ul><li>组成<ul><li>2个Scale9Sprite节点<ul><li>进度条背景</li><li>进度条前景</li></ul></li><li>3个Sprite节点<ul><li>滑钮正常态</li><li>滑钮选中态</li><li>滑钮禁用态</li></ul></li></ul></li></ul><p>文本控件</p><ul><li>通过 getVirtualRenderer 获取Label节点</li><li>类型<ul><li>UIText，对应 LabelType:: / LabelType::STRING_TEXTURE</li><li>UITextAtlas，对应 LabelType::CHARMAP</li><li>UITextBMFont，对应 LabelType::BMFONT</li></ul></li></ul><p>UIRichText</p><ul><li>RichText<ul><li>insertElement&amp;pushBackElement 添加节点</li><li>removeElement 删除节点</li></ul></li><li>RichElement<ul><li>RichElementText，仅支持SystemFont和TTF</li><li>RichElementImage</li><li>RichElementCustomNode</li></ul></li></ul><p>UITextField</p><ul><li>对TextFieldTTF的封装，自动化处理点击判断，支持自动换行和对齐，设置长度限制，设置密码模式等</li></ul><p>UIEditBox</p><ul><li>TextField升级版，不同平台有不同表现，调用平台接口来获取输入</li><li>支持丰富的输入模式与输入背景框</li></ul><p>UIScrollView</p><ul><li>处理视图的滚动拖拽以及视口裁剪</li><li>组成：1个innerContainer的Layout，一个ScrollViewBar</li></ul><p>UIListView</p><ul><li>提供方法管理Item，除了增删改查，还支持设置DefaultItem；创建时除了ListView大小，还要指定item大小</li></ul><p>UIPageView</p><ul><li>左右拖动实现翻页</li></ul><p>UIWebView</p><ul><li>浏览网页，底层直接使用操作系统的WebView控件</li></ul><p><br></p><p><br></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="CocosStudio"><a href="#CocosStudio" class="headerlink" title="CocosStudio"></a>CocosStudio</h3><p>文件类型</p><ul><li>场景，用于编辑场景，需要嵌套其他csd文件，场景大小根据项目分辨率来设置，根节点为Node</li><li>图层，类似于场景，但有固定大小并且根节点为LayerRGBA</li><li>节点，编辑节点，可以嵌套其他csd文件，根节点为Node</li><li>合图，等同于TexturePacker导出的Plist图集，文件后缀为csi</li><li>3D场景，用于编辑3D场景，可添加相机、节点、3D例子和模型</li></ul><p>加载解析csb文件</p><ol><li>[BaseView:__widgetFromJsonFile] ccCSLoader:getInstance():createNodeWithFlatBuffersFile</li><li>doLayout(Helper, self._widget)</li><li>BaseEvent:L10N_Text</li></ol><p>分辨率适配</p><ul><li>布局设置，上下左右图钉</li><li>百分比位置</li><li>等比缩放</li></ul><p>高级特性</p><ul><li>回调特性</li><li>帧事件</li><li>自定义数据</li><li>骨骼动画</li></ul><p><br></p><h3 id="CocosBuilder"><a href="#CocosBuilder" class="headerlink" title="CocosBuilder"></a>CocosBuilder</h3><p>只有Mac版本，不支持Windows</p><p>工作流程</p><ol><li>CocosBuilder编辑界面</li><li>发布项目，生成ccbi</li><li>将ccbi文件和相关图片资源导入项目中</li><li>若在CocosBuilder中添加了自定义类，需要在项目中为自定义类编写代码</li><li>在需要创建界面的地方调用CocosBuilder库的函数创建它们，并添加到游戏场景中</li></ol><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生活中，所有事情都有最后一次。你会最后一次出门，最后一次吃你最喜欢的菜，最后一次听一首歌，或者最后一次呼吸。但是在那之前，你有很多机会做所有这些事情，珍惜你做的每一次。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多学习" scheme="http://yoursite.com/tags/%E5%A4%9A%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>大地图探索，由Tiled出发</title>
    <link href="http://yoursite.com/2022/02/20/%E5%A4%A7%E5%9C%B0%E5%9B%BE%E6%8E%A2%E7%B4%A2%EF%BC%8C%E7%94%B1Tiled%E5%87%BA%E5%8F%91/"/>
    <id>http://yoursite.com/2022/02/20/%E5%A4%A7%E5%9C%B0%E5%9B%BE%E6%8E%A2%E7%B4%A2%EF%BC%8C%E7%94%B1Tiled%E5%87%BA%E5%8F%91/</id>
    <published>2022-02-20T15:06:16.000Z</published>
    <updated>2022-02-20T15:15:28.950Z</updated>
    
    <content type="html"><![CDATA[<p>大地图实现，由各部分对Tiled的支持开始。</p><a id="more"></a><p><br></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>项目中需要用到“大”地图玩法，来实现一些GVE、GVG玩法，根据游戏类型及玩法体量，选择最合适的TileMap来实现。<br>但眼光要不仅于此，由TileMap开始，向其他游戏类型的技术方案进行拓展了解。</p><p>通过本篇文章，可以了解：</p><ul><li>Tiled地图编辑器的介绍</li><li>其他大地图方案技术</li></ul><p><br></p><p><br></p><p><br></p><h1 id="Tiled"><a href="#Tiled" class="headerlink" title="Tiled"></a>Tiled</h1><p>Tiled是一个编辑2D游戏地图的编辑器，可以帮助开发游戏的内容。</p><p>优点</p><ul><li>可快速制作关卡地图，策划可视化编辑，降低配置成本</li><li>支持多种压缩格式，支持多层级设置，完全可作为关卡编辑器使用</li></ul><h2 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h2><p>可导出的格式</p><ul><li>[常用] TMX</li><li>CSV</li><li>GMX</li><li>JSON</li><li>JS</li><li>LUA</li></ul><p>压缩模式</p><ul><li>XML</li><li>CSV</li><li>BASE64<ul><li>无</li><li>GZIP</li><li>ZLIB</li><li>Z标准</li></ul></li></ul><p>支持类型</p><ul><li>直90°</li><li>斜45°</li><li>斜45°交错</li><li>六边形</li></ul><p><br><br><br></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>坐标系（OpenGL坐标系原点在左下角，需要转换）</p><ul><li>原点：左上角</li><li>单位：瓦片数量（非像素）</li><li>x轴方向：自左向右</li><li>y轴方向：自上向下</li></ul><p><img src=".\tilemap_90.jpg" alt=""><br><img src=".\tilemap_斜45.jpg" alt=""><br><img src=".\tilemap_45交错.jpg" alt=""><br><img src=".\tilemap_六边形.jpg" alt=""></p><p>瓦片锚点</p><ul><li>瓦片地图锚点默认为(0, 0)，每个瓦片锚点默认为(0, 0)，且可修改</li></ul><p>遮挡关系</p><ul><li>地图层之间，存在 ZOrder，ZOrder大的在上层</li><li>瓦片之间，渲染顺序为自左向右，自上向下</li></ul><p>各元素</p><ul><li>属性<ul><li>所有的属性都是key-value键值对形式存储；除了指定的属性外还有自定义属性可灵活配置</li><li>类型<ul><li>地图属性</li><li>图层属性</li><li>对象属性</li><li>自定义属性<ul><li>bool</li><li>color</li><li>float</li><li>int</li><li>string</li><li>file</li></ul></li></ul></li></ul></li><li>图层<ul><li>图块层<ul><li>规则图块拼接铺设</li><li>为了便于编辑，支持一些刷子工具<ul><li>填充工具<ul><li>图章刷<ul><li>选择1块或多块图块绘制，</li><li>按住shift可以绘制一条线段</li><li>按住ctrl+shift可以绘制一个椭圆</li></ul></li><li>地形刷<ul><li>提供角落地形过度的编辑方式</li><li>支持图章刷的shift和ctrl+shift规则</li></ul></li><li>王氏刷<ul><li>类似于地形刷，但可以编辑边和角</li></ul></li><li>填充<ul><li>将相邻的同图块全部替换成指定图块</li></ul></li><li>填充形状工具<ul><li>选择一块区域填充图块</li><li>按住shift可以填充正方形和圆形</li></ul></li></ul></li><li>选择工具（选择指定区域修改，不可修改其他区域）<ul><li>矩形选择<ul><li>自定义矩形区域</li></ul></li><li>魔术棒<ul><li>相连的同地块</li></ul></li><li>同地块选择<ul><li>地图内所有同地块</li></ul></li></ul></li></ul></li></ul></li><li>对象层<ul><li>自定义对象的放置，支持形状/图片</li></ul></li><li>图像层<ul><li>前景后景图的设置</li></ul></li><li>组<ul><li>管理</li></ul></li></ul></li><li>对象<ul><li>在对象层可以放置对象，支持矩形、圆形、三角形、图片等等方式</li><li>可以对对象进行旋转、放缩、翻转、修改大小等等</li><li>可以在对象添加自定义属性，方便进行与游戏内逻辑关联</li></ul></li><li>图块集<ul><li>图块集是绘制图块层与对象的图片来源<ul><li>对于图块层的图块集，指定宽高，来截取使用，还支持设置边界值</li><li>对于对象的图块集，每个图块都是自己一个完整的图片，方便整个绘制</li></ul></li><li>一个图块层只能绑定一张图块集</li></ul></li></ul><p><br><br><br><br><br></p><h2 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h2><h3 id="Cocos2d"><a href="#Cocos2d" class="headerlink" title="Cocos2d"></a>Cocos2d</h3><p>Cocos2d引擎对TileMap的支持</p><p><img src=".\TMXTiledMap.png" alt=""></p><p>主要文件：</p><ul><li>CCTMXTiledMap.h &amp; CCTMXTiledMap.cpp<ul><li>主类，解析并绘制TileMap</li></ul></li><li>CCTMXLayer.h &amp; CCTMXLayer.cpp<ul><li>TileMap图块层结构</li></ul></li><li>CCTMXObjectGroup.h &amp; CCTMXObjectGroup.cpp<ul><li>TileMap对象层结构</li></ul></li><li>CCTMXXMLParser.h &amp; CCTMXXMLParser.cpp<ul><li>解析TileMap的工具类</li></ul></li><li>CCFastTMXTiledMap.h &amp; CCFastTMXTiledMap.cpp<ul><li>v3.2新增方法，对应CCTMXTiledMap</li></ul></li><li>CCFastTMXLayer.h &amp; CCFastTMXLayer.cpp<ul><li>v3.2新增方法，对应CCTMXLayer</li></ul></li></ul><p>引擎通过CCTMXXMLParser的相关方法解析地图，创建 TMXTiledMap 对象，该对象子节点都是 TMXLayer对象，对应TileMap的图块层，包含 TMXObjectGroup 对象数组，对应TileMap的对象层。<br>所创建出的地图，仅仅包含图块层的初始化与应用，并不会将对象创建出来，只是解析了数据进行存储。（使用图片对象，并不会在地图中创建出对象，依旧需要自己来获取对象层数据，进行创建）</p><p>创建流程</p><ol><li>【外部调用】通过 TMXTiledMap:create / TMXTiledMap:createWithXML 方法，使用TMX格式或XML格式文件创建地图对象</li><li>【解析】通过SAXParser解析地图文件，生成TMXMapInfo对象<ul><li>这一步是将地图数据解析成自己的数据结构</li><li>类型<ul><li>TMXTilesetInfo，图块集数据结构</li><li>TMXLayerInfo，图块层数据结构</li><li>TMXMapInfo，地图数据结构</li></ul></li></ul></li><li>【构建】通过解析的数据结构，构建地图对象<ul><li>这一步是根据数据创建具体对象，包含加载图集，创建每个图片等</li><li>类型<ul><li>简单的地图属性，直接赋值</li><li>对象层数据，直接赋值</li><li>图块层数据，需要配合图块集数据与地图数据，共同创建出TMXLayer对象（一个SpriteBatchNode对象）</li></ul></li></ul></li></ol><p>重要枚举<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 地图方向枚举</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    TMXOrientationOrtho,        <span class="comment">// 正常</span></span><br><span class="line">    TMXOrientationHex,          <span class="comment">// 六角交错</span></span><br><span class="line">    TMXOrientationIso,          <span class="comment">// 45度</span></span><br><span class="line">    TMXOrientationStaggered,    <span class="comment">// 等角交错</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 栅格轴方向（对于六边形，X-边朝上，Y-点朝上）</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    TMXStaggerAxis_X,           <span class="comment">// X</span></span><br><span class="line">    TMXStaggerAxis_Y,           <span class="comment">// Y</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 栅格类型</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    TMXStaggerIndex_Odd,        <span class="comment">// 奇数</span></span><br><span class="line">    TMXStaggerIndex_Even,       <span class="comment">// 偶数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="TMXTiledMap系列"><a href="#TMXTiledMap系列" class="headerlink" title="TMXTiledMap系列"></a>TMXTiledMap系列</h4><p>TMXTiledMap负责解析并绘制TMX地图。</p><ul><li>每个图块层都被解析并创建为TMXLayer对象（一个SpriteBatchNode子类，若层被设置为不可见则不会被解析创建），可以在运行期间通过层名或层级（从0开始）获取TMXLayer对象。</li><li>每个对象层都被解析并创建为TMXObjectGroup对象，可以在运行期间通过层名来获取TMXObjectGroup对象。</li><li>每个属性都被存储为key-value键值对，每个对象都提供获取属性的方法。</li></ul><p>限制</p><ul><li>每个图块层只支持一个图块集</li><li>不支持嵌入式图片</li><li>仅支持XML格式（不支持JSON格式）</li></ul><p>TMXLayer代表TileMap的图块层对象</p><ul><li>是SpriteBatchNode子类，默认情况下使用TextureAtlas渲染图块</li><li>如果在运行时修改图块，该图块会成为一个Sprite，否则不会创建Sprite对象<ul><li>创建的Sprite可以支持旋转、放缩、移动等API</li></ul></li><li>通过设置图块层不同属性来启用不同特性<ul><li>cc_vertexz，OpenGL深度测试</li><li>cc_alpha_func，OpenGL透明度测试</li></ul></li></ul><p><br></p><h4 id="FastTMXTiledMap系列"><a href="#FastTMXTiledMap系列" class="headerlink" title="FastTMXTiledMap系列"></a>FastTMXTiledMap系列</h4><p>大部分与TMXTiledMap差不多，主要区别在于FastTMXTiledMap系列的图块层对象并非继承自SpriteBatchNode，而是继承自Node；<br>老版TMXTiledMap借助于SpriteBatchNode对同图集图片合批做绘制优化处理，新版FastTMXTiledMap重写绘制方法，使用PrimitiveCommand渲染指令，在绘制时根据相机可见性，规划矩形区域，只对矩形区域内的顶点进行批量上传，从而节省了绘制的顶点数。<br>性能上，Draw Call是一样的，但是FastTMXTiledMap GL Verts（顶点数）更少，绘制效率更高。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> TMXLayer::draw(Renderer *renderer, <span class="keyword">const</span> Mat4&amp; transform, <span class="keyword">uint32_t</span> flags)</span><br><span class="line">&#123;</span><br><span class="line">    updateTotalQuads();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> isViewProjectionUpdated = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">auto</span> visitingCamera = Camera::getVisitingCamera();</span><br><span class="line">    <span class="keyword">auto</span> defaultCamera = Camera::getDefaultCamera();</span><br><span class="line">    <span class="keyword">if</span> (visitingCamera == defaultCamera) &#123;</span><br><span class="line">        isViewProjectionUpdated = visitingCamera-&gt;isViewProjectionUpdated();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( flags != <span class="number">0</span> || _dirty || _quadsDirty || isViewProjectionUpdated)</span><br><span class="line">    &#123;</span><br><span class="line">        Size s = Director::getInstance()-&gt;getVisibleSize();</span><br><span class="line">        <span class="keyword">auto</span> rect = Rect(Camera::getVisitingCamera()-&gt;getPositionX(),</span><br><span class="line">                     Camera::getVisitingCamera()-&gt;getPositionY(),</span><br><span class="line">                     s.width,</span><br><span class="line">                     s.height);</span><br><span class="line">        </span><br><span class="line">        Mat4 inv = transform;</span><br><span class="line">        inv.inverse();</span><br><span class="line">        rect = RectApplyTransform(rect, inv);</span><br><span class="line">        </span><br><span class="line">        updateTiles(rect);</span><br><span class="line">        updateIndexBuffer();</span><br><span class="line">        updatePrimitives();</span><br><span class="line">        _dirty = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(_renderCommands.size() &lt; <span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt;(_primitives.size()))</span><br><span class="line">    &#123;</span><br><span class="line">        _renderCommands.resize(_primitives.size());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span>&amp; iter : _primitives)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(iter.second-&gt;getCount() &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span>&amp; cmd = _renderCommands[index++];</span><br><span class="line">            cmd.init(iter.first, _texture-&gt;getName(), getGLProgramState(), BlendFunc::NORMAL, iter.second, _modelViewTransform, flags);</span><br><span class="line">            renderer-&gt;addCommand(&amp;cmd, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，在项目使用中，如果将地图挂载到3D相机上，会有裁剪问题，暂时未解决。</p><p><br></p><p><br></p><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>通过Tiled编辑器，可以导出TMX格式文件或XML文件，引擎直接对它解析。</p><p>但依旧有一些不足</p><ul><li>并非会解析所有字段<ul><li>比如，对象旋转后的属性是无法解析出来的</li></ul></li><li>对对象层数据只解析不处理</li></ul><p>在实际使用时，为了性能优化与业务需求，在导出TMX文件，又通过python脚本，进行二次加工。</p><p>通过python脚本，主要处理：</p><ul><li>修改GID，所用到的图片都放在一个图集中，然后修改映射关系</li><li>计算对象在引擎显示的屏幕坐标（空间换时间，这样就不需要在使用时计算了）</li><li>属性转移<ul><li>有些属性 旋转、翻转 等，不会被引擎解析</li><li>将这些属性转为自定义属性，便于解析</li></ul></li></ul><p>还有一些想法，还未实施</p><ul><li>分离图块层与对象层<ul><li>原因：<ul><li>Tiled编辑器，可以导出lua格式文件</li><li>cocos2d引擎解析对象层数据，但不绘制，浪费解析性能</li></ul></li><li>方案：<ul><li>Tiled编辑器导出tmx文件，只包含图块层，给引擎解析与绘制</li><li>Tiled编辑器导出lua文件，只包含对象层，给业务代码解析与绘制</li></ul></li></ul></li></ul><p><br></p><p><br> </p><h3 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h3><p>之前Unity不支持使用Tiled，通过插件来支持</p><ul><li><a href="seanba.com/tiled2unity">Tiled2Unity</a></li><li><a href="https://seanba.com/supertiled2unity.html" target="_blank" rel="noopener">SuperTiled2Unity</a></li></ul><p>后来，Unity官方支持了 <a href="https://docs.unity3d.com/cn/2020.3/Manual/class-Tilemap.html" target="_blank" rel="noopener">瓦片地图</a> 相关功能</p><ol><li>Unity 2017.2 版中添加了瓦片地图</li><li>Unity 2018.2 中添加了六边形瓦片地图 (Hexagonal Tilemap) 功能</li><li>Unity 2018.3 中添加了等距瓦片地图 (Isometric Tilemap) 功能</li><li>Unity 2020.1 2D Tilemap Editor 不再随 Editor 安装过程一起安装，而是必须从 Package Manager 下载</li></ol><p>推荐教程：<br><a href="https://edu.csdn.net/course/detail/18616" target="_blank" rel="noopener">Unity Tilemap模块全攻略</a></p><p><br></p><p><br></p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>默认文件是tmx格式，tmx实际上就是xml格式文件，可以当成xml进行解析。</p><p>标签类型</p><ul><li>map，存储tilemap的主要信息，朝向、宽高、格子数及大小等</li><li>tileset，存储tilemap的图片资源信息，图片资源ID(GID)的映射关系</li><li>layer，图块层<ul><li>data，图块层内图块位置及GID对应信息，可以被压缩</li></ul></li><li>objectgroup，对象层<ul><li>ojbect，每个对象的属性信息键值对</li></ul></li><li>imagelayer，图像层</li></ul><p>TMX样例<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">version</span>=<span class="string">"1.2"</span> <span class="attr">tiledversion</span>=<span class="string">"1.3.3"</span> <span class="attr">orientation</span>=<span class="string">"hexagonal"</span> <span class="attr">renderorder</span>=<span class="string">"right-down"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"20"</span> <span class="attr">tilewidth</span>=<span class="string">"92"</span> <span class="attr">tileheight</span>=<span class="string">"75"</span> <span class="attr">infinite</span>=<span class="string">"0"</span> <span class="attr">hexsidelength</span>=<span class="string">"46"</span> <span class="attr">staggeraxis</span>=<span class="string">"x"</span> <span class="attr">staggerindex</span>=<span class="string">"odd"</span> <span class="attr">nextlayerid</span>=<span class="string">"6"</span> <span class="attr">nextobjectid</span>=<span class="string">"12"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tileset</span> <span class="attr">firstgid</span>=<span class="string">"1"</span> <span class="attr">name</span>=<span class="string">"tile1"</span> <span class="attr">tilewidth</span>=<span class="string">"92"</span> <span class="attr">tileheight</span>=<span class="string">"75"</span> <span class="attr">tilecount</span>=<span class="string">"1"</span> <span class="attr">columns</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/tile1.png"</span> <span class="attr">width</span>=<span class="string">"92"</span> <span class="attr">height</span>=<span class="string">"75"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tileset</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tileset</span> <span class="attr">firstgid</span>=<span class="string">"2"</span> <span class="attr">name</span>=<span class="string">"daying"</span> <span class="attr">tilewidth</span>=<span class="string">"173"</span> <span class="attr">tileheight</span>=<span class="string">"114"</span> <span class="attr">tilecount</span>=<span class="string">"1"</span> <span class="attr">columns</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/daying.png"</span> <span class="attr">width</span>=<span class="string">"173"</span> <span class="attr">height</span>=<span class="string">"114"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tileset</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tileset</span> <span class="attr">firstgid</span>=<span class="string">"3"</span> <span class="attr">name</span>=<span class="string">"jianta2"</span> <span class="attr">tilewidth</span>=<span class="string">"81"</span> <span class="attr">tileheight</span>=<span class="string">"156"</span> <span class="attr">tilecount</span>=<span class="string">"1"</span> <span class="attr">columns</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/jianta2.png"</span> <span class="attr">width</span>=<span class="string">"81"</span> <span class="attr">height</span>=<span class="string">"156"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tileset</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">imagelayer</span> <span class="attr">id</span>=<span class="string">"3"</span> <span class="attr">name</span>=<span class="string">"图像图层 1"</span> <span class="attr">offsetx</span>=<span class="string">"-500"</span> <span class="attr">offsety</span>=<span class="string">"-250"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/stratagem_img_bg.jpg"</span> <span class="attr">width</span>=<span class="string">"2048"</span> <span class="attr">height</span>=<span class="string">"2048"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">imagelayer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">imagelayer</span> <span class="attr">id</span>=<span class="string">"5"</span> <span class="attr">name</span>=<span class="string">"图像图层 2"</span> <span class="attr">offsetx</span>=<span class="string">"1548"</span> <span class="attr">offsety</span>=<span class="string">"-250"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">source</span>=<span class="string">"guandu/stratagem_img_bg.jpg"</span> <span class="attr">width</span>=<span class="string">"2048"</span> <span class="attr">height</span>=<span class="string">"2048"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">imagelayer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">layer</span> <span class="attr">id</span>=<span class="string">"1"</span> <span class="attr">name</span>=<span class="string">"base_layer"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"20"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span> <span class="attr">encoding</span>=<span class="string">"base64"</span> <span class="attr">compression</span>=<span class="string">"zlib"</span>&gt;</span></span><br><span class="line">   eJztw0ENAAAMA6Grf9NzsRckrJqqqurDA5vdAyE=</span><br><span class="line">  <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">layer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">objectgroup</span> <span class="attr">id</span>=<span class="string">"2"</span> <span class="attr">name</span>=<span class="string">"object_bottom_1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">object</span> <span class="attr">id</span>=<span class="string">"4"</span> <span class="attr">gid</span>=<span class="string">"3"</span> <span class="attr">x</span>=<span class="string">"733.333"</span> <span class="attr">y</span>=<span class="string">"508"</span> <span class="attr">width</span>=<span class="string">"81"</span> <span class="attr">height</span>=<span class="string">"156"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"png"</span> <span class="attr">value</span>=<span class="string">"jianta2"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">object</span> <span class="attr">id</span>=<span class="string">"7"</span> <span class="attr">gid</span>=<span class="string">"2"</span> <span class="attr">x</span>=<span class="string">"1004"</span> <span class="attr">y</span>=<span class="string">"609"</span> <span class="attr">width</span>=<span class="string">"173"</span> <span class="attr">height</span>=<span class="string">"114"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">object</span> <span class="attr">id</span>=<span class="string">"11"</span> <span class="attr">gid</span>=<span class="string">"3"</span> <span class="attr">x</span>=<span class="string">"1318"</span> <span class="attr">y</span>=<span class="string">"534"</span> <span class="attr">width</span>=<span class="string">"81"</span> <span class="attr">height</span>=<span class="string">"156"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">objectgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Tiled编辑器也支持导出为json格式，方便服务器解析。<br>标签同xml的差不多，也就格式上会有些变化。</p><p>JSON样例<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"compressionlevel"</span>:<span class="number">-1</span>,</span><br><span class="line"> <span class="attr">"height"</span>:<span class="number">20</span>,</span><br><span class="line"> <span class="attr">"hexsidelength"</span>:<span class="number">46</span>,</span><br><span class="line"> <span class="attr">"infinite"</span>:<span class="literal">false</span>,</span><br><span class="line"> <span class="attr">"layers"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">3</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/stratagem_img_bg.jpg"</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"\u56fe\u50cf\u56fe\u5c42 1"</span>,</span><br><span class="line">         <span class="attr">"offsetx"</span>:<span class="number">-500</span>,</span><br><span class="line">         <span class="attr">"offsety"</span>:<span class="number">-250</span>,</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"imagelayer"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">5</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/stratagem_img_bg.jpg"</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"\u56fe\u50cf\u56fe\u5c42 2"</span>,</span><br><span class="line">         <span class="attr">"offsetx"</span>:<span class="number">1548</span>,</span><br><span class="line">         <span class="attr">"offsety"</span>:<span class="number">-250</span>,</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"imagelayer"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"compression"</span>:<span class="string">"zlib"</span>,</span><br><span class="line">         <span class="attr">"data"</span>:<span class="string">"eJztw0ENAAAMA6Grf9NzsRckrJqqqurDA5vdAyE="</span>,</span><br><span class="line">         <span class="attr">"encoding"</span>:<span class="string">"base64"</span>,</span><br><span class="line">         <span class="attr">"height"</span>:<span class="number">20</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"base_layer"</span>,</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"tilelayer"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"width"</span>:<span class="number">40</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"draworder"</span>:<span class="string">"topdown"</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">2</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"object_bottom_1"</span>,</span><br><span class="line">         <span class="attr">"objects"</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                 <span class="attr">"gid"</span>:<span class="number">3</span>,</span><br><span class="line">                 <span class="attr">"height"</span>:<span class="number">156</span>,</span><br><span class="line">                 <span class="attr">"id"</span>:<span class="number">4</span>,</span><br><span class="line">                 <span class="attr">"name"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"properties"</span>:[</span><br><span class="line">                        &#123;</span><br><span class="line">                         <span class="attr">"name"</span>:<span class="string">"png"</span>,</span><br><span class="line">                         <span class="attr">"type"</span>:<span class="string">"string"</span>,</span><br><span class="line">                         <span class="attr">"value"</span>:<span class="string">"jianta2"</span></span><br><span class="line">                        &#125;],</span><br><span class="line">                 <span class="attr">"rotation"</span>:<span class="number">0</span>,</span><br><span class="line">                 <span class="attr">"type"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">                 <span class="attr">"width"</span>:<span class="number">81</span>,</span><br><span class="line">                 <span class="attr">"x"</span>:<span class="number">733.333</span>,</span><br><span class="line">                 <span class="attr">"y"</span>:<span class="number">508</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                 <span class="attr">"gid"</span>:<span class="number">2</span>,</span><br><span class="line">                 <span class="attr">"height"</span>:<span class="number">114</span>,</span><br><span class="line">                 <span class="attr">"id"</span>:<span class="number">7</span>,</span><br><span class="line">                 <span class="attr">"name"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"rotation"</span>:<span class="number">0</span>,</span><br><span class="line">                 <span class="attr">"type"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">                 <span class="attr">"width"</span>:<span class="number">173</span>,</span><br><span class="line">                 <span class="attr">"x"</span>:<span class="number">1004</span>,</span><br><span class="line">                 <span class="attr">"y"</span>:<span class="number">609</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                 <span class="attr">"gid"</span>:<span class="number">3</span>,</span><br><span class="line">                 <span class="attr">"height"</span>:<span class="number">156</span>,</span><br><span class="line">                 <span class="attr">"id"</span>:<span class="number">11</span>,</span><br><span class="line">                 <span class="attr">"name"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"rotation"</span>:<span class="number">0</span>,</span><br><span class="line">                 <span class="attr">"type"</span>:<span class="string">""</span>,</span><br><span class="line">                 <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">                 <span class="attr">"width"</span>:<span class="number">81</span>,</span><br><span class="line">                 <span class="attr">"x"</span>:<span class="number">1318</span>,</span><br><span class="line">                 <span class="attr">"y"</span>:<span class="number">534</span></span><br><span class="line">                &#125;],</span><br><span class="line">         <span class="attr">"opacity"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"type"</span>:<span class="string">"objectgroup"</span>,</span><br><span class="line">         <span class="attr">"visible"</span>:<span class="literal">true</span>,</span><br><span class="line">         <span class="attr">"x"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"y"</span>:<span class="number">0</span></span><br><span class="line">        &#125;],</span><br><span class="line"> <span class="attr">"nextlayerid"</span>:<span class="number">6</span>,</span><br><span class="line"> <span class="attr">"nextobjectid"</span>:<span class="number">12</span>,</span><br><span class="line"> <span class="attr">"orientation"</span>:<span class="string">"hexagonal"</span>,</span><br><span class="line"> <span class="attr">"renderorder"</span>:<span class="string">"right-down"</span>,</span><br><span class="line"> <span class="attr">"staggeraxis"</span>:<span class="string">"x"</span>,</span><br><span class="line"> <span class="attr">"staggerindex"</span>:<span class="string">"odd"</span>,</span><br><span class="line"> <span class="attr">"tiledversion"</span>:<span class="string">"1.3.3"</span>,</span><br><span class="line"> <span class="attr">"tileheight"</span>:<span class="number">75</span>,</span><br><span class="line"> <span class="attr">"tilesets"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"columns"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"firstgid"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/tile1.png"</span>,</span><br><span class="line">         <span class="attr">"imageheight"</span>:<span class="number">75</span>,</span><br><span class="line">         <span class="attr">"imagewidth"</span>:<span class="number">92</span>,</span><br><span class="line">         <span class="attr">"margin"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"tile1"</span>,</span><br><span class="line">         <span class="attr">"spacing"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"tilecount"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"tileheight"</span>:<span class="number">75</span>,</span><br><span class="line">         <span class="attr">"tilewidth"</span>:<span class="number">92</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"columns"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"firstgid"</span>:<span class="number">2</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/daying.png"</span>,</span><br><span class="line">         <span class="attr">"imageheight"</span>:<span class="number">114</span>,</span><br><span class="line">         <span class="attr">"imagewidth"</span>:<span class="number">173</span>,</span><br><span class="line">         <span class="attr">"margin"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"daying"</span>,</span><br><span class="line">         <span class="attr">"spacing"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"tilecount"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"tileheight"</span>:<span class="number">114</span>,</span><br><span class="line">         <span class="attr">"tilewidth"</span>:<span class="number">173</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"columns"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"firstgid"</span>:<span class="number">3</span>,</span><br><span class="line">         <span class="attr">"image"</span>:<span class="string">"guandu\/jianta2.png"</span>,</span><br><span class="line">         <span class="attr">"imageheight"</span>:<span class="number">156</span>,</span><br><span class="line">         <span class="attr">"imagewidth"</span>:<span class="number">81</span>,</span><br><span class="line">         <span class="attr">"margin"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"name"</span>:<span class="string">"jianta2"</span>,</span><br><span class="line">         <span class="attr">"spacing"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"tilecount"</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">"tileheight"</span>:<span class="number">156</span>,</span><br><span class="line">         <span class="attr">"tilewidth"</span>:<span class="number">81</span></span><br><span class="line">        &#125;],</span><br><span class="line"> <span class="attr">"tilewidth"</span>:<span class="number">92</span>,</span><br><span class="line"> <span class="attr">"type"</span>:<span class="string">"map"</span>,</span><br><span class="line"> <span class="attr">"version"</span>:<span class="number">1.2</span>,</span><br><span class="line"> <span class="attr">"width"</span>:<span class="number">40</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><br></p><p><br></p><p><br></p><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="主流大地形渲染"><a href="#主流大地形渲染" class="headerlink" title="主流大地形渲染"></a>主流大地形渲染</h2><h3 id="TileMap"><a href="#TileMap" class="headerlink" title="TileMap"></a>TileMap</h3><p>利用一些小图片拼出一个大地图</p><p>优点</p><ul><li>结构简单，方便优化</li><li>加载整个TileMap，图片都在一个图集中，可以批量绘制，地图加载压力轻</li></ul><p>缺点</p><ul><li>只能满足特定视距下LOD的细节程度</li><li>重复感很强，不容易做大结构和氛围</li></ul><p>游戏</p><ul><li>率土之滨</li><li>文明6移动版</li></ul><p><br></p><h3 id="多层纹理混合"><a href="#多层纹理混合" class="headerlink" title="多层纹理混合"></a>多层纹理混合</h3><p>利用一张Mask图的多通道，控制多张贴图进行纹理混合</p><p><a href="https://zhuanlan.zhihu.com/p/26383778" target="_blank" rel="noopener">基于高度的纹理混合shader</a></p><p>优点</p><ul><li>制作简单，性能压力小</li></ul><p>缺点</p><ul><li>可混合的通道及贴图数有限，难以做出丰富的效果</li></ul><p>游戏</p><ul><li>万国觉醒</li></ul><p><br></p><h3 id="Virtual-Texture"><a href="#Virtual-Texture" class="headerlink" title="Virtual Texture"></a>Virtual Texture</h3><p>通过 Indirection Map，将贴图载入Physical Texture。</p><p><a href="https://zhuanlan.zhihu.com/p/138484024" target="_blank" rel="noopener">浅谈Virtual Texture</a></p><p>优点</p><ul><li>效果细节丰富</li><li>美术自由度高</li><li>内存和DrawCall可控</li></ul><p>缺点</p><ul><li>手机端效果不明确</li></ul><p>游戏</p><ul><li>一些端游</li><li>一些主机游戏</li></ul><p><br></p><h3 id="Texture-Array"><a href="#Texture-Array" class="headerlink" title="Texture Array"></a>Texture Array</h3><p>存储一个数组，每个元素是一张图</p><p>优点</p><ul><li>减少bind次数</li><li>适合层与层之间的颜色混合</li></ul><p>缺点</p><ul><li>严格要求尺寸、格式</li><li>OpenGL ES 3.0以上才支持</li></ul><p><br></p><p><br></p><h2 id="程序化工具选型"><a href="#程序化工具选型" class="headerlink" title="程序化工具选型"></a>程序化工具选型</h2><h3 id="Substance"><a href="#Substance" class="headerlink" title="Substance"></a>Substance</h3><p>程序化贴图常用工具<br>可在一定程度上满足贴图需求，但无法生成模型、数据表等资源，需要第三方工具</p><p><br></p><h3 id="Houdini"><a href="#Houdini" class="headerlink" title="Houdini"></a>Houdini</h3><p>行业程序化流程常用工具，移动游戏上 吃鸡类游戏、《原神》等都有所使用。</p><p>特点</p><ul><li>基于节点</li><li>非破坏式流程，快速迭代</li><li>操作属性，可将任意信息存储在几何中</li><li>定制化程度高，可以单靠编程完成整个流程</li><li>处理数据流，外部仅关心数据输入与输出</li></ul><p><br></p><p><br></p><h2 id="大地图技术"><a href="#大地图技术" class="headerlink" title="大地图技术"></a>大地图技术</h2><p>除了上面的渲染技术与工具，还有一些大地图数据处理上的一些技术。<br>比如：</p><ul><li>精度问题处理<ul><li>区域划分</li><li>节点中转</li><li>坐标转换</li></ul></li><li>LOD（level of detail）</li><li>Streaming</li><li>Caching</li><li>AOI（Area Of Interest）</li></ul><p>更详细内容，可跳转知乎：<a href="https://www.zhihu.com/question/26538198" target="_blank" rel="noopener">开放世界游戏中的大地图背后有哪些实现技术？</a></p><p><br></p><p><br></p><p><br></p><hr><p>参考资料：</p><ul><li><a href="doc.mapeditor.org/en/stable/">Tiled文档(English)</a></li><li><a href="https://discourse.mapeditor.org/" target="_blank" rel="noopener">Tiled论坛</a></li><li><a href="https://www.cnblogs.com/stratrail/p/5050703.html" target="_blank" rel="noopener">cocos2dx - tmx地图分层移动处理</a></li><li><a href="seanba.com/tiled2unity">Tiled2Unity</a></li><li><a href="https://seanba.com/supertiled2unity.html" target="_blank" rel="noopener">SuperTiled2Unity</a></li><li><a href="https://edu.csdn.net/course/detail/18616" target="_blank" rel="noopener">Unity Tilemap模块全攻略</a></li><li><a href="https://docs.unity3d.com/cn/2020.3/Manual/class-Tilemap.html" target="_blank" rel="noopener">瓦片地图</a></li><li><a href="https://blog.csdn.net/OnafioO/article/details/49151109" target="_blank" rel="noopener">像素填充率，纹理填充率，显存带宽</a></li><li><a href="https://zhuanlan.zhihu.com/p/26383778" target="_blank" rel="noopener">基于高度的纹理混合shader</a></li><li><a href="https://zhuanlan.zhihu.com/p/138484024" target="_blank" rel="noopener">浅谈Virtual Texture</a></li><li><a href="https://www.zhihu.com/question/26538198" target="_blank" rel="noopener">开放世界游戏中的大地图背后有哪些实现技术？</a></li><li><a href="https://mp.weixin.qq.com/s/miOnAB9wervyBGe7ep1MRQ" target="_blank" rel="noopener">天美F1引擎专家：如何利用PCG技术加速大世界地形生产？</a></li><li><a href="https://mp.weixin.qq.com/s/TxYzQksrQgsLZEprNIgumg" target="_blank" rel="noopener">揭秘《鸿图之下》的场景技术</a></li><li><a href="https://zhuanlan.zhihu.com/p/162892899" target="_blank" rel="noopener">技术分析 探讨大世界游戏的制作流程及技术——大场景制作技术概况篇</a></li></ul><p><br><br><br><br><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大地图实现，由各部分对Tiled的支持开始。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
      <category term="多实践" scheme="http://yoursite.com/tags/%E5%A4%9A%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="Cocos2d" scheme="http://yoursite.com/tags/Cocos2d/"/>
    
  </entry>
  
  <entry>
    <title>2021年结之多点开花</title>
    <link href="http://yoursite.com/2022/01/22/2021%E5%B9%B4%E7%BB%93%E4%B9%8B%E5%A4%9A%E7%82%B9%E5%BC%80%E8%8A%B1/"/>
    <id>http://yoursite.com/2022/01/22/2021%E5%B9%B4%E7%BB%93%E4%B9%8B%E5%A4%9A%E7%82%B9%E5%BC%80%E8%8A%B1/</id>
    <published>2022-01-22T01:44:35.000Z</published>
    <updated>2022-02-20T15:24:36.445Z</updated>
    
    <content type="html"><![CDATA[<p>多点开花</p><a id="more"></a><p><br></p><p>去年的年结比较仓促，主要是由于项目刚上线，还在繁忙期，没有太多的时间去整理。</p><p>今年项目进入平稳运行期，相对时间充裕些，待我娓娓道来。</p><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>从上半年开始，再度进行管理团队的职责。</p><p>由于不是第一次管理，也是从上次的管理经验，总结出一些心得，相对的轻车熟路一些。</p><p>主要分为两部分：</p><ul><li>保障功能开发稳步进行，保质保时高效交付功能</li><li>推进团队建设，让所有成员除功能开发外都有所成长</li></ul><p><br></p><h2 id="功能开发"><a href="#功能开发" class="headerlink" title="功能开发"></a>功能开发</h2><p>对于功能开发来说，之前有总结过一篇 <a href="http://www.lt-tree.com/2018/11/20/%E8%81%8A%E8%81%8A%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91/" target="_blank" rel="noopener">聊聊功能开发</a></p><p>但是，不同项目有不同情况，要针对性处理，但很多东西，其实只要各部门管理者都某些原则达成一致，剩下的事情，就很好推进了。尤其是现在项目组有PM的职位，分好责任义务即可。</p><p>我理想中的情况（目前视具体情况落地，但原则差不离）</p><ol><li><p>【策划】提前N个月，制定接下来功能任务</p><ul><li>准备：无</li><li>任务：确定功能，开发目的，开发周期等</li><li>产出：功能具体责任人</li></ul></li><li><p>【策划】筹备策划需求案</p><ul><li>准备：无</li><li>任务：筹备策划案</li><li>产出：策划案</li></ul></li><li><p>【策划】内部讨论会</p><ul><li>准备：策划案</li><li>任务：讨论完备策划案</li><li>产出：策划案</li></ul></li><li><p>【策划】【UE】UE策划对接会</p><ul><li>准备：策划案</li><li>任务：根据策划案，确定UE图，继续完备策划案</li><li>产出：UE图</li></ul></li><li><p>【策划】【前端】【后端】【美术】【测试】策划需求会</p><ul><li>准备：策划案，功能模块分解，UE图</li><li>任务：宣讲功能，让各部门相关人员了解功能</li><li>产出：各个部门要交付内容时间点<ul><li>前端：提交验收时间</li><li>后端：联调时间</li><li>UI：交付切图时间</li><li>动效：交付动效时间</li><li>策划：提交测试时间</li></ul></li></ul></li><li><p>策划研发对表会【策划】【前端】【后端】</p><ul><li><p>准备：功能所需的大概表结构</p></li><li><p>任务：指定配表逻辑与格式</p></li><li>产出：功能表结构</li></ul></li><li><p>研发内部协议会【前端】【后端】</p><ul><li>准备：策划案、UE图</li><li>任务：根据系统，制定协议接口，基于接口编程</li><li>产出：协议结构，交付时间</li></ul></li><li><p>交付UI效果图【前端】【策划】【UE】</p></li><li><p>交付动效【前端】【策划】【UE】</p></li><li><p>提交策划验收【前端】【策划】【UE】</p></li><li><p>提交测试</p></li><li><p>功能上线</p></li></ol><p>主要原则就是</p><ul><li>各部门制定好时间与交付内容，并严格遵循，若有延期风险，提前预警</li><li>任何逻辑有改动，各部门（尤其研发与策划）一起讨论，禁止私下一对一协定</li></ul><p><br></p><p><br></p><h2 id="团队建设"><a href="#团队建设" class="headerlink" title="团队建设"></a>团队建设</h2><h3 id="战斗模块"><a href="#战斗模块" class="headerlink" title="战斗模块"></a>战斗模块</h3><p>我之前在团队主要负责战斗模块的维护，由于游戏模式的原因，上线后战斗模块的压力依旧不弱。</p><p>一是为了更好管理团队，二也是为了培养团队梯度建设，三是让更多人参与，对战斗模块内容进行剖析并交接给同事。</p><p>主要流程如下：</p><ol><li>剖析战斗架构，总结各部分职责<ul><li>战斗规范</li><li>战斗框架概览</li><li>战斗玩法扩展流程</li><li>战斗技能扩展流程</li><li>战斗单位扩展流程</li></ul></li><li>从实际业务入手，先能根据总结的文档上手实现功能</li><li>再详细点亮所有战斗技能树，对战斗框架有更深入理解</li><li>研发战斗周边工具，更高效实现策划需求</li></ol><p>为了不影响线上环境，进行CodeReview，每次更新前，对相关代码修改进行审查，做最后一道风险保障。</p><p>目前，我不再需要担心战斗模块的维护，战斗小组每个人都有主负责的方向，且每个人都可独立维护战斗模块，在对战斗框架的分析梳理过程中也积累了大量文档。</p><p><br></p><h3 id="全团队建设"><a href="#全团队建设" class="headerlink" title="全团队建设"></a>全团队建设</h3><p>团队成员除了解决日常功能开发问题，也想办法要给予大家额外学习的机会。</p><p>第一步，是像之前团队做的那样，找课题，进行分享会，让所有人都对团队内各自负责的内容及功能实现都有所了解。</p><p>第二步，进行砥砺前行专题，主要是列出目前团队目前想做的课题列表，然后各成员根据自己的兴趣，进行研究与探索，同时也分配指定导师进行辅助配合。目的是让大家的调研方向是有实际意义且可在项目中落地实践，并且有导师辅助，也可进行讨论。</p><p>第三步，进行钝学累功专题，进行共读会的实践，每天都抽30分钟，读技术书籍的一部分，每隔一段时间，对书中内容及延展内容进行讨论，将知识彻底掌握。</p><p>最后，除了专业方向上的推进，还进行了一些额外的分享，主要是开拓视野，格局要打开，比如：</p><ul><li><a href="http://www.lt-tree.com/2021/07/17/%E8%81%8A%E8%81%8A%E9%B8%BF%E8%92%99/" target="_blank" rel="noopener">聊聊鸿蒙</a></li><li><a href="http://www.lt-tree.com/2021/11/20/%E8%81%8A%E8%81%8ADOTS/" target="_blank" rel="noopener">聊聊DOTS</a></li><li><a href="http://www.lt-tree.com/2021/11/30/%E8%81%8A%E8%81%8A%E5%85%83%E5%AE%87%E5%AE%99/" target="_blank" rel="noopener">聊聊元宇宙</a></li><li>还有一些小课题的讨论，并未记录</li></ul><p><br></p><p><br></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h3><p>与上次不同，这次还包括面试相关的内容。包含社招与校招两部分，社招和校招所要考察的内容是很不一样的。</p><p>对于社招来说，主要是看项目组需求，是梯度建设，是开发功能，还是其他，不同的目的考察侧重点不一样。</p><p>虽然侧重点不同，但是也会对所有方向进行考核。</p><p>以我个人来讲，我主要会从下面几点进行分析（不分先后）</p><ul><li>沟通</li><li>三观</li><li>技术</li></ul><p>相对于各种试题的考核（当然也会出一些大概的），更看重对过去所做内容的表述。</p><p>对于校招生，主要是从五个维度</p><ul><li>基础力</li><li>沟通力</li><li>学习力</li><li>稳定度</li><li>成熟度</li></ul><p>最后，在面试的时候，相对于考核与被考核，更希望是一种讨论的氛围，对于过去所做内容的阐述，对于技术的探讨 等等。</p><p><br></p><h3 id="个人技术"><a href="#个人技术" class="headerlink" title="个人技术"></a>个人技术</h3><p>这一年，个人技术的成长相对有限一些，主要的精力在于如何迸发整个团队的力量。</p><p>但是，由于平时要对所有功能开发保驾护航，也做了很多调研与产出，相应的都有文档与分享进行。</p><p>再者，带领大家进行钝学累功、砥砺前行以及开拓眼界的时候，必然要进行更多的研究与探索，也相应得到了更丰富多维度的提升。</p><p>作为管理者，当然要有所牺牲部分个人技术提升的觉悟，当然这并不代表以此为借口而懈怠。</p><p>一个人走得快，一堆人走得远。</p><p><br></p><h3 id="荣誉"><a href="#荣誉" class="headerlink" title="荣誉"></a>荣誉</h3><p>这一年，付出了很多，当然也收获了很多。</p><p>在公司的1024技术手册上投稿了关于帧同步的内容，向公司提供了战斗模块的梳理文档 等</p><p>年中时，顺利晋升职级，</p><p>在去年获得年度 最佳新人后，在年末，再次获得了年度 优秀员工。</p><p>付出会有收获，但行好事，莫问前程。</p><p><img src="荣誉_1.jpg" alt=""></p><p><br></p><p><br></p><p><br></p><h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>今年，生活上也更丰富多彩了一些，毫无征兆的领证，领证后的蜜月旅行，公司的三亚团建 等等。</p><h2 id="领证"><a href="#领证" class="headerlink" title="领证"></a>领证</h2><p>很突然的，在5月17号左右，女朋友（现在是老婆了）说，5月21日，日子不错呀，我们回去领证吧。</p><p>然后，就来了场说领就领的旅程，自此，结束了11年的恋爱期，进入下一阶段。</p><p>但由于，疫情严重，长辈在韩国回不来，婚礼是没法这么快进行了…</p><p><img src="ai.jpg" alt=""></p><p><br></p><p><br></p><h2 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h2><p>在领完证后，项目相对稳定一些，疫情也相对得到了控制，就请了婚假，开始蜜月旅行。</p><p>在疫情前，我就想进行一次游轮旅行，没有WIFI，与世隔绝，在大海上遨游，如果是从迈阿密出发，路过北极圈的线路那就更刺激了。</p><p>海外游轮是不用想了，正好国内长江三峡游轮复航，价格也很优惠，马上预定，出发。</p><p>规划的路线是：</p><ul><li>北京 –(飞机)-&gt; 重庆 –(游轮)–&gt;宜昌–(高铁)–&gt;武汉–(飞机)–&gt;北京</li></ul><p><img src="旅游_1.jpg" alt=""></p><p><img src="旅游_2.jpg" alt=""></p><p><img src="旅游_3.jpg" alt=""></p><p><img src="旅游_7.jpg" alt=""></p><p><img src="旅游_4.jpg" alt=""></p><p><img src="旅游_8.jpg" alt=""></p><p><br></p><p><br></p><h2 id="团建"><a href="#团建" class="headerlink" title="团建"></a>团建</h2><p>在休完婚假（准确的来说，还没休完），正好赶上项目组去三亚团建，于是直接从武汉飞三亚参加团建。</p><p><img src="团建_3.jpg" alt=""></p><p><img src="团建_2.jpg" alt=""></p><p><img src="团建_4.jpg" alt=""></p><p><img src="团建_1.jpg" alt=""></p><p><img src="团建_5.jpg" alt=""></p><p><img src="团建_6.jpg" alt=""></p><p><img src="团建_7.jpg" alt=""></p><p><img src="团建_10.jpg" alt=""></p><p><br></p><p>年底，项目组又组织环球影城团建。</p><p><img src="团建_11.jpg" alt=""></p><p><img src="团建_12.jpg" alt=""></p><p><img src="团建_13.jpg" alt=""></p><p><img src="团建_14.jpg" alt=""></p><p><img src="团建_15.jpg" alt=""></p><p><br></p><p><br></p><h2 id="读书与学习"><a href="#读书与学习" class="headerlink" title="读书与学习"></a>读书与学习</h2><p>今年读的书</p><ul><li><p><a href="http://www.lt-tree.com/2021/10/31/%E3%80%8A%E4%B9%A1%E5%9C%9F%E4%B8%AD%E5%9B%BD%E3%80%8B%E8%AF%BB%E8%AE%B0/" target="_blank" rel="noopener">《乡土中国》</a></p></li><li><p>《一往无前》</p></li><li><p>《从一到无穷大》</p></li><li><p><a href="http://www.lt-tree.com/2021/12/26/%E3%80%8A%E6%9B%BE%E5%9B%BD%E8%97%A9%E7%9A%84%E6%AD%A3%E9%9D%A2%E4%B8%8E%E4%BE%A7%E9%9D%A2%E3%80%8B%E8%AF%BB%E8%AE%B0/" target="_blank" rel="noopener">《曾国藩的正面与侧面》</a></p></li><li><p>《腾讯游戏开发精粹II》</p></li></ul><p>极客时间学习</p><ul><li><p>《乔新亮的CTO成长复盘》</p></li><li><p>《大厂晋升指南》</p></li><li><p>《微信小程序全栈开发实战》</p></li></ul><p><br></p><p><br></p><p><br></p><h1 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h1><p>领证前，感觉都在一起11年了，这个证其实无所谓了；但是真正领证后，就突然，莫名感受到一股责任感，在这股责任感下，目标更加明晰，动力更加十足。</p><p>去年立的FLAG，又食言了。</p><p>说到减肥，却一度破百（KG）；</p><p>说到小游戏，天天想各种idea，却没有实现；</p><p>说到打篮球，进度是 3/16，虽说也有后期疫情导致球场全封，但也前期连一半也没达成。</p><p>最最后，还是要有点盼头，捂脸ING</p><ul><li>减肥，目标90KG（小点目标，应该更好）</li><li>小游戏，使用一个框架将之前三消、2048等移植过去</li><li>更新10篇文章</li></ul><p>今年的关键词： 热爱</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多点开花&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d之Label</title>
    <link href="http://yoursite.com/2021/12/26/Cocos2d%E4%B9%8BLabel/"/>
    <id>http://yoursite.com/2021/12/26/Cocos2d%E4%B9%8BLabel/</id>
    <published>2021-12-26T13:06:16.000Z</published>
    <updated>2021-12-26T13:09:29.050Z</updated>
    
    <content type="html"><![CDATA[<p>Cocos2d之Label</p><a id="more"></a><p><br></p><h1 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h1><p>本文主要分为以下几部分</p><ol><li>以 Cocos2dx V3.17.2 版本，剖析Label框架</li><li>看项目组所用的框架，对比分析变动</li><li>了解相关概念后，针对具体问题，进行探索，寻求解决方案</li></ol><p><br><br><br><br><br></p><h1 id="引擎"><a href="#引擎" class="headerlink" title="引擎"></a>引擎</h1><p>版本 V 3.17.2</p><p>Label框架，大体分为三部分：</p><ul><li>Label，面像引擎使用者的显示对象，提供文本标签操作方法</li><li>Font，描述一个字体所能表示的字符集，及某个字体如何显示，可以用这些信息创建FontAtlas</li><li>FontAtlas，根据Font信息来创建FontAtlas，缓存、管理字集所用的纹理</li></ul><p>再加上一些辅助工具类</p><ul><li>FontAtlasCache，对FontAtlas对象缓存管理</li><li>LabelTextFormatter，提供Label静态方法，如换行、对齐等</li></ul><p><br><br><br></p><h2 id="相关文件与类"><a href="#相关文件与类" class="headerlink" title="相关文件与类"></a>相关文件与类</h2><p>关联文件</p><ul><li>Label<ul><li>CCLabel.h &amp; CCLabel.cpp</li><li>CCLabelAtlas.h &amp; CCLabelAtlas.cpp</li><li>CCLabelTTF.h &amp; CCLabelTTF.cpp</li><li>CCLabelBMFont.h &amp; CCLabelBMFont.cpp</li><li>CCLabelTextFormatter.cpp</li></ul></li><li>Font<ul><li>CCFont.h</li><li>CCFontAtlas.h &amp; CCFontAtlas.cpp</li><li>CCFontAtlasCache.h &amp; CCFontAtlasCache.cpp</li><li>CCFontFNT.h &amp; CCFontFNT.cpp</li><li>CCFontCharMap.h &amp; CCFontCharMap.cpp</li><li>CCFontFreeType.h &amp; CCFontFreeType.cpp</li></ul></li></ul><p>关联类</p><ul><li>Label<ul><li>Label</li><li>LabelTTF</li><li>LabelAtlas</li><li>LabelBMFont</li><li>LabelLetter</li><li>LabelProtocol</li></ul></li><li>Font<ul><li>Font</li><li>FontAtlas</li><li>FontAtlasCache</li><li>FontFreeType</li><li>FontCharMap</li><li>FontFNT</li><li>BMFontConfiguration</li></ul></li></ul><p><br></p><p><br></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>此处流程，仅讨论 Label相关，不涉及过去的 LabelTTF、LabelAtlas、LabelBMFont 等</p><p>主要是分为</p><ul><li>create，创建</li><li>update，更新</li></ul><p><br></p><h3 id="create-创建"><a href="#create-创建" class="headerlink" title="create 创建"></a>create 创建</h3><p>关于创建文本，内部可分为两类</p><ul><li>使用FontAtlas来绘制的；TTF、BMFont、CharMap 类型</li><li>不使用FontAtlas来绘制的；STRING_TEXTURE 类型</li></ul><p>使用FontAtlas来绘制的文本，流程为</p><ol><li>通过配置文件，去FontAtlasCache获得 FontAtlas 配置<ul><li>FontAtlasCache 在缓存FontAtlas时，每个类型文件，缓存的哈希key取值不同（例如TTF格式文件，通过文件名、字体大小、字体描边大小 生成索引）</li></ul></li><li>Label与FontAtlas对应关系为一对一，即同一时刻，只会从一个FontAtlas中获取配置、图集等<ul><li>最终都会调用 Label:setFontAtlas 来 释旧创新</li></ul></li><li>创建流程，主要结果就是设置Label的字体FontAtlas配置（_fontConfig）与文本类型（_currentLabelType）</li></ol><p>不使用FontAtlas来绘制文本，流程为</p><ol><li>设置一些配置，字体文件名、字体大小、文本内容等</li><li>主要结果也是设置 文本类型（_currentLabelType）</li></ol><p><br></p><h3 id="visit-绘制"><a href="#visit-绘制" class="headerlink" title="visit 绘制"></a>visit 绘制</h3><p>visit流程为</p><ol><li>updateContent<ul><li>根据当前文本类型及过去文本类型，清理缓存</li><li>根据不同文本类型，使用不同方法创建文本纹理</li><li>在当前文本纹理上，加持其他文本特效</li></ul></li><li>draw<ul><li>判断可见性</li><li>根据对应绘制信息，加入绘制队列</li></ul></li></ol><p><br><br><br></p><h2 id="文本，Label"><a href="#文本，Label" class="headerlink" title="文本，Label"></a>文本，Label</h2><p>Label是Node派生类，它知道如何去绘制文本。<br>可以通过以下几种方式创建：</p><ul><li>TTF文件，LabelTTF</li><li>FNT文件，LabelBMFont</li><li>指定标准plist/png，LabelAtlas</li><li>内置系统字，LabelTTF</li></ul><p>Label并非LabelTTF、LabelBMFont、LabelAtlas的父类，而是用来统一规范各种Label的使用，是Cocos V3.0版本新加的统一管理类。<br>Cocos V2.0版本，创建文本要根据文件，采用不同类名去创建；于是Cocos V3.0 版本，新增Label类，统一管理Label创建与操作，当然也可以用之前方法去创建（不建议）。<br><em>即使用之前的方式创建文本，LabelTTF与LabelBMFont也都是通过调用Label来创建，所有接口也都是通过调用Label实现</em></p><p><img src="./文本概览.png" alt="文本概览"></p><p><br></p><h3 id="一些定义"><a href="#一些定义" class="headerlink" title="一些定义"></a>一些定义</h3><p>重要结构与枚举<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重绘类型</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Overflow</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//In NONE mode, the dimensions is (0,0) and the content size will change dynamically to fit the label.</span></span><br><span class="line">    NONE,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *In CLAMP mode, when label content goes out of the bounding box, it will be clipped.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CLAMP,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * In SHRINK mode, the font size will change dynamically to adapt the content size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SHRINK,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *In RESIZE_HEIGHT mode, you can only change the width of label and the height is changed automatically.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RESIZE_HEIGHT</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文本类型</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">LabelType</span> &#123;</span></span><br><span class="line">    TTF,</span><br><span class="line">    BMFONT,</span><br><span class="line">    CHARMAP,</span><br><span class="line">    STRING_TEXTURE</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Label特效</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">LabelEffect</span> &#123;</span></span><br><span class="line">    NORMAL,</span><br><span class="line">    OUTLINE,</span><br><span class="line">    SHADOW,</span><br><span class="line">    GLOW,</span><br><span class="line">    ITALICS,</span><br><span class="line">    BOLD,</span><br><span class="line">    UNDERLINE,</span><br><span class="line">    STRIKETHROUGH,</span><br><span class="line">    ALL</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当Label创建时加载的字符集合</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">GlyphCollection</span> &#123;</span></span><br><span class="line">    DYNAMIC,</span><br><span class="line">    NEHE,</span><br><span class="line">    ASCII,</span><br><span class="line">    CUSTOM</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LetterInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char32_t</span> utf32Char;</span><br><span class="line">    <span class="keyword">bool</span> valid;</span><br><span class="line">    <span class="keyword">float</span> positionX;</span><br><span class="line">    <span class="keyword">float</span> positionY;</span><br><span class="line">    <span class="keyword">int</span> atlasIndex;</span><br><span class="line">    <span class="keyword">int</span> lineIndex;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><br></p><h3 id="创建方法"><a href="#创建方法" class="headerlink" title="创建方法"></a>创建方法</h3><ol><li>创建空对象，默认是系统文本</li><li>创建系统文本，基于平台提供的API</li><li>创建TTF文本，基于FreeType2</li><li>创建FNT文本，基于Bitmap Font File</li><li>创建CharMap文本，基于Char Map Configuration</li></ol><p><br></p><h3 id="支持效果"><a href="#支持效果" class="headerlink" title="支持效果"></a>支持效果</h3><p>各种Label效果<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启阴影；最后参数模糊半径无用，不支持模糊</span></span><br><span class="line">void enableShadow(const Color4B&amp; shadowColor = Color4B::BLACK,const Size &amp;offset = Size(2,-2), int blurRadius = 0);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启描边；仅支持 TTF &amp; STRING_TEXTURE（系统字）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableOutline</span><span class="params">(<span class="keyword">const</span> Color4B&amp; outlineColor,<span class="keyword">int</span> outlineSize = <span class="number">-1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启外发光；仅支持 TTF</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableGlow</span><span class="params">(<span class="keyword">const</span> Color4B&amp; glowColor)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启斜体；通过 setRotationSkewX(12) 实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableItalics</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启加粗；通过横向偏移阴影实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableBold</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启下划线；创建DrawNode画线，与删除线共用DrawNode</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableUnderline</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启删除线；创建DrawNode画线，与下划线共用DrawNode</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableStrikethrough</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消某种效果</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disableEffect</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disableEffect</span><span class="params">(LabelEffect effect)</span></span>;</span><br></pre></td></tr></table></figure></p><p>各种对齐</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 水平对齐与垂直对齐</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setAlignment</span><span class="params">(TextHAlignment hAlignment,TextVAlignment vAlignment)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 水平对齐</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setHorizontalAlignment</span><span class="params">(TextHAlignment hAlignment)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 垂直对齐</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setVerticalAlignment</span><span class="params">(TextVAlignment vAlignment)</span></span></span><br></pre></td></tr></table></figure><p>设置尺寸与换行相关</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 允许换行</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enableWrap</span><span class="params">(<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置最大长度；会被 setDimensions设置的宽度冲掉</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setMaxLineWidth</span><span class="params">(<span class="keyword">float</span> maxLineWidth)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置宽度；本质是调用 setDimensions</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setWidth</span><span class="params">(<span class="keyword">float</span> width)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 设置高度；本质是调用 setDimensions</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">float</span> height)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 设置尺寸</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setDimensions</span><span class="params">(<span class="keyword">float</span> width, <span class="keyword">float</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置换行标准；逐字符或逐单词</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setLineBreakWithoutSpace</span><span class="params">(<span class="keyword">bool</span> breakWithoutSpace)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置行高；每行最终高度 = 行高+行间距</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setLineHeight</span><span class="params">(<span class="keyword">float</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置行间距；每行最终高度 = 行高+行间距</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setLineSpacing</span><span class="params">(<span class="keyword">float</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置字符间距；不支持 STRING_TEXTURE（系统字）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setAdditionalKerning</span><span class="params">(<span class="keyword">float</span> space)</span></span>;</span><br></pre></td></tr></table></figure><p>其他绘制项支持</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改文本颜色；仅支持 TTF &amp; STRING_TEXTURE（系统字）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setTextColor</span><span class="params">(<span class="keyword">const</span> Color4B &amp;color)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置颜色混合</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setBlendFunc</span><span class="params">(<span class="keyword">const</span> BlendFunc &amp;blendFunc)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 透明度是否影响色值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setOpacityModifyRGB</span><span class="params">(<span class="keyword">bool</span> isOpacityModifyRGB)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置Overflow类型</span></span><br><span class="line"><span class="comment">// 仅 TTF 和 BMFont 支持所有Overflow类型</span></span><br><span class="line"><span class="comment">// CharMap 不支持 SHRINK</span></span><br><span class="line"><span class="comment">// STRING_TEXTURE 仅支持 NORMAL &amp; RESIZE_HEIGHT</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setOverflow</span><span class="params">(Overflow overflow)</span></span>;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="配件类"><a href="#配件类" class="headerlink" title="配件类"></a>配件类</h3><h4 id="LabelLetter"><a href="#LabelLetter" class="headerlink" title="LabelLetter"></a>LabelLetter</h4><p>LabelLetter用于在没有SpriteBatchNode情况下更新纹理。<br>它继承自Sprite类，它并不会被直接绘制，用来更新纹理，矩阵变换及颜色等。</p><h4 id="LabelProtocol"><a href="#LabelProtocol" class="headerlink" title="LabelProtocol"></a>LabelProtocol</h4><p>Label通用接口，只有 setString/getString</p><h4 id="LabelTextFormatter"><a href="#LabelTextFormatter" class="headerlink" title="LabelTextFormatter"></a>LabelTextFormatter</h4><p>提供Label一些文本格式处理方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 计算对齐偏移</span></span><br><span class="line"><span class="keyword">void</span> Label::computeAlignmentOffset();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取首字符长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getFirstCharLen</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::u32string&amp; utf32Text, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> textLen)</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取首词长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getFirstWordLen</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::u32string&amp; utf32Text, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> textLen)</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取字符配置项</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getFontLetterDef</span><span class="params">(<span class="keyword">char32_t</span> character, FontLetterDefinition&amp; letterDef)</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新BMFont缩放系数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateBMFontScale</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逐字符分割多行文本</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">multilineTextWrapByChar</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逐单词分割多行文本</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">multilineTextWrapByWord</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多行文本处理</span></span><br><span class="line">bool multilineTextWrap(const std::function&lt;int(const std::u32string&amp;, int, int)&gt;&amp; lambda);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 横向超框</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isHorizontalClamp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 纵向超框</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isVerticalClamp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据尺寸，调整文本字号</span></span><br><span class="line">void shrinkLabelToContentSize(const std::function&lt;bool()&gt;&amp; lambda);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 记录字符信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recordLetterInfo</span><span class="params">(<span class="keyword">const</span> cocos2d::Vec2&amp; point, <span class="keyword">char32_t</span> utf32Char, <span class="keyword">int</span> letterIndex, <span class="keyword">int</span> lineIndex)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 记录非法字符（非法占位符、无配置项字符）信息</span></span><br><span class="line"><span class="keyword">void</span> Label::recordPlaceholderInfo(<span class="keyword">int</span> letterIndex, <span class="keyword">char32_t</span> utf32Char);</span><br></pre></td></tr></table></figure><p><br></p><h2 id="文本（旧），LabelTTF、LabelBMFont、LabelAtlas"><a href="#文本（旧），LabelTTF、LabelBMFont、LabelAtlas" class="headerlink" title="文本（旧），LabelTTF、LabelBMFont、LabelAtlas"></a>文本（旧），LabelTTF、LabelBMFont、LabelAtlas</h2><h3 id="LabelTTF"><a href="#LabelTTF" class="headerlink" title="LabelTTF"></a>LabelTTF</h3><p>LabelTTF是绘制文本的TextureNode的派生类，因此所有TextureNode的特性都可适用于LabelTTF。<br>但LabelTTF效率较低，可以考虑使用LabelAtlas或LabelBMFont来替代，所需的TTF文件可放在程序可访问的地方来使用。</p><ul><li>资源<ul><li>ttf格式文件</li></ul></li><li>优点<ul><li>创建方便</li><li>支持系统字体（节省资源）</li><li>适用性广（用系统字库，能显示的内容多）</li></ul></li><li>缺点<ul><li>创建效率低</li><li>文字更新效率低</li><li>效果简陋（丑）</li></ul></li></ul><h4 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h4><ol><li>指定 显示文本、字体名、字体大小、文本尺寸、对齐方式</li><li>指定 字体配置项、显示文本</li></ol><p>字体配置项<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CC_DLL</span> <span class="title">FontDefinition</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span>           _fontName;</span><br><span class="line">    <span class="keyword">int</span>                   _fontSize;</span><br><span class="line">    TextHAlignment        _alignment;</span><br><span class="line">    TextVAlignment        _vertAlignment;</span><br><span class="line">    <span class="keyword">float</span>                 _lineSpacing;</span><br><span class="line">    Size                  _dimensions;</span><br><span class="line">    Color3B               _fontFillColor;</span><br><span class="line">    GLubyte               _fontAlpha;</span><br><span class="line">    FontShadow            _shadow;</span><br><span class="line">    FontStroke            _stroke;</span><br><span class="line">    <span class="keyword">bool</span>                  _enableWrap;</span><br><span class="line">    <span class="keyword">int</span>                  _overflow;         <span class="comment">// Label:Overflow枚举值</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="支持效果-1"><a href="#支持效果-1" class="headerlink" title="支持效果"></a>支持效果</h4><p>其中只有TTF与SystemFont支持 描边、修改字体颜色</p><p>阴影</p><ul><li>LabelTTF；无效参数：参数3 模糊参数，参数4 更新纹理；无法控制阴影颜色</li><li>Label；无效参数：参数3 模糊参数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::enableShadow(<span class="keyword">const</span> Size &amp;shadowOffset, <span class="keyword">float</span> shadowOpacity, <span class="keyword">float</span> shadowBlur, <span class="keyword">bool</span> <span class="comment">/*updateTexture*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Color4B <span class="title">temp</span><span class="params">(Color3B::BLACK)</span></span>;</span><br><span class="line">    temp.a = <span class="number">255</span> * shadowOpacity;</span><br><span class="line">    _renderLabel-&gt;enableShadow(temp,shadowOffset,shadowBlur);     <span class="comment">// CCLabel:enableShadow</span></span><br><span class="line">    _contentDirty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>描边</p><ul><li>LabelTTF，无法控制描边透明度<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::enableStroke(<span class="keyword">const</span> Color3B &amp;strokeColor, <span class="keyword">float</span> strokeSize, <span class="keyword">bool</span> <span class="comment">/*updateTexture*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    _renderLabel-&gt;enableOutline(Color4B(strokeColor),strokeSize);   <span class="comment">// CCLabel:enableOutline</span></span><br><span class="line">    _contentDirty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>修改字体颜色</p><ul><li>LabelTTF，无效参数：参数2 更新纹理；无法控制透明度<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::setFontFillColor(<span class="keyword">const</span> Color3B &amp;tintColor, <span class="keyword">bool</span> <span class="comment">/*updateTexture*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">    _renderLabel-&gt;setTextColor(Color4B(tintColor));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>颜色混合</p><ul><li>LabelTTF同Label一致<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::setBlendFunc(<span class="keyword">const</span> BlendFunc &amp;blendFunc)</span><br><span class="line">&#123;</span><br><span class="line">    _renderLabel-&gt;setBlendFunc(blendFunc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>水平/垂直 翻转</p><ul><li>Label 使用 setScaleX/Y 实现，替代 setFlippedX/Y<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelTTF::setFlippedX(<span class="keyword">bool</span> flippedX)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (flippedX)</span><br><span class="line">    &#123;</span><br><span class="line">        _renderLabel-&gt;setScaleX(<span class="number">-1.0f</span>);       <span class="comment">// CCLabel:setScaleX</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        _renderLabel-&gt;setScaleX(<span class="number">1.0f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><br></p><h3 id="LabelBMFont"><a href="#LabelBMFont" class="headerlink" title="LabelBMFont"></a>LabelBMFont</h3><p>LabelBMFont是使用FNT配置文件和图片来显示的一种文本标签，它的效率高于LabelTTF，但只能显示图片中的字符。<br>每个字符都是一张图片（Sprite），因此所有的字符都可以适应Sprite的特性。<br>所有内置字符锚点都是(0.5, 0.5)，不推荐修改，有可能会影响绘制。<br>LabelBMFont与Label、LabelAtlas一样，实现了LabelProtocol接口；<br>LabelBMFont有Label的灵活性、LabelAtlas的速度，并且支持所有Sprite的特性，因此尽量使用它。</p><ul><li>资源<ul><li>fnt格式文件及图集</li></ul></li><li>优点<ul><li>效率高</li><li>每个字符都是图片，支持Sprite特性<ul><li>例如：旋转、缩放 等</li></ul></li><li>可以对每个字体进行自定义优化</li></ul></li><li>缺点<ul><li>只能显示图集内的字符</li></ul></li></ul><h4 id="创建方式-1"><a href="#创建方式-1" class="headerlink" title="创建方式"></a>创建方式</h4><ol><li>指定 显示文本、fnt文件名、单字宽度、对齐方式、字符偏移</li><li>直接创建一个对象，后续根据配置文件初始化</li></ol><p>字符偏移，指解析fnt文件，得到对应字符位置后，再加上这个偏移，去图集中截取对应区域显示。<br>圆心为字符左上角，向右为正向x轴，向下为正向y轴；<br>这个偏移对整个fnt文件生效，就是第一次载入fnt文件时，就赋值，后续载入即使没有设置偏移，也会采取之前默认的偏移。</p><p>fnt文件的映射，是一个ASCII码对应图片区域的映射。<br>可以根据自己的需要，进行自定义映射，比如做一个小笑脸表情，我们可以设定它的ASCII映射码为97，那在设置文本为a的时候，就会显示这个笑脸。</p><p>fnt文件格式<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">info face="Arial" size=32 bold=0 italic=0 charset="" unicode=1 stretchH=100 smooth=1 aa=1 padding=0,0,0,0 spacing=1,1 outline=0</span><br><span class="line">common lineHeight=32 base=26 scaleW=256 scaleH=128 pages=1 packed=0 alphaChnl=1 redChnl=0 greenChnl=0 blueChnl=0</span><br><span class="line">page id=0 file="font_zhandouli2.png"</span><br><span class="line">chars count=12</span><br><span class="line">char id=43   x=103   y=41    width=21    height=40    xoffset=0     yoffset=0     xadvance=21    page=0  chnl=15</span><br><span class="line">char id=48   x=192   y=0     width=26    height=40    xoffset=0     yoffset=0     xadvance=26    page=0  chnl=15</span><br><span class="line">char id=49   x=125   y=41    width=19    height=40    xoffset=0     yoffset=0     xadvance=19    page=0  chnl=15</span><br><span class="line">char id=50   x=219   y=0     width=26    height=40    xoffset=0     yoffset=0     xadvance=26    page=0  chnl=15</span><br><span class="line">char id=51   x=0     y=41    width=25    height=40    xoffset=0     yoffset=0     xadvance=25    page=0  chnl=15</span><br><span class="line">char id=52   x=108   y=0     width=27    height=40    xoffset=0     yoffset=0     xadvance=27    page=0  chnl=15</span><br><span class="line">char id=53   x=26    y=41    width=25    height=40    xoffset=0     yoffset=0     xadvance=25    page=0  chnl=15</span><br><span class="line">char id=54   x=136   y=0     width=27    height=40    xoffset=0     yoffset=0     xadvance=27    page=0  chnl=15</span><br><span class="line">char id=55   x=78    y=41    width=24    height=40    xoffset=0     yoffset=0     xadvance=24    page=0  chnl=15</span><br><span class="line">char id=56   x=52    y=41    width=25    height=40    xoffset=0     yoffset=0     xadvance=25    page=0  chnl=15</span><br><span class="line">char id=57   x=164   y=0     width=27    height=40    xoffset=0     yoffset=0     xadvance=27    page=0  chnl=15</span><br><span class="line">char id=97   x=0     y=0     width=107   height=40    xoffset=0     yoffset=0     xadvance=107   page=0  chnl=15</span><br></pre></td></tr></table></figure></p><h4 id="支持效果-2"><a href="#支持效果-2" class="headerlink" title="支持效果"></a>支持效果</h4><p>获取单个字符（图片），索引从0开始</p><ul><li>获取字符后，可进行任何对图片的操作</li><li>每个字符锚点是 (0.5, 0.5)</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Node* LabelBMFont::getChildByTag(<span class="keyword">int</span> tag) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> _label-&gt;getLetter(tag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Sprite* LabelBMFont::getLetter(<span class="keyword">int</span> ID)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> _label-&gt;getLetter(ID);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置 宽度 与 自动换行 / 空格换行</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置最大宽度</span></span><br><span class="line"><span class="keyword">void</span> LabelBMFont::setWidth(<span class="keyword">float</span> width)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setMaxLineWidth(width);</span><br><span class="line">    <span class="keyword">this</span>-&gt;setContentSize(_label-&gt;getContentSize());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置 空格换行 / 自动换行，默认空格换行</span></span><br><span class="line"><span class="keyword">void</span> LabelBMFont::setLineBreakWithoutSpace( <span class="keyword">bool</span> breakWithoutSpace )</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setLineBreakWithoutSpace(breakWithoutSpace);</span><br><span class="line">    <span class="keyword">this</span>-&gt;setContentSize(_label-&gt;getContentSize());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改字体颜色，透明度</p><ul><li>可整体修改，也可通过获取单个字符，单个修改</li><li>使用 setOpacity 调整透明度</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelBMFont::setColor(<span class="keyword">const</span> Color3B&amp; color)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setColor(color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 透明度是否影响RBG色值</span></span><br><span class="line"><span class="keyword">void</span> LabelBMFont::setOpacityModifyRGB(<span class="keyword">bool</span> var)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setOpacityModifyRGB(var);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;child : _children) &#123;</span><br><span class="line">        child-&gt;setOpacityModifyRGB(var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>支持文本对齐</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelBMFont::setAlignment(TextHAlignment alignment)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setAlignment(alignment);</span><br><span class="line">    <span class="keyword">this</span>-&gt;setContentSize(_label-&gt;getContentSize());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>颜色混合</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> LabelBMFont::setBlendFunc(<span class="keyword">const</span> BlendFunc &amp;blendFunc)</span><br><span class="line">&#123;</span><br><span class="line">    _label-&gt;setBlendFunc(blendFunc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="LabelAtlas"><a href="#LabelAtlas" class="headerlink" title="LabelAtlas"></a>LabelAtlas</h3><p>LabelAtlas常用来显示数字，对应Label中的CharMap。<br>效率很高，可替代Label；相较于Label，LabelAtlas对每个字符有固定宽高；但是灵活性有限，不如使用LabelBMFont。</p><ul><li>资源<ul><li>plist文件与图集</li><li>单图集</li></ul></li><li>优点<ul><li>效率高</li></ul></li><li>缺点<ul><li>只能显示有限的ASCII码字符</li><li>功能支持有限</li></ul></li></ul><h4 id="创建方式-2"><a href="#创建方式-2" class="headerlink" title="创建方式"></a>创建方式</h4><ol><li>直接创建对象，后续初始化</li><li>指定 显示文本、图集文件名、单字符宽高、起始字符ASCII码</li><li>指定 显示文本、plist文件名</li></ol><p>即使使用plist文件，在文件内也要注明 图集文件名、单字符宽高、起始字符ASCII码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>version<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>textureFilename<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>larabie-16.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>itemWidth<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>20<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>itemHeight<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>40<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>firstChar<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">integer</span>&gt;</span>65<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>起始字符ASCII码是用来做差值，获取对应图片索引。</p><ul><li>我们起始字符ASCII码设置为 48（0的ASCII码）</li><li>setString(“4”)，4的ASCII码为 52；因此索引为 52-48 = 4；索引从0开始</li><li>取图集中第5个图片返回（此处第n个图片，是根据每个图片固定宽高，来获取要截取的区域）</li></ul><p>可以发现，这里的映射也是自定义映射；CCLabelBMFont中想做的 表情图片显示，也是可以实现的。</p><ul><li>创建9个表情在图集中，设定好宽高</li><li>起始字符设置为48</li><li>输入数字0-8，对应显示9个表情图片</li></ul><h4 id="支持效果-3"><a href="#支持效果-3" class="headerlink" title="支持效果"></a>支持效果</h4><p>修改字体颜色，透明度</p><ul><li>继承自AtlasNode，相关接口都是AtlasNode提供</li><li>使用 setOpacity 调整透明度</li><li>使用 setColor 调整颜色</li><li>使用 setOpacityModifyRGB 设置透明度是否影响RBG色值</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CCAtlasNode.h </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">setOpacityModifyRGB</span><span class="params">(<span class="keyword">bool</span> isOpacityModifyRGB)</span> override</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(<span class="keyword">const</span> Color3B&amp; color)</span> override</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">setOpacity</span><span class="params">(GLubyte opacity)</span> override</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CCLabelAtlas.cpp</span></span><br><span class="line"><span class="keyword">void</span> LabelAtlas::updateColor()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_textureAtlas)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">Color4B <span class="title">color4</span><span class="params">( _displayedColor.r, _displayedColor.g, _displayedColor.b, _displayedOpacity )</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (_isOpacityModifyRGB)</span><br><span class="line">        &#123;</span><br><span class="line">            color4.r *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">            color4.g *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">            color4.b *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">auto</span> quads = _textureAtlas-&gt;getQuads();</span><br><span class="line">        <span class="keyword">ssize_t</span> length = _string.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; length; index++)</span><br><span class="line">        &#123;</span><br><span class="line">            quads[index].bl.colors = color4;</span><br><span class="line">            quads[index].br.colors = color4;</span><br><span class="line">            quads[index].tl.colors = color4;</span><br><span class="line">            quads[index].tr.colors = color4;</span><br><span class="line">            _textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="字体，Font"><a href="#字体，Font" class="headerlink" title="字体，Font"></a>字体，Font</h2><p>Font类直接继承自Ref，有3种派生类</p><ul><li>FontCharMap</li><li>FontFNT</li><li>FontFreeType</li></ul><p>不同字体类分别负责对不同格式文件解析，最终都是创建 FontAtlas 对象。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FontAtlas * XXX::createFontAtlas()</span><br></pre></td></tr></table></figure><p>总的来说，可以分为以下几部分</p><ul><li>各式字体文件格式，通过Font派生类解析并存储相应文件的配置（FontCharMap、FontFNT、FontFreeType）</li><li>所有Font派生类，都需要支持创建FontAtlas对象</li><li>Label直接使用FontAtlas对象，而不知晓解析方式等；为便于重用，设置缓存池 FontAtlasCache</li><li>这样 Label - FontAtlas - Font 之间做到解耦</li></ul><h3 id="FontAtlas-amp-FontAtlasCache"><a href="#FontAtlas-amp-FontAtlasCache" class="headerlink" title="FontAtlas &amp; FontAtlasCache"></a>FontAtlas &amp; FontAtlasCache</h3><p>FontAtlas 是每种字体对应的图集，它缓存并管理一系列 Texture2D 对象，以及每个字符的配置结构。Label可以使用它更方便的渲染文字。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FontLetterDefinition</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">float</span> U;                </span><br><span class="line">    <span class="keyword">float</span> V;                </span><br><span class="line">    <span class="keyword">float</span> width;            </span><br><span class="line">    <span class="keyword">float</span> height;           </span><br><span class="line">    <span class="keyword">float</span> offsetX;          </span><br><span class="line">    <span class="keyword">float</span> offsetY;          </span><br><span class="line">    <span class="keyword">int</span> textureID;          </span><br><span class="line">    <span class="keyword">bool</span> validDefinition;   </span><br><span class="line">    <span class="keyword">int</span> xAdvance;           </span><br><span class="line">    <span class="keyword">bool</span> rotated;           </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>FontAtlasCache 意如其名，做FontAtlas的缓存。<br>针对不同字体提供不同方法</p><ul><li>TTF<ul><li>根据TTF配置获取</li><li>支持根据文件名卸载</li></ul></li><li>FNT<ul><li>根据FNT文件获取</li><li>支持根据配置重载</li></ul></li><li>CharMap<ul><li>根据plist、图集等配置获取</li></ul></li></ul><p>TTF配置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">ttfConfig</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> fontFilePath;</span><br><span class="line">    <span class="keyword">float</span> fontSize;</span><br><span class="line"></span><br><span class="line">    GlyphCollection glyphs;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *customGlyphs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> distanceFieldEnabled;</span><br><span class="line">    <span class="keyword">int</span> outlineSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> italics;</span><br><span class="line">    <span class="keyword">bool</span> bold;</span><br><span class="line">    <span class="keyword">bool</span> underline;</span><br><span class="line">    <span class="keyword">bool</span> strikethrough;</span><br><span class="line"></span><br><span class="line">    _ttfConfig(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; filePath = <span class="string">""</span>,<span class="keyword">float</span> size = CC_DEFAULT_FONT_LABEL_SIZE, <span class="keyword">const</span> GlyphCollection&amp; glyphCollection = GlyphCollection::DYNAMIC,</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *customGlyphCollection = <span class="literal">nullptr</span>, <span class="keyword">bool</span> useDistanceField = <span class="literal">false</span>, <span class="keyword">int</span> outline = <span class="number">0</span>,</span><br><span class="line">               <span class="keyword">bool</span> useItalics = <span class="literal">false</span>, <span class="keyword">bool</span> useBold = <span class="literal">false</span>, <span class="keyword">bool</span> useUnderline = <span class="literal">false</span>, <span class="keyword">bool</span> useStrikethrough = <span class="literal">false</span>)</span><br><span class="line">        : fontFilePath(filePath)</span><br><span class="line">        , fontSize(size)</span><br><span class="line">        , glyphs(glyphCollection)</span><br><span class="line">        , customGlyphs(customGlyphCollection)</span><br><span class="line">        , distanceFieldEnabled(useDistanceField)</span><br><span class="line">        , outlineSize(outline)</span><br><span class="line">        , italics(useItalics)</span><br><span class="line">        , bold(useBold)</span><br><span class="line">        , underline(useUnderline)</span><br><span class="line">        , strikethrough(useStrikethrough)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(outline &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            distanceFieldEnabled = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; TTFConfig;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="FontFNT"><a href="#FontFNT" class="headerlink" title="FontFNT"></a>FontFNT</h3><p>FontFNT实现对BMfont的解析，通过BMFontConfiguration类来解析fnt文件，将文件内所有字符及对应图片名、文字边距属性、文字配置属性保存起来，提供方便调用的接口。</p><p>创建FontFNT流程</p><ol><li>解析fnt格式文件，得到 BMFontConfiguration 对象</li><li>使用 BMFontConfiguration 对象与 Texture2D 创建 FontFNT 对象</li><li>FontFNT对象存储所有字符的配置，提供接口方便上层调用</li></ol><p>创建FontAtlas流程</p><ol><li>检测BMFontConfiguration是否正常</li><li>初始化 FontAtlas</li><li>设置 FontAtlas 的一些配置</li><li>载入所需的图集（当前只支持一张图集）</li></ol><p>BMFontConfiguration支持的fnt文件配置及对应解析方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BMFontConfiguration::parseConfigFile</span><br></pre></td></tr></table></figure><table><thead><tr><th>关键字</th><th>方法</th></tr></thead><tbody><tr><td>info face</td><td>parseInfoArguments</td></tr><tr><td>common lineHeight</td><td>parseCommonArguments</td></tr><tr><td>page id</td><td>parseImageFileName</td></tr><tr><td>chars c</td><td>忽略解析</td></tr><tr><td>char</td><td>parseCharacterDefinition</td></tr><tr><td>kerning first</td><td>parseKerningEntry</td></tr></tbody></table><p>此处也支持解析二进制文本，解析规则基于文件格式 <a href="http://www.angelcode.com/products/bmfont/doc/file_format.html" target="_blank" rel="noopener">Bitmap Font Generator</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BMFontConfiguration::parseBinaryConfigFile</span><br></pre></td></tr></table></figure></p><p>注意：</p><ul><li>目前BMFont只支持单张图集<ul><li>若想调整，可尝试修改 FontAtlas * FontFNT::createFontAtlas 内关于图集ID的处理</li></ul></li><li>解析二进制内容，仅支持版本3</li></ul><blockquote><p>The first three bytes are the file identifier and must always be 66, 77, 70, or “BMF”. The fourth byte gives the format version, currently it must be 3.</p><blockquote><p>Version 1 (introduced with application version 1.8).<br>Version 2 (introduced with application version 1.9) added the outline field in the infoBlock and the encoded field in the commonBlock.<br>Version 3 (introduced with application version 1.10) removed the encoded field in the commonBlock, and added the alphaChnl, redChnl, greenChnl, blueChnl instead. </p></blockquote><p>The size of each block is now stored without accounting for the size field itself. The character id in the charsBlock and the kerningPairsBlock was increased to 4 bytes to support the full unicode range.</p></blockquote><p><br></p><h3 id="FontFreeType"><a href="#FontFreeType" class="headerlink" title="FontFreeType"></a>FontFreeType</h3><p>FontFreeType实现对ttf格式文件处理，使用第三方库FreeType来解析TTF。<br>内部使用一个cache来缓存ttf文件信息，提供获取GLyphBitmap的方法来得到指定文字的位图。</p><p>流程：</p><ol><li>初始化FontFreeType对象<ul><li><em>FT_Stroker_New，创建FT_Stroker对象</em></li><li><em>FT_Stroker_Set，调整FT_Stroker对象</em></li></ul></li><li>设置字符集 GlyphCollection</li><li>初始化FT_Face对象（FreeType库返回对象的句柄）<ol><li>根据字体名先在本地缓存中查找<ul><li>存在，则引用计数+1</li></ul></li><li>创建FT_Face对象流程<ol><li>FT_New_Memory_Face</li><li>FT_Select_Charmap</li><li>FT_Set_Char_Size</li></ol></li></ol></li><li>释放FontFreeType对象<ul><li>FT_Stroker_Done，释放FT_Stroker对象</li><li>FT_Done_Face，释放FT_Face对象</li><li>将对应字体名引用从缓存中-1</li></ul></li></ol><p>创建 FontAtlas流程</p><ul><li>初始化 FontAtlas 对象</li><li>若当前字符集 非GlyphCollection::DYNAMIC<ul><li>准备文本的所有字符配置项，FontAtlas::prepareLetterDefinitions<ul><li>获取文本中未显示过的字符</li><li>遍历所有新字符，生成配置项 FontLetterDefinition ，缓存</li><li>更新当前页图集信息</li></ul></li></ul></li></ul><p><br></p><h3 id="FontCharMap"><a href="#FontCharMap" class="headerlink" title="FontCharMap"></a>FontCharMap</h3><p>实现LabelAtlas图片的解析，创建方式如下</p><ul><li>通过纹理、单字符宽、单字符高、起始字符</li><li>通过plist文件</li></ul><p>流程</p><ol><li>通过图片文件名或解析plist，获取图片并载入缓存</li><li>初始化 FontCharMap（根据图集、单字符宽、单字符高、起始字符）</li></ol><p>创建 FontAtlas 流程</p><ol><li>初始化 FontAtlas</li><li>设置 FontLetterDefinition 基础配置</li><li>遍历所有字符填充到 FontAtlas 字符配置</li><li>载入FontAtlas图集</li></ol><p><br><br><br></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="GUI中的文本"><a href="#GUI中的文本" class="headerlink" title="GUI中的文本"></a>GUI中的文本</h3><p>CocosStudio 中的文本控件</p><ul><li>文本 - UIText - LabelType::TTF / LabelType::STRING_TEXTURE</li><li>艺术数字 - UITextAtlas - LabelType::CHARMAP</li><li>FNT字体 - UITextBMFont - LabelType::BMFont</li></ul><p>一般主要用UIText控件来实现，较少用到其他两个。<br>这三种文本，都可以通过 getVirtualRenderer 获取到Label节点，对它进行操作。<br>本质上来讲，都是通过Label来实现的。</p><p><br></p><h4 id="GUI-amp-UIWidget"><a href="#GUI-amp-UIWidget" class="headerlink" title="GUI &amp; UIWidget"></a>GUI &amp; UIWidget</h4><p>GUI 即 图形用户界面（Graphical User Interface）。<br>相对于用代码来创建各种按钮、图片等，使用可视化的拖动指定控件方式创建按钮、图片等，是更加符合开发者需要且更简便快捷的。</p><p>对于 cocos2d-x 来讲，GUI有:</p><ul><li>CocosBuilder</li><li>CocosStudio（常用）</li><li>FairyGUI（非官方）</li></ul><p>在CocosStudio中配合使用的控件，都继承自同一个父类UIWidget。<br>UIWidget主要功能为：</p><ul><li>实现一系列位置、布局、自适应相关功能</li><li>封装了触摸处理及控件焦点管理</li></ul><p><br></p><h3 id="FreeType库"><a href="#FreeType库" class="headerlink" title="FreeType库"></a>FreeType库</h3><p>简介（<a href="https://freetype.org/index.html" target="_blank" rel="noopener">官网</a>）</p><ul><li>一款 免费、开源、可移植、高质量的 字体引擎</li><li>支持多种字体格式文件，并提供统一的接口</li><li>支持单色位图、反走样位图渲染</li><li>用户可灵活根据需要裁剪</li></ul><p>一些概念：</p><p>句柄库</p><ul><li>含义：FreeType句柄库，用来加载多个字体外观</li><li>类型：FT_Library</li><li>方法<ul><li>创建：FT_Init_FreeType</li><li>释放：FT_Done_FreeType</li></ul></li></ul><p>字体外观</p><ul><li>含义：每种字体对应一个字体外观，通过句柄库载入，字体外观中包含多个字形的配置信息</li><li>类型：FT_Face</li><li>方法<ul><li>创建：FT_New_Memory_Face</li><li>释放：FT_Done_Face</li></ul></li></ul><p>字形</p><ul><li>含义：每个字符都可视作一个字形</li><li>类型：FT_GlyphSlot（设置不同字符，将字形载入到制定槽位中）</li><li>方法（在 freetype.h 中有API介绍）<ul><li>从字体外观中载入对应字符的信息: FT_Load_Char</li><li>设置字符大小: FT_Set_Char_Size</li><li>获取字形索引: FT_Get_Char_Index</li></ul></li></ul><p>关于字形的参数，水平和垂直有所不同</p><p>水平布局</p><p><img src="./FreeType_水平布局.png" alt="FreeType_水平布局"></p><p>垂直布局</p><p><img src="./FreeType_垂直布局.png" alt="FreeType_垂直布局"></p><p><br><br><br><br><br></p><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><p>待补充</p><p><br></p><p><br></p><h1 id="探索"><a href="#探索" class="headerlink" title="探索"></a>探索</h1><h2 id="支持多TTF"><a href="#支持多TTF" class="headerlink" title="支持多TTF"></a>支持多TTF</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在支持多语言版本时，玩家可随意输入自己名称，在界面中显示名称时，无法使用单一的国家TTF文本来显示名称，不得已使用系统字，系统字不够美观，效果差。<br>如果单Label可支持多TTF，就可以让玩家输入的内容，都用TTF样式文本显示，美观度得到保证。</p><p><br></p><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p>首先，确定TTF 文本的创建流程</p><ol><li>FreeType2 库，存所有字符配置信息；根据不同字符返回对应字符的配置信息（宽、高、矩形、偏移）及 位图绘制信息（获取字符信息文本）</li><li>将字符位图信息拼接到当前纹理信息中（拼接纹理信息文本），将字符配置信息缓存</li><li>将当前纹理根据新纹理信息更新（绘制纹理信息）</li><li>遍历所有显示字符，根据字符配置信息，将对应位置纹理绘制到本Label纹理中（加入绘制队列）</li></ol><p>这里面，涉及到两个纹理：</p><ul><li>使用同TTF文件时，共用的纹理</li><li>每个Label使用的自己的纹理</li></ul><p>每次新字符都要经历：</p><ol><li>从TTF获取绘制信息，绘制到 TTF文件共用纹理上</li><li>再从TTF文件共用纹理，绘制到 Label自己的纹理上</li></ol><p><br></p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>Label与TTF文件对应关系</p><ul><li>Label : FontAtlas = 1 : 1</li><li>FontAtlas : FT_Face = 1 : 1</li></ul><p><em>此处Label与FontAtlas实际并不是1:1；实际上不同字体大小和描边大小，会使用不同的FontAtlas，为了展述逻辑方便，刻意忽略了这点</em></p><p>有两个方式实现：</p><ol><li>多FontAtlas <ul><li>Label : FontAtlas 变为 1 : n</li></ul></li><li>多FT_Face<ul><li>FontAtlas : FT_Face 变为 1 : n</li></ul></li></ol><p>相对于多FT_Face，多FontAtlas会导致单个Label使用多个纹理，会增加DC；带来额外负担，所以，使用多FT_Face来实现。</p><p><br></p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p>此处，只简要展示一些重要方法</p><p>Label支持多TTF创建方式<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Allocates and initializes a Label, base on FreeType2 with multi font file path.</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* @param text The initial text</span></span><br><span class="line"><span class="comment">* @param fontFilePathList Multi font file.</span></span><br><span class="line"><span class="comment">* @param fontSize The font size.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> Label* <span class="title">createWithMultiTTF</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; text, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; fontFilePathList, <span class="keyword">float</span> fontSize)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">initWithMultiTTF</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; text, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; fontFilePathList, <span class="keyword">float</span> fontSize)</span></span>;</span><br></pre></td></tr></table></figure></p><p>注意tolua的支持</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lua_cocos2dx_Label_createWithTTF02</span><span class="params">(lua_State* L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == L)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> argc = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    tolua_Error tolua_err;</span><br><span class="line">    <span class="keyword">if</span> (!tolua_isusertable(L, <span class="number">1</span>, <span class="string">"cc.Label"</span>, <span class="number">0</span>, &amp;tolua_err)) <span class="keyword">goto</span> tolua_lerror;</span><br><span class="line"></span><br><span class="line">    argc = lua_gettop(L) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!tolua_isstring(L, <span class="number">2</span>, <span class="number">0</span>, &amp;tolua_err) ||</span><br><span class="line">            !tolua_istable(L, <span class="number">3</span>, <span class="number">0</span>, &amp;tolua_err) ||</span><br><span class="line">            !tolua_isnumber(L, <span class="number">4</span>, <span class="number">0</span>, &amp;tolua_err)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">goto</span> tolua_lerror;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">string</span> text = tolua_tostring(L, <span class="number">2</span>, <span class="string">""</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; fontFileList;</span><br><span class="line">            <span class="keyword">if</span> (tolua_istable(L, <span class="number">3</span>, <span class="number">0</span>, &amp;tolua_err)) &#123;</span><br><span class="line">                <span class="keyword">size_t</span> len = lua_objlen(L, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; len; ++i) &#123;</span><br><span class="line">                    lua_pushnumber(L, i + <span class="number">1</span>);</span><br><span class="line">                    lua_gettable(L, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">                    fontFileList.push_back(lua_tostring(L, <span class="number">-1</span>));</span><br><span class="line">                    lua_pop(L, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">float</span> fontSize = tolua_tonumber(L, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            cocos2d::Label* ret = cocos2d::Label::createWithMultiTTF(text, fontFileList, fontSize);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> ID = ret ? (<span class="keyword">int</span>)(ret-&gt;_ID) : <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">int</span>* luaID = ret ? &amp;(ret-&gt;_luaID) : <span class="literal">nullptr</span>;</span><br><span class="line">            toluafix_pushusertype_ccobject(L, ID, luaID, (<span class="keyword">void</span>*)ret, <span class="string">"cc.Label"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">tolua_lerror:</span><br><span class="line">    <span class="keyword">return</span> lua_cocos2dx_Label_createWithTTF00(L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从 FontFreeType中获取字形信息的时候，要遍历所有FT_Face</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* FontFreeType::getGlyphBitmap(<span class="keyword">uint64_t</span> theChar, <span class="keyword">long</span> &amp;outWidth, <span class="keyword">long</span> &amp;outHeight, Rect &amp;outRect,<span class="keyword">int</span> &amp;xAdvance)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_isMultiTTF) &#123;</span><br><span class="line">        <span class="keyword">bool</span> findChar = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* ret = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; _fontRefList.size(); i++) &#123;</span><br><span class="line">            FT_Face face = _fontRefList.at(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_distanceFieldEnabled)  &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(face, theChar, FT_LOAD_RENDER | FT_LOAD_NO_HINTING | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(face, theChar, FT_LOAD_RENDER | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">auto</span>&amp; metrics = face-&gt;glyph-&gt;metrics;</span><br><span class="line">            outRect.origin.x = metrics.horiBearingX &gt;&gt; <span class="number">6</span>;</span><br><span class="line">            outRect.origin.y = -(metrics.horiBearingY &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.width = (metrics.width &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.height = (metrics.height &gt;&gt; <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            xAdvance = (<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(face-&gt;glyph-&gt;metrics.horiAdvance &gt;&gt; <span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">            outWidth = face-&gt;glyph-&gt;bitmap.width;</span><br><span class="line">            outHeight = face-&gt;glyph-&gt;bitmap.rows;</span><br><span class="line"></span><br><span class="line">            ret = face-&gt;glyph-&gt;bitmap.buffer;</span><br><span class="line">            <span class="comment">//if (ret &amp;&amp; outWidth &gt; 0 &amp;&amp; outHeight &gt; 0) &#123;</span></span><br><span class="line">            <span class="keyword">if</span>(ret) &#123;</span><br><span class="line">                <span class="comment">//unsigned char t = *ret;</span></span><br><span class="line">                <span class="comment">//if (t != unsigned char(128) &amp;&amp; t != unsigned char(176) &amp;&amp; t != unsigned char(20) &amp;&amp; t != unsigned char(104)) &#123;</span></span><br><span class="line">                    findChar = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//&#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (findChar)  &#123;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  &#123;</span><br><span class="line">            outRect.size.width = <span class="number">0</span>;</span><br><span class="line">            outRect.size.height = <span class="number">0</span>;</span><br><span class="line">            xAdvance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">bool</span> invalidChar = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* ret = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (_fontRef == <span class="literal">nullptr</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_distanceFieldEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(_fontRef, theChar, FT_LOAD_RENDER | FT_LOAD_NO_HINTING | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (FT_Load_Char(_fontRef, theChar, FT_LOAD_RENDER | FT_LOAD_NO_AUTOHINT))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">auto</span>&amp; metrics = _fontRef-&gt;glyph-&gt;metrics;</span><br><span class="line">            outRect.origin.x = metrics.horiBearingX &gt;&gt; <span class="number">6</span>;</span><br><span class="line">            outRect.origin.y = -(metrics.horiBearingY &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.width = (metrics.width &gt;&gt; <span class="number">6</span>);</span><br><span class="line">            outRect.size.height = (metrics.height &gt;&gt; <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            xAdvance = (<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(_fontRef-&gt;glyph-&gt;metrics.horiAdvance &gt;&gt; <span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">            outWidth = _fontRef-&gt;glyph-&gt;bitmap.width;</span><br><span class="line">            outHeight = _fontRef-&gt;glyph-&gt;bitmap.rows;</span><br><span class="line">            ret = _fontRef-&gt;glyph-&gt;bitmap.buffer;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_outlineSize &gt; <span class="number">0</span> &amp;&amp; outWidth &gt; <span class="number">0</span> &amp;&amp; outHeight &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">auto</span> copyBitmap = <span class="keyword">new</span> (<span class="built_in">std</span>::nothrow) <span class="keyword">unsigned</span> <span class="keyword">char</span>[outWidth * outHeight];</span><br><span class="line">                <span class="built_in">memcpy</span>(copyBitmap, ret, outWidth * outHeight * <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>));</span><br><span class="line"></span><br><span class="line">                FT_BBox bbox;</span><br><span class="line">                <span class="keyword">auto</span> outlineBitmap = getGlyphBitmapWithOutline(theChar, bbox);</span><br><span class="line">                <span class="keyword">if</span> (outlineBitmap == <span class="literal">nullptr</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ret = <span class="literal">nullptr</span>;</span><br><span class="line">                    <span class="keyword">delete</span>[] copyBitmap;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">long</span> glyphMinX = outRect.origin.x;</span><br><span class="line">                <span class="keyword">long</span> glyphMaxX = outRect.origin.x + outWidth;</span><br><span class="line">                <span class="keyword">long</span> glyphMinY = -outHeight - outRect.origin.y;</span><br><span class="line">                <span class="keyword">long</span> glyphMaxY = -outRect.origin.y;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">auto</span> outlineMinX = bbox.xMin &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineMaxX = bbox.xMax &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineMinY = bbox.yMin &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineMaxY = bbox.yMax &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">auto</span> outlineWidth = outlineMaxX - outlineMinX;</span><br><span class="line">                <span class="keyword">auto</span> outlineHeight = outlineMaxY - outlineMinY;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">auto</span> blendImageMinX = MIN(outlineMinX, glyphMinX);</span><br><span class="line">                <span class="keyword">auto</span> blendImageMaxY = MAX(outlineMaxY, glyphMaxY);</span><br><span class="line">                <span class="keyword">auto</span> blendWidth = MAX(outlineMaxX, glyphMaxX) - blendImageMinX;</span><br><span class="line">                <span class="keyword">auto</span> blendHeight = blendImageMaxY - MIN(outlineMinY, glyphMinY);</span><br><span class="line"></span><br><span class="line">                outRect.origin.x = blendImageMinX;</span><br><span class="line">                outRect.origin.y = -blendImageMaxY + _outlineSize;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span>* blendImage = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (blendWidth &gt; <span class="number">0</span> &amp;&amp; blendHeight &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">long</span> index, index2;</span><br><span class="line">                    blendImage = <span class="keyword">new</span> (<span class="built_in">std</span>::nothrow) <span class="keyword">unsigned</span> <span class="keyword">char</span>[blendWidth * blendHeight * <span class="number">2</span>];</span><br><span class="line">                    <span class="built_in">memset</span>(blendImage, <span class="number">0</span>, blendWidth * blendHeight * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">auto</span> px = outlineMinX - blendImageMinX;</span><br><span class="line">                    <span class="keyword">auto</span> py = blendImageMaxY - outlineMaxY;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; outlineWidth; ++x)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; outlineHeight; ++y)</span><br><span class="line">                        &#123;</span><br><span class="line">                            index = px + x + ((py + y) * blendWidth);</span><br><span class="line">                            index2 = x + (y * outlineWidth);</span><br><span class="line">                            blendImage[<span class="number">2</span> * index] = outlineBitmap[index2];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    px = glyphMinX - blendImageMinX;</span><br><span class="line">                    py = blendImageMaxY - glyphMaxY;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; outWidth; ++x)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; outHeight; ++y)</span><br><span class="line">                        &#123;</span><br><span class="line">                            index = px + x + ((y + py) * blendWidth);</span><br><span class="line">                            index2 = x + (y * outWidth);</span><br><span class="line">                            blendImage[<span class="number">2</span> * index + <span class="number">1</span>] = copyBitmap[index2];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                outRect.size.width = blendWidth;</span><br><span class="line">                outRect.size.height = blendHeight;</span><br><span class="line">                outWidth = blendWidth;</span><br><span class="line">                outHeight = blendHeight;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">delete</span>[] outlineBitmap;</span><br><span class="line">                <span class="keyword">delete</span>[] copyBitmap;</span><br><span class="line">                ret = blendImage;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            invalidChar = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (invalidChar)</span><br><span class="line">        &#123;</span><br><span class="line">            outRect.size.width = <span class="number">0</span>;</span><br><span class="line">            outRect.size.height = <span class="number">0</span>;</span><br><span class="line">            xAdvance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h4 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h4><p>通过如此配置，已经实现了一个样例，效果如下：</p><p><img src="./实现样例.png" alt="实现样例"></p><p>可以发现几个问题：</p><ul><li>部分文本显示异常</li><li>空格消失</li><li>字符间距有问题</li><li>行间距有问题</li></ul><p>部分文本显示异常</p><ul><li>主要是因为，我们是按照固定顺序来遍历所有ttf文件，判断未找到的条件是FT_Face返回的字符显示信息为nullptr或者位图宽高小于等于0。但是，如果前面的TTF文件中存储了显示不出来的字符信息且设定为占位符，就会导致不再遍历后面的ttf文件</li><li>例如：<ul><li>韩语显示不了一些汉语，但是又不想显示为空，就拿一些看起来就有问题的字符 × 来替代，让文本显示起来更美观一些；但是这会导致我们向下查找的逻辑失效</li></ul></li><li>解决方案<ul><li>可以统计所有非法字符，如果返回的字符是非法字符，也继续向下查找</li><li>可以计算字符unicode值，根据unicode来判断所属国家，然后优先去对应国家TTF文件中查找</li></ul></li></ul><p>可见，距离投入使用还有一段路程，要后续慢慢优化，</p><p><br></p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>方案一是修改底层的方式，在一个绘制批次中，显示来自于不同字库的字形。<br>这里，也可以用在业务层扩展的方式来实现具体需求。</p><ol><li>分析输入的文本中每个字符所属的国家（通过Unicdoe值）</li><li>每个字符用对应的字库来创建</li><li>将这些文本拼接起来（使用富文本）</li></ol><p>这样，就可以在业务层直接解决问题，虽然这样修改批次会增多，但是基于使用场景、实现复杂度、维护成本等，使用方案二性价比更高。</p><p><br></p><h4 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h4><p>在之前的文章中，实现了 判断字符所属国家： <a href="http://www.lt-tree.com/2021/10/26/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/" target="_blank" rel="noopener">字符集与字符编码</a><br>以此为基础，扩展实现。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- refer to Xutf8.lua  UnicodeNationRangeList</span></span><br><span class="line"><span class="keyword">local</span> NationIndex2TTF = &#123;</span><br><span class="line">    default = <span class="string">"static/common.ttf"</span>,</span><br><span class="line">    <span class="comment">-- [1] = "static/common.ttf",</span></span><br><span class="line">    [<span class="number">2</span>] = <span class="string">"static/common_en.ttf"</span>,</span><br><span class="line">    [<span class="number">3</span>] = <span class="string">"static/common_cn.ttf"</span>,</span><br><span class="line">    [<span class="number">4</span>] = <span class="string">"static/common_kr.ttf"</span>,</span><br><span class="line">    [<span class="number">5</span>] = <span class="string">"static/common_jp.ttf"</span>,</span><br><span class="line">    [<span class="number">6</span>] = <span class="string">"static/common_ta.ttf"</span>,</span><br><span class="line">    [<span class="number">7</span>] = <span class="string">"static/common_rs.ttf"</span>,</span><br><span class="line">    [<span class="number">8</span>] = <span class="string">"static/common_gr.ttf"</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 分析传入的文本</span></span><br><span class="line"><span class="comment">    一般传入的结构为</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">      content = 文本内容</span></span><br><span class="line"><span class="comment">      font = 字体文件</span></span><br><span class="line"><span class="comment">      fontsize = 字体大小</span></span><br><span class="line"><span class="comment">      color = 文本色值</span></span><br><span class="line"><span class="comment">      opacity = 文本透明度</span></span><br><span class="line"><span class="comment">      outlinecolor = 描边色值</span></span><br><span class="line"><span class="comment">      outlinesize = 描边大小</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  v: table</span></span><br><span class="line"><span class="comment">    富文本element已有结构</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  return:</span></span><br><span class="line"><span class="comment">    array&lt;v&gt;: 传入格式同结构的数组</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RichTextFactory:analyseNationalContent</span><span class="params">(element)</span></span></span><br><span class="line">    <span class="keyword">local</span> nationList = &#123;&#125;</span><br><span class="line">    <span class="keyword">local</span> content = element.content</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> curNationIdx = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">local</span> startPos = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">local</span> endPos = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">len</span> = Xutf8.<span class="built_in">len</span>(content)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, <span class="built_in">len</span> <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> c = Xutf8.<span class="built_in">sub</span>(content, i, i)</span><br><span class="line">        <span class="keyword">local</span> idx, tip = Xutf8.analyseCharBelong(c)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">local</span> collectEle = (i == <span class="built_in">len</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 不识别，一般是空格、符号等，归属于附近的语言体系</span></span><br><span class="line">        <span class="keyword">if</span> idx == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> curNationIdx == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">                startPos = i</span><br><span class="line">                endPos = i</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                endPos = i</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> curNationIdx == <span class="number">-1</span> <span class="keyword">then</span></span><br><span class="line">                curNationIdx = idx</span><br><span class="line">                startPos = i</span><br><span class="line">                endPos = i</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> curNationIdx == idx <span class="keyword">then</span></span><br><span class="line">                    endPos = i</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    collectEle = <span class="literal">true</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> collectEle <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> temp = clone(element)</span><br><span class="line">            temp.content = Xutf8.<span class="built_in">sub</span>(content, startPos, endPos)</span><br><span class="line">            <span class="keyword">if</span> NationIndex2TTF[curNationIdx] <span class="keyword">then</span></span><br><span class="line">                temp.font = NationIndex2TTF[curNationIdx]</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                temp.font = NationIndex2TTF.default</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            nationList[#nationList + <span class="number">1</span>] = temp</span><br><span class="line"></span><br><span class="line">            curNationIdx = idx</span><br><span class="line">            startPos = i</span><br><span class="line">            endPos = i</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nationList</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>最后结果：<br>三部分</p><ul><li>上面部分是富文本实现</li><li>中间部分是系统字</li><li>下面部分是TTF分别创建的文本</li></ul><p><img src="./实现样例2.png" alt="实现样例2"></p><p><br></p><h4 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h4><p>每个TTF的基线不一致，导致看起来并不在同一个水平线。<br>调整对齐方式，所有元素在垂直方向上居中对齐。</p><p><img src="./实现样例3.png" alt="实现样例3"></p><p><br><br><br></p><h2 id="获取SytemFont实际长度"><a href="#获取SytemFont实际长度" class="headerlink" title="获取SytemFont实际长度"></a>获取SytemFont实际长度</h2><h3 id="问题-3"><a href="#问题-3" class="headerlink" title="问题"></a>问题</h3><p>系统字不支持 getLetter方法。<br>但在富文本中，若使用系统字，就无法做到精准的分割字符串。</p><p><br></p><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>系统字创建，是通过 Texture2D::initWithString 来创建出来的，这里面应该能获取到每个字符的举行区域，每个字符在图内的位置。<br>但，实际上，创建文本是直接调用字库来创建一批文本，并没有一个个传入，然后创建。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SIZE <span class="title">sizeWithText</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span> * pszText, <span class="keyword">int</span> nLen, DWORD dwFmt, LONG nWidthLimit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// ....</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 这里显示的是 Windows平台的实现</span></span><br><span class="line">  <span class="comment">// pszText为具体文本内容， nLen为文本长度，rc为整个文本矩形大小</span></span><br><span class="line">  DrawTextW(_DC, pszText, nLen, &amp;rc, dwCalcFmt);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，这块也可以做成，每个字符传递一次，然后获得每个举行大小，然后再具体计算，成本过高，不推荐。<br>临时方案，就根据最终宽度与文本长度，进行大概的分割。</p><p><br><br><br></p><h2 id="Label支持渐变色"><a href="#Label支持渐变色" class="headerlink" title="Label支持渐变色"></a>Label支持渐变色</h2><h3 id="问题-4"><a href="#问题-4" class="headerlink" title="问题"></a>问题</h3><p>让Label支持渐变色。</p><p><br></p><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>在updateColor的时候，要设置左上、左下、右上、右下的色值，可以在此处进行处理</p><p><br></p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>创建相关变量、函数并初始化，注册给lua<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==== Label.h</span></span><br><span class="line"><span class="comment">// 0 - none, 1 - from left to right , 2 - from top to bottom</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gradientColor</span><span class="params">(<span class="keyword">int</span> dir, Color4B color = Color4B::WHITE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _gradientColorDir;</span><br><span class="line">Color4B _gradientColor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ==== lua_cocos2dx_auto.cpp</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lua_cocos2dx_Label_gradientColor</span><span class="params">(lua_State* tolua_S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> argc = <span class="number">0</span>;</span><br><span class="line">    cocos2d::Label* cobj = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    tolua_Error tolua_err;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    <span class="keyword">if</span> (!tolua_isusertype(tolua_S, <span class="number">1</span>, <span class="string">"cc.Label"</span>, <span class="number">0</span>, &amp;tolua_err)) <span class="keyword">goto</span> tolua_lerror;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    cobj = (cocos2d::Label*)tolua_tousertype(tolua_S, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    <span class="keyword">if</span> (!cobj)</span><br><span class="line">    &#123;</span><br><span class="line">        tolua_error(tolua_S, <span class="string">"invalid 'cobj' in function 'lua_cocos2dx_Label_gradientColor'"</span>, <span class="literal">nullptr</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    argc = lua_gettop(tolua_S) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> arg0;</span><br><span class="line">        ok &amp;= luaval_to_int32(tolua_S, <span class="number">2</span>, (<span class="keyword">int</span>*)&amp;arg0, <span class="string">"cc.Label:gradientColor"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ok)</span><br><span class="line">        &#123;</span><br><span class="line">            tolua_error(tolua_S, <span class="string">"invalid arguments in function 'lua_cocos2dx_Label_gradientColor'"</span>, <span class="literal">nullptr</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cobj-&gt;gradientColor(arg0);</span><br><span class="line">        lua_settop(tolua_S, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(argc == <span class="number">2</span>)  &#123;</span><br><span class="line">        <span class="keyword">int</span> arg0;</span><br><span class="line">        ok &amp;= luaval_to_int32(tolua_S, <span class="number">2</span>, (<span class="keyword">int</span>*)&amp;arg0, <span class="string">"cc.Label:gradientColor"</span>);</span><br><span class="line"></span><br><span class="line">        cocos2d::Color4B arg1;</span><br><span class="line">        ok &amp;= luaval_to_color4b(tolua_S, <span class="number">3</span>, &amp;arg1, <span class="string">"cc.Label:gradientColor"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ok)</span><br><span class="line">        &#123;</span><br><span class="line">            tolua_error(tolua_S, <span class="string">"invalid arguments in function 'lua_cocos2dx_Label_gradientColor'"</span>, <span class="literal">nullptr</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cobj-&gt;gradientColor(arg0, arg1);</span><br><span class="line">        lua_settop(tolua_S, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    luaL_error(tolua_S, <span class="string">"%s has wrong number of arguments: %d, was expecting %d \n"</span>, <span class="string">"cc.Label:gradientColor"</span>, argc, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> COCOS2D_DEBUG &gt;= 1</span></span><br><span class="line">    tolua_lerror:</span><br><span class="line">    tolua_error(tolua_S, <span class="string">"#ferror in function 'lua_cocos2dx_Label_gradientColor'."</span>, &amp;tolua_err);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调整updateColor方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> Label::updateColor()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_batchNodes.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">Color4B <span class="title">color4</span><span class="params">(_textColor.r, _textColor.g, _textColor.b, _displayedOpacity)</span></span>;</span><br><span class="line">    <span class="function">Color4B <span class="title">color42</span><span class="params">(_gradientColor.r, _gradientColor.g, _gradientColor.b, _displayedOpacity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// special opacity for premultiplied textures</span></span><br><span class="line">    <span class="keyword">if</span> (_isOpacityModifyRGB)</span><br><span class="line">    &#123;</span><br><span class="line">        color4.r *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        color4.g *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        color4.b *= _displayedOpacity/<span class="number">255.0f</span>;</span><br><span class="line">        color42.r *= _displayedOpacity / <span class="number">255.0f</span>;</span><br><span class="line">        color42.g *= _displayedOpacity / <span class="number">255.0f</span>;</span><br><span class="line">        color42.b *= _displayedOpacity / <span class="number">255.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cocos2d::TextureAtlas* textureAtlas;</span><br><span class="line">    V3F_C4B_T2F_Quad *quads;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp;&amp; batchNode:_batchNodes)</span><br><span class="line">    &#123;</span><br><span class="line">        textureAtlas = batchNode-&gt;getTextureAtlas();</span><br><span class="line">        quads = textureAtlas-&gt;getQuads();</span><br><span class="line">        <span class="keyword">auto</span> count = textureAtlas-&gt;getTotalQuads();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (_gradientColorDir)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>: &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; count; ++index)</span><br><span class="line">                &#123;</span><br><span class="line">                    quads[index].bl.colors = color4;</span><br><span class="line">                    quads[index].br.colors = color4;</span><br><span class="line">                    quads[index].tl.colors = color4;</span><br><span class="line">                    quads[index].tr.colors = color4;</span><br><span class="line">                    textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; count; ++index)</span><br><span class="line">                &#123;</span><br><span class="line">                    quads[index].bl.colors = color4;</span><br><span class="line">                    quads[index].br.colors = color42;</span><br><span class="line">                    quads[index].tl.colors = color4;</span><br><span class="line">                    quads[index].tr.colors = color42;</span><br><span class="line">                    textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; count; ++index)</span><br><span class="line">                &#123;</span><br><span class="line">                    quads[index].bl.colors = color42;</span><br><span class="line">                    quads[index].br.colors = color42;</span><br><span class="line">                    quads[index].tl.colors = color4;</span><br><span class="line">                    quads[index].tr.colors = color4;</span><br><span class="line">                    textureAtlas-&gt;updateQuad(&amp;quads[index], index);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><img src="./渐变样例.png" alt="渐变样例"></p><p><br><br><br><br><br></p><hr><p>参考资料</p><ul><li>《精通COCOS2D-X游戏开发 基础卷》</li><li><a href="http://www.angelcode.com/products/bmfont/doc/file_format.html" target="_blank" rel="noopener">Bitmap Font Generator</a></li><li><a href="https://freetype.org/download.html" target="_blank" rel="noopener">FreeType库</a></li><li><a href="https://docs.cocos2d-x.org/api-ref/cplusplus/V3.17/db/de4/classcocos2d_1_1_label.html" target="_blank" rel="noopener">Cocos2d-x V3.17 API</a></li><li><a href="https://docs.cocos.com/cocos2d-x/manual/zh/ui_components/labels.html" target="_blank" rel="noopener">Cocos2d文档 GitBook</a></li></ul><p><br><br><br><br><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cocos2d之Label&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="多总结" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%80%BB%E7%BB%93/"/>
    
      <category term="多实践" scheme="http://yoursite.com/tags/%E5%A4%9A%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="Cocos2d" scheme="http://yoursite.com/tags/Cocos2d/"/>
    
  </entry>
  
</feed>
