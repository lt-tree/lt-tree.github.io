<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tree House</title>
  
  <subtitle>不如自挂东南枝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-10-30T14:49:13.502Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ltree98</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SVN之Hook</title>
    <link href="http://yoursite.com/2021/10/30/SVN%E4%B9%8BHook/"/>
    <id>http://yoursite.com/2021/10/30/SVN%E4%B9%8BHook/</id>
    <published>2021-10-30T15:11:16.000Z</published>
    <updated>2021-10-30T14:49:13.502Z</updated>
    
    <content type="html"><![CDATA[<p>SVN之Hook</p><a id="more"></a><p><br></p><h1 id="SVN"><a href="#SVN" class="headerlink" title="SVN"></a>SVN</h1><p>此处主要以 TortoiseSVN为例</p><h2 id="Hook"><a href="#Hook" class="headerlink" title="Hook"></a>Hook</h2><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><p>client side hook - 客户端侧hook<br>server side hook - 服务器侧hook</p><h3 id="Client-Side-Hook"><a href="#Client-Side-Hook" class="headerlink" title="Client Side Hook"></a>Client Side Hook</h3><p>类型：</p><ul><li>Start-commit, 在提交对话框展示前调用。</li><li>Manual Pre-commit, 在提交对话框会显示 Run Hook 按钮，用来手动选择是否执行hook</li><li>Check-commit, 在提交对话框关闭前调用（点击 提交对话框的 OK 按钮，关闭对话框前）</li><li>Pre-commit, 在提交行为开始前调用（点击 提交对话框 OK 按钮，但提交行为开始前）</li><li>Post-commit, 提交行为结束后调用（无论成功与否）</li><li>Start-update, 在更新弹窗展示前调用</li><li>Pre-update, 在更新行为开始前调用</li><li>Post-update, 在更新行为结束后调用</li><li>Pre-connect, 在关联存储库之前调用</li></ul><p>如果想为指定的工作路径添加钩子，只需要指定顶级路径，如果在子文件夹进行操作，SVN会自动向上搜索匹配的路径。<br>接下来必须指定执行命令行，先写可执行的hook脚本路径。脚本可以是批处理文件、可执行文件或其他合法关联windows文件的文件。<br>命令行包含几个由TortoiseSVN填充的参数，传递的参数取决于调用的钩子，每个钩子都有自己的参数。</p><p>类型对应的参数：</p><ul><li>Start-commit, [ PATH MESSAGEFILE CWD ]</li><li>Manual Pre-commit, [ PATH MESSAGEFILE CWD ]</li><li>Check-commit, [ PATH MESSAGEFILE CWD ]</li><li>Pre-commit, [ PATH DEPTH MESSAGEFILE CWD ]</li><li>Post-commit, [ PATH DEPTH MESSAGEFILE REVISION ERROR CWD ]</li><li>Start-update, [ PATH CWD ]</li><li>Pre-update, [ PATH DEPTH REVISION CWD ]</li><li>Post-update, [ PATH DEPTH REVISION ERROR CWD RESULTPATH ]</li><li>Pre-connect, 没有参数传递给该脚本，可以通过将自定义参数附加到脚本路径中来传递自定义参数</li></ul><p>各个参数含义：</p><ul><li>PATH<ul><li>执行操作的路径；如果是远程操作，则是受影响项目的url</li></ul></li><li>MESSAGEFILE<ul><li>包含提交信息日志文件的路径，文件内为UTF-8编码的文本，执行start-commit钩子后，会读回日志消息，让钩子有机会修改它。</li></ul></li><li>CWD<ul><li>运行脚本的工作目录</li></ul></li><li>DEPTH<ul><li>提交/更新行为的深度</li><li>枚举值<ul><li>-2, svn_depth_unknown</li><li>-1, svn_depth_exclude</li><li>0, svn_depth_empty</li><li>1, svn_depth_files</li><li>2, svn_depth_immediates</li><li>3, svn_depth_infinity</li></ul></li></ul></li><li>REVISION<ul><li>提交/更新完成后的存储库修订版本</li></ul></li><li>ERROR<ul><li>包含错误消息文件的路径，没有错误时，文件将为空</li></ul></li><li>RESULTPATH<ul><li>临时文件的路径，包含操作及某种方式操作的所有路径，每个路径都在单独的一行</li></ul></li></ul><h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><p>问题：<br>项目开发过程中，策划上传表后，格式填写错误，比如[]不匹配等，会导致转lua失败，从而进不去游戏；一人的疏忽错误影响整个主线程阻塞。</p><p>方案：<br>在策划上传表之前，先执行转换lua脚本，若执行失败，则禁止上传表</p><p>流程:</p><ol><li>编辑hook脚本，此处放在流程 pre-commit处<ul><li>脚本流程是执行转lua脚本，执行完毕后，收集错误信息，若存在错误，则异常退出（上传表失败），在commit dialog显示错误信息，若无错误，则正常退出（上传表成功）。</li></ul></li><li>调整转lua脚本<ul><li>收集错误信息，输出到指定文件中</li><li>执行失败时，抛出错误代码，方便hook脚本收集</li></ul></li><li>配置hook脚本<ul><li>此处配置的时候，处理脚本，还要指定参数-脚本文件路径</li><li>右键任意文件夹, TortoiseSVN - setting - Hook Scripts - Add - 填写脚本全路径 SVN根目录（方便使用相对目录定位各个目录）</li><li>通过 1&gt;&amp;2，输出到 commit dialog 窗口</li></ul></li><li>使用</li></ol><p>问题：</p><ul><li>需要策划自行配置，自缚双手</li><li>目前是全量进行所有表的转换，虽然有缓存，但依旧要等待很久，最优解是只转换要上传的表；但要解析提交者、提交内容，需要用到 svnlook，该命令需要在 server side hook 中使用（需要服务器权限）。</li><li>由于是借助TortiseSVN，通过命令行提交可以绕过该hook</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="comment">REM Get input param</span></span><br><span class="line"></span><br><span class="line"><span class="comment">REM svn root path like D:\work\SG\s, it will include folder svn, folder design</span></span><br><span class="line"><span class="built_in">set</span> TSVN_ROOT_PATH=%<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> TSVN_PATH=%<span class="number">2</span></span><br><span class="line"><span class="built_in">set</span> TSVN_DEPTH=%<span class="number">3</span></span><br><span class="line"><span class="built_in">set</span> TSVN_MESSAGEFILE=%<span class="number">4</span></span><br><span class="line"><span class="built_in">set</span> TSVN_CWD=%<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">REM lua脚本错误日志文件</span></span><br><span class="line"><span class="built_in">set</span> TSVN_TEMP_FILE=<span class="variable">%TSVN_ROOT_PATH%</span>\svn\svn_hook\temp_output.txt</span><br><span class="line"><span class="comment">REM lua脚本所在目录</span></span><br><span class="line"><span class="built_in">set</span> TSVN_DESIGN_PATH=<span class="variable">%TSVN_ROOT_PATH%</span>\design\</span><br><span class="line"><span class="comment">REM lua脚本</span></span><br><span class="line"><span class="built_in">set</span> TSVN_CHECK_LUA_SCRIPT=csvToClient1.<span class="number">0</span>_forsvnhook.py</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /d <span class="variable">%TSVN_DESIGN_PATH%</span></span><br><span class="line">python <span class="variable">%TSVN_CHECK_LUA_SCRIPT%</span> &gt; <span class="variable">%TSVN_TEMP_FILE%</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%errorlevel%</span> <span class="keyword">gtr</span> <span class="number">0</span> <span class="keyword">goto</span> err</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%errorlevel%</span>! <span class="number">1</span>&gt;&amp;<span class="number">2</span></span><br><span class="line"><span class="built_in">echo</span> Success! <span class="number">1</span>&gt;&amp;<span class="number">2</span></span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">:err</span><br><span class="line"><span class="built_in">echo</span> Please check your csv. Commit aborted! <span class="number">1</span>&gt;&amp;<span class="number">2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%errorlevel%</span>! <span class="number">1</span>&gt;&amp;<span class="number">2</span></span><br><span class="line"><span class="built_in">echo</span> error message:  <span class="number">1</span>&gt;&amp;<span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> /f "delims=" <span class="variable">%%x</span> <span class="keyword">in</span> (<span class="variable">%TSVN_TEMP_FILE%</span>) <span class="keyword">do</span> (<span class="built_in">echo</span> <span class="variable">%%x</span> <span class="number">1</span>&gt;&amp;<span class="number">2</span>)</span><br><span class="line"><span class="keyword">exit</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>具体配置流程：</p><p><img src="流程_1" alt=""></p><p><img src="流程_2" alt=""></p><p><img src="流程_3" alt=""></p><p><img src="流程_4" alt=""></p><p><img src="流程_5" alt=""></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SVN之Hook&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="想就做" scheme="http://yoursite.com/tags/%E6%83%B3%E5%B0%B1%E5%81%9A/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d 之 控制台</title>
    <link href="http://yoursite.com/2021/10/29/Cocos2d%20%E4%B9%8B%20%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
    <id>http://yoursite.com/2021/10/29/Cocos2d%20%E4%B9%8B%20%E6%8E%A7%E5%88%B6%E5%8F%B0/</id>
    <published>2021-10-29T15:15:16.000Z</published>
    <updated>2021-10-30T14:37:14.203Z</updated>
    
    <content type="html"><![CDATA[<p>Cocos2d 之 控制台</p><a id="more"></a><p><br></p><h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>游戏全球化版本开发过程中，需要在控制台显示各种国家语言，而不是一堆乱码或？。</p><p><br><br><br></p><h1 id="探寻"><a href="#探寻" class="headerlink" title="探寻"></a>探寻</h1><h2 id="字符集-amp-代码页"><a href="#字符集-amp-代码页" class="headerlink" title="字符集 &amp; 代码页"></a>字符集 &amp; 代码页</h2><p>关于字符集与字符编码可跳转文章 - <a href="http://www.lt-tree.com/2021/10/26/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/" target="_blank" rel="noopener">字符集与字符编码</a></p><p>MultiByteToWideChar 和 WideCharToMultiByte 是用于在 ANSI 和 Unicode 之间转换字符的 Unicode 和字符集函数。 这些函数可能会导致安全风险，因为它们以不同的方式对输入和输出缓冲区的元素进行计数。 例如， MultiByteToWideChar 采用以字节为单位计算的输入缓冲区，并将转换后的字符放入采用 Unicode 字符大小的缓冲区。 当应用程序使用此函数时，它必须正确调整缓冲区大小，以避免缓冲区溢出。<br><a href="https://docs.microsoft.com/zh-cn/windows/win32/intl/security-considerations--international-features" target="_blank" rel="noopener">关于Windows的字符转换函数</a></p><p><a href="https://docs.microsoft.com/en-us/windows/win32/intl/code-page-identifiers" target="_blank" rel="noopener">常用代码页</a></p><table><thead><tr><th></th><th>编码格式</th><th></th><th>代码页</th><th></th></tr></thead><tbody><tr><td>GB2312</td><td>936</td><td></td><td></td><td></td></tr><tr><td>BIG5</td><td>950</td><td></td><td></td><td></td></tr><tr><td>UTF-16/Unicode</td><td>1200</td><td></td><td></td><td></td></tr><tr><td>UTF-8</td><td>65001</td><td></td><td></td></tr></tbody></table><p>在Windows控制台，可以通过 chcp xxx 调整代码页（仅限当前窗口有效，若要永久修改，需要修改注册表）<br>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REM 当前代码页修改为UTF8</span><br><span class="line">chcp 65001</span><br></pre></td></tr></table></figure><p><br></p><h2 id="Cocos2d-控制台"><a href="#Cocos2d-控制台" class="headerlink" title="Cocos2d 控制台"></a>Cocos2d 控制台</h2><p>控制台的开启与参数的调整，都是看Windows API的支持。</p><p>创建与释放</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AllocConsole();</span><br><span class="line">FreeConsole();</span><br></pre></td></tr></table></figure><p>控制台函数可参考： <a href="https://docs.microsoft.com/zh-cn/windows/console/console-functions" target="_blank" rel="noopener">Microsoft控制台函数</a></p><p>比如，关闭按钮禁止点击（这里面的枚举，自行查阅代码）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DeleteMenu(GetSystemMenu(GetConsoleWindow(), FALSE), SC_CLOSE, MF_BYCOMMAND);</span><br><span class="line">DrawMenuBar(GetConsoleWindow());</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>最终实际操作，就是将Cocos2d唤起的控制台中代码页调整为UTF8（65001）</p><p>在创建控制台后</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">////////// main.cpp</span></span><br><span class="line"></span><br><span class="line">AllocConsole();</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">SetConsoleCP(<span class="number">65001</span>);</span><br><span class="line">SetConsoleOutputCP(<span class="number">65001</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>此时，代码页已被修改为 UTF8；但是，仅仅是输出的修改；在向控制台传输的部分也需要同步去调整，就是上文所说的关于 MultiByteToWideChar 与 WideCharToMultiByte 部分。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">////////// CCConsole.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">MultiByteToWideChar(CP_UTF8, <span class="number">0</span>, tempBuf, <span class="number">-1</span>, wszBuf, <span class="keyword">sizeof</span>(wszBuf));</span><br><span class="line">OutputDebugStringW(wszBuf);</span><br><span class="line"><span class="comment">// // 将WideCharToMultiByte转换注释掉</span></span><br><span class="line"><span class="comment">// WideCharToMultiByte(CP_ACP, 0, wszBuf, -1, tempBuf, sizeof(tempBuf), nullptr, FALSE);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, tempBuf);</span><br></pre></td></tr></table></figure><p>问题：</p><ul><li>不支持泰文的显示<ul><li>发现通过代码页修改为65001，无法显示泰文</li><li>临时方案：可以通过输出到本地文件，获取内容</li></ul></li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cocos2d 之 控制台&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="想就做" scheme="http://yoursite.com/tags/%E6%83%B3%E5%B0%B1%E5%81%9A/"/>
    
      <category term="cocos2d" scheme="http://yoursite.com/tags/cocos2d/"/>
    
  </entry>
  
  <entry>
    <title>小脚本之检测超规文件</title>
    <link href="http://yoursite.com/2021/10/29/%E5%B0%8F%E8%84%9A%E6%9C%AC%E4%B9%8B%E6%A3%80%E6%B5%8B%E8%B6%85%E8%A7%84%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2021/10/29/%E5%B0%8F%E8%84%9A%E6%9C%AC%E4%B9%8B%E6%A3%80%E6%B5%8B%E8%B6%85%E8%A7%84%E6%96%87%E4%BB%B6/</id>
    <published>2021-10-29T12:51:35.000Z</published>
    <updated>2021-10-30T14:43:51.386Z</updated>
    
    <content type="html"><![CDATA[<p>python脚本，检测不符合规则的文件。</p><a id="more"></a><p><br></p><h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>热更工作流的一个问题。<br>美术会交付策划未压缩的图片/视频，策划不检查直接提交，在审核更新资源的时候发现不合规资源，打回美术/策划压缩调整。</p><p>其他问题：</p><ul><li>检查不合规文件，需要开发遍历每条提交记录的文件，并判断是否合规；不同用途的文件是否合规的标准不同</li><li>现有环境下存在一些不合规的文件（之前开发疏忽，已更新到线上环境）</li></ul><p><br><br><br></p><h1 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h1><p>不合规文件特点：</p><ul><li>不同用途（文件夹下）的文件，规范不同</li><li>可以通用的根据大小来判断合规性</li><li>部分不合规的文件需要过滤掉（已经在线上了，不需要列出来）</li></ul><p>最终的设计思路：</p><ol><li>遍历所有文件，将超过阈值的文件全部列出</li><li>阈值可以动态调整<ul><li>所属文件夹</li><li>具体文件名</li><li>文件后缀</li></ul></li><li>可以设定缓存文件，若文件在缓存中，可以被过滤，不会列出</li></ol><p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######################################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   File: 检查文件大小</span></span><br><span class="line"><span class="comment">#   Version: v0.0.1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   </span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> join, getsize, isdir, splitext</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"><span class="comment">## </span></span><br><span class="line"><span class="comment">##  一些配置项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1KB = 1024</span></span><br><span class="line"><span class="comment"># 1MB = 1024 * 1024 = 1048576</span></span><br><span class="line"><span class="comment"># 5MB = 5 * 1024 * 1024</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认大小(byte, 1KB = 1024b)</span></span><br><span class="line">FILE_DEFAULT_SIZE = <span class="number">1048576</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 特殊大小限制（以文件夹为单位）</span></span><br><span class="line">SPECIAL_FOLDER_SIZE_MAP = &#123;</span><br><span class="line">    <span class="comment"># 'folder path(without \\ suffix)' : size,</span></span><br><span class="line">    <span class="string">'.\\Assets\\asset\\bg'</span> : <span class="number">2097152</span>,         <span class="comment">#2MB</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 特殊大小限制（以文件为单位）</span></span><br><span class="line">SPECIAL_FILE_SIZE_MAP = &#123;</span><br><span class="line">    <span class="comment"># 'file path' : size,</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略的文件后缀</span></span><br><span class="line">IGNORE_FILE_SUFFIX_LIST = [</span><br><span class="line">    <span class="comment"># '.suffix',</span></span><br><span class="line">    <span class="string">'.exe'</span>,</span><br><span class="line">    <span class="string">'.dll'</span>,</span><br><span class="line">    <span class="string">'.animxml'</span>,</span><br><span class="line">    <span class="string">'.ttf'</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原始路径</span></span><br><span class="line">ORIGINAL_PATH = <span class="string">".\\Assets\\"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 缓存文件</span></span><br><span class="line">STORAGE_FILE_PATH = <span class="string">".\\checkFileSizeTemp.json"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否生成缓存文件</span></span><br><span class="line">IS_GENERATE_STORAGE_FILE = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">needCheckFile</span><span class="params">(file_path, storage_map)</span>:</span></span><br><span class="line">    <span class="string">""" Check is file need to calculate size</span></span><br><span class="line"><span class="string">        1. is file suffix in IGNORE_FILE_SUFFIX_LIST</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        file_path: string</span></span><br><span class="line"><span class="string">            file path(include suffix)</span></span><br><span class="line"><span class="string">        storage_map: map&lt;file_path, file info&gt;</span></span><br><span class="line"><span class="string">            need be ignore file path</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        returns:</span></span><br><span class="line"><span class="string">            boolean: is file need be checked</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    file_cfg = splitext(file_path)</span><br><span class="line">    <span class="keyword">if</span> file_cfg[<span class="number">1</span>] <span class="keyword">in</span> IGNORE_FILE_SUFFIX_LIST:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> file_path <span class="keyword">in</span> storage_map.keys():</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDefaultSize</span><span class="params">(file_path, folder_path)</span>:</span></span><br><span class="line">    <span class="string">""" Get default standard size(byte)</span></span><br><span class="line"><span class="string">        1. get size by SPECIAL_FILE_SIZE_MAP and file path</span></span><br><span class="line"><span class="string">        2. get size by SPECIAL_FOLDER_SIZE_MAP and belong folder</span></span><br><span class="line"><span class="string">        3. get size by FILE_DEFAULT_SIZE direc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        file_path: string</span></span><br><span class="line"><span class="string">            file path(include suffix)</span></span><br><span class="line"><span class="string">        folder_path: string</span></span><br><span class="line"><span class="string">            folder_path</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        returns:</span></span><br><span class="line"><span class="string">            int: file standrd size(byte)</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    size = SPECIAL_FILE_SIZE_MAP.get(file_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> size:</span><br><span class="line">        size = SPECIAL_FOLDER_SIZE_MAP.get(folder_path, FILE_DEFAULT_SIZE)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> size</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">notFileSizeStandard</span><span class="params">(file_path, folder_path)</span>:</span></span><br><span class="line">    <span class="string">""" Check is file size standard</span></span><br><span class="line"><span class="string">        compare file size and file standard size</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        file_path: string</span></span><br><span class="line"><span class="string">            file path(include suffix)</span></span><br><span class="line"><span class="string">        folder_path: string</span></span><br><span class="line"><span class="string">            folder_path</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        returns:</span></span><br><span class="line"><span class="string">            boolean: is file size not standard</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    default_size = getDefaultSize(file_path, folder_path)</span><br><span class="line">    file_size = getsize(file_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(file_path + ' , ' + str(file_size) + ', ' + str(default_size) + '  ==  ' + str(file_size &gt;= default_size))</span></span><br><span class="line">    <span class="keyword">return</span> file_size &gt;= default_size, file_size, default_size</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">walkFolders</span><span class="params">(folder_path, storage_map)</span>:</span></span><br><span class="line">    <span class="string">""" Check is file size standard</span></span><br><span class="line"><span class="string">        compare file size and file standard size</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        folder_path: string</span></span><br><span class="line"><span class="string">            folder_path</span></span><br><span class="line"><span class="string">        storage_map: map&lt;file path, file info&gt;</span></span><br><span class="line"><span class="string">            need be ignore file path</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        returns:</span></span><br><span class="line"><span class="string">            dict[fileInfo]: illegal file info map</span></span><br><span class="line"><span class="string">                dict[fileInfo]</span></span><br><span class="line"><span class="string">                    path: file path</span></span><br><span class="line"><span class="string">                    size: file size</span></span><br><span class="line"><span class="string">                    standard: file standard size</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    illegal_file_map = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> file_path <span class="keyword">in</span> os.listdir(folder_path):</span><br><span class="line">        temp_path = join(folder_path, file_path)</span><br><span class="line">        <span class="keyword">if</span> isdir(temp_path):</span><br><span class="line">            temp_map = walkFolders(temp_path, storage_map)</span><br><span class="line">            illegal_file_map.update(temp_map)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> needCheckFile(temp_path, storage_map):</span><br><span class="line">                notStandard, file_size, standard_size = notFileSizeStandard(temp_path, folder_path)</span><br><span class="line">                <span class="keyword">if</span> notStandard:</span><br><span class="line">                    file_info = &#123;&#125;</span><br><span class="line">                    file_info[<span class="string">"path"</span>] = temp_path</span><br><span class="line">                    file_info[<span class="string">"size"</span>] = file_size</span><br><span class="line">                    file_info[<span class="string">"standard"</span>] = standard_size</span><br><span class="line"></span><br><span class="line">                    illegal_file_map[temp_path] = file_info</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> illegal_file_map</span><br><span class="line">                </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveStorageFileMap</span><span class="params">(illegal_file_map, storage_file_map)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> IS_GENERATE_STORAGE_FILE:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    storage_file_map.update(illegal_file_map)</span><br><span class="line">    <span class="keyword">with</span> codecs.open(STORAGE_FILE_PATH,<span class="string">'w'</span>, <span class="string">'utf-8'</span>) <span class="keyword">as</span> outf:</span><br><span class="line">        json.dump(storage_file_map, outf, ensure_ascii=<span class="keyword">False</span>)</span><br><span class="line">        outf.write(<span class="string">'\n'</span>)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loadStorageFileMap</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(STORAGE_FILE_PATH):</span><br><span class="line">        print(<span class="string">"[WARNING] storage file not exist!"</span>)</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    file_map = &#123;&#125;</span><br><span class="line">    <span class="keyword">with</span> codecs.open(STORAGE_FILE_PATH, <span class="string">"r"</span>, <span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            temp = json.loads(line)</span><br><span class="line">            file_map.update(temp)</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> file_map</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">regularOutputResult</span><span class="params">(illegal_file_map)</span>:</span></span><br><span class="line">    print(<span class="string">"\n\n-- Result: "</span>)</span><br><span class="line">    <span class="keyword">if</span> len(illegal_file_map) &lt;= <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"\n==========&gt; Success! &lt;==========\n\n"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"\n==========&gt; !Error! &lt;=========="</span>)</span><br><span class="line">        print(<span class="string">"==========&gt; !Error! &lt;=========="</span>)</span><br><span class="line">        print(<span class="string">"==========&gt; !Error! &lt;==========\n"</span>)</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> illegal_file_map.items():</span><br><span class="line">            size = v[<span class="string">'size'</span>] / <span class="number">1024</span></span><br><span class="line">            <span class="keyword">if</span> size / <span class="number">1024</span> &gt; <span class="number">0</span>:</span><br><span class="line">                print(<span class="string">'\t'</span> + k + <span class="string">'  |  '</span> + str(size / <span class="number">1024</span>) + <span class="string">'MB'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'\t'</span> + k + <span class="string">'  |  '</span> + str(size) + <span class="string">'KB'</span>)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"\n==========&gt; !Error! &lt;=========="</span>)</span><br><span class="line">        print(<span class="string">"==========&gt; !Error! &lt;=========="</span>)</span><br><span class="line">        print(<span class="string">"==========&gt; !Error! &lt;==========\n"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(dir)</span>:</span></span><br><span class="line">    print(<span class="string">"=================================================="</span>)</span><br><span class="line">    print(<span class="string">"Start"</span>)</span><br><span class="line">    print(<span class="string">"-- Config: "</span>)</span><br><span class="line">    print(<span class="string">"\tOri Path: "</span> + str(dir))</span><br><span class="line">    print(<span class="string">"\tStorage Path: "</span> + str(STORAGE_FILE_PATH))</span><br><span class="line">    print(<span class="string">"\tIs Generate Storage File: "</span> + str(IS_GENERATE_STORAGE_FILE))</span><br><span class="line"></span><br><span class="line">    storage_file_map = loadStorageFileMap()</span><br><span class="line">    <span class="comment"># print(json.dumps(storage_file_map, indent=4, ensure_ascii=False, encoding='utf-8'))</span></span><br><span class="line"></span><br><span class="line">    illegal_file_map = walkFolders(dir, storage_file_map)</span><br><span class="line">    regularOutputResult(illegal_file_map)</span><br><span class="line">    saveStorageFileMap(illegal_file_map, storage_file_map)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main(ORIGINAL_PATH)</span><br></pre></td></tr></table></figure></p><p>使用流程：<br>初次使用：</p><ol><li>找到一个稳定版本，执行缓存模式，缓存当前已在线上的不合规文件</li><li>动态配置一些阈值</li></ol><p>后续使用：</p><ol><li>在合并完资源后，执行脚本</li><li>若存在不合规文件，则列出具体路径，通知策划调整；若无不合规文件，显示Success。</li></ol><p><br><br><br></p><h1 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h1><p>依旧存在改进的方向。</p><p>按流程来说</p><ol><li>美术原图</li><li>策划修正</li><li>开发检查</li></ol><p>如果出现问题：</p><ol><li>美术原图</li><li>策划修正</li><li>开发检查，不合规，反馈策划</li><li>策划再次修正</li><li>开发检查，合规</li></ol><p>那么，既然我们开发检查的内容可以脚本化，即自动化；那完全可以前置检查，让策划无法提交不合规的文件。<br>这个就涉及到Hook，相关内容可参考文章 SVN之Hook</p><p><br><br><br><br><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python脚本，检测不符合规则的文件。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="想就做" scheme="http://yoursite.com/tags/%E6%83%B3%E5%B0%B1%E5%81%9A/"/>
    
  </entry>
  
  <entry>
    <title>字符集与字符编码</title>
    <link href="http://yoursite.com/2021/10/26/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    <id>http://yoursite.com/2021/10/26/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</id>
    <published>2021-10-26T14:35:16.000Z</published>
    <updated>2021-10-26T14:41:25.761Z</updated>
    
    <content type="html"><![CDATA[<p>全球化，多语言，Unicode，UTF8</p><a id="more"></a><p><br></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在做游戏的全球化时，遇到的一个问题。</p><p>玩家名称可以混杂多国语言，但是要进行宽度检测。不同国家的字符宽度不同，比如中文、韩文、日文算2个宽度，其他算1个宽度。根据输入的多语言文本，准确计算宽度。</p><p>例如：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">你好 - <span class="number">4</span></span><br><span class="line">สวัสดี - <span class="number">6</span></span><br><span class="line">こんにちは - <span class="number">10</span></span><br><span class="line">Привет - <span class="number">6</span></span><br><span class="line">안녕 - <span class="number">4</span></span><br><span class="line">Hello - <span class="number">5</span></span><br><span class="line">Olá - <span class="number">3</span></span><br><span class="line">你好สวัสดีこんにちはПривет안녕HelloOlá 宽度为 <span class="number">38</span></span><br></pre></td></tr></table></figure><p>这里泰文比较特殊一些，สวัสดี 在存储时会转为 สว◌ัสด◌ี，unicode中没有 วั 与 ดี 。</p><p><br></p><p><br></p><h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><p>字符集即字符的集合。<br>字符是各种文字和符号的总称，包含各国文字、标点符号、图形符号、数字等。</p><p>常见的字符集</p><table><thead><tr><th>字符集名称</th><th>别称</th><th>特点</th><th>技术特征</th></tr></thead><tbody><tr><td>ASCII</td><td>American Standard Code for Information Interchange, 美国信息互换标准编码</td><td>主要用于显示现代英语和其他西欧语言，是最通用的单字节编码系统</td><td>7bits表示一个字符，共128个字符（0-127），其中32-126是可打印字符</td></tr><tr><td>Unicode</td><td>Universal Multiple-Octet Coded Character Set, 通用多八位编码字符集</td><td>支持现今世界各种不同语言的书面文本的交换、处理、显示；对每种语言中的每一个字符都设定了统一且唯一的二进制编码</td><td>使用十六进制数字，在书写时前面加上前缀 “U+”</td></tr><tr><td>UTF-8</td><td>8-bit Unicode Transformation Format, 将Unicode转成8bit格式 / 万国码</td><td>便于不同的计算机之间使用网络传输不同语言和编码文字，使得双字节的Unicode能在现存处理单字节系统上正确传输</td><td>UTF-8是一种针对Unicode的可变长字符编码；用1-6个字节编码Unicode字符，对应还有 UTF-16 与 UTF-32</td></tr><tr><td>GB2312</td><td>信息交换用汉字编码字符集·基本集</td><td>中国国家标准的简体中文字符集，于1981.5.1日实施</td><td>1. 区位码（分区表示）；对所收录的汉字进行分区处理，每区含有94个汉字/符号。 2. 双字节表示，即两个字节来编码一个字，高位字节与低位字节有各自范围</td></tr><tr><td>GB18030</td><td>信息交换用汉字编码字符集基本集的扩充</td><td>中国政府于2000年3月17日发布的汉字编码国家标准，2001年8月31日后在中国市场上发布的软件必须符合本标准；解决了汉字、日文假名、朝鲜语和中国少数民族文字组成的大字符集计算机编码问题。与 Unicode 3.0兼容，并且与 GB2312兼容</td><td>采用 单字节、双字节、四字节三种方式对字符编码。单字节部分使用 0x00-0x7F（与ASCII码对应）</td></tr><tr><td>BIG5</td><td>大五码/五大码</td><td>收录13053个中文字，在中国台湾使用广泛</td><td>双字节表示，即两个字节来编码一个字，高位字节与低位字节有各自范围</td></tr></tbody></table><p><br></p><h2 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h2><p>为什么需要编码？</p><ul><li>为了便于存储与传输，需要一个统一的规则来存取信息。（某段二进制代表什么信息）</li></ul><p>如何进行字符编码？</p><ul><li>编码转码所需元素：<ul><li>字库表，所有可读/可写的字符数据库</li><li>编码字符集，表示一个字符在字库表中的位置</li><li>字符编码，编码字符集与字库表的映射关系</li></ul></li><li>过程<ul><li>编码<ol><li>拿到一个字符准备存储</li><li>通过字符编码得到在编码字符集中值</li><li>将得到值存储</li></ol></li><li>转码<ul><li>得到要显示的值</li><li>通过字符编码得到对应字库中的值</li><li>将得到值进行显示</li></ul></li></ul></li><li>通过字符编码可以节省字库表大小</li></ul><p><br></p><h2 id="Unicode-amp-UTF-8"><a href="#Unicode-amp-UTF-8" class="headerlink" title="Unicode &amp; UTF-8"></a>Unicode &amp; UTF-8</h2><p>UTF-8编码为变长编码，最小编码单位（code unit）为一个字节，每个字节的前1-3个bit为描述性部分，后面的为实际序号部分。</p><ul><li>字节以 0 开头，当前字符为单字节字符，占用一个字节的空间；0之后的所有部分代表在Unicode中的序号。</li><li>字节以 10 开头，当前字符为多字节字符，当前字节为多字节字符的第二字节，10 后所有部分和第一字节的剩余部分共同组成在Unicode中的序号。</li><li>字节以 110 开头，当前字符为双字节字符，当前字节为双字节字符的第一字节，110 后所有部分与第二字节剩余部分共同组成在Unicode中的序号。（第二字节以10开头）</li><li>字节以 1110 开头，当前字符为三字节字符，当前字节为三字节字符的第一字节，1110 后所有部分与第二字节剩余部分第三字节剩余部分共同组成在Unicode中的序号。（第二字节与第三字节均以10开头）</li></ul><p>计划</p><table><thead><tr><th>字节</th><th>标准格式</th><th>容纳位数</th><th>16进制范围</th></tr></thead><tbody><tr><td>单字节</td><td>0xxx xxxx</td><td>0-7</td><td>0x0000 - 0x007F</td></tr><tr><td>双字节</td><td>110x xxxx 10xx xxxx</td><td>8-11</td><td>0x0080 - 0x07FF</td></tr><tr><td>三字节</td><td>1110 xxxx 10xx xxxx 10xx xxxx</td><td>12-16</td><td>0x0800 - 0xFFFF</td></tr></tbody></table><p>实际应用</p><table><thead><tr><th>实际字符</th><th>在Unicode字库中十六进制</th><th>在Unicode字库中二进制</th><th>UTF-8编码后的二进制</th><th>UTF-8编码后十六进制</th></tr></thead><tbody><tr><td>H</td><td>0048</td><td>100 1000</td><td>0100 1000</td><td>48</td></tr><tr><td>Ĉ</td><td>0108</td><td>1 0000 1000</td><td>1100 0100 1000 1000</td><td>C4 88</td></tr><tr><td>你</td><td>4F60</td><td>100 1111 0110 0000</td><td>1110 0100 1011 1101 1010 0000</td><td>E4 BD A0</td></tr></tbody></table><p><br></p><h2 id="Lua-amp-Unicode"><a href="#Lua-amp-Unicode" class="headerlink" title="Lua &amp; Unicode"></a>Lua &amp; Unicode</h2><p>Lua是否支持Unicode的呢？<br>在官网FAQ中，有一些讨论： <a href="http://lua-users.org/wiki/LuaUnicode" target="_blank" rel="noopener">Can I use unicode strings? or Does Lua support unicode?</a><br>主要意思就是Lua并不知道存储/处理的是否为Unicode，但Lua字符串是一个任意序列的字节序列，可以存储任意二进制的数据，包括Unicode；然后根据处理需求可自行扩展相应逻辑。</p><p>处理UTF-8的第三方文件：</p><ul><li><a href="https://github.com/starwing/luautf8" target="_blank" rel="noopener">UTF-8 module for Lua 5.x</a></li><li><a href="https://github.com/alexander-yakushev/awesompd/blob/master/utf8.lua" target="_blank" rel="noopener">awesompd/utf8.lua</a></li><li><a href="https://github.com/Stepets/utf8.lua" target="_blank" rel="noopener">Stepets/utf8.lua</a></li></ul><p><br></p><h1 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h1><p>按照需求，可定流程</p><ol><li>求出字符串的unicode值</li><li>查找unicode值区间，判断所属国家</li><li>根据国家来进行不同长度计算</li></ol><p>PS: 整个utf8相关方法，在文章最下方</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- http://www.unicode.org/charts/nameslist/</span></span><br><span class="line"><span class="keyword">local</span> UnicodeNationRangeList = &#123;</span><br><span class="line">    &#123;tip = <span class="string">"数字"</span>, range = &#123;&#123;<span class="number">0x30</span>, <span class="number">0x39</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"英文"</span>, range = &#123;&#123;<span class="number">0x41</span>, <span class="number">0x5A</span>&#125;, &#123;<span class="number">0x61</span>, <span class="number">0x7a</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"中文"</span>, range = &#123;&#123;<span class="number">0x2E80</span>, <span class="number">0x2FDF</span>&#125;, &#123;<span class="number">0x3400</span>, <span class="number">0x4dbf</span>&#125;, &#123;<span class="number">0x4E00</span>, <span class="number">0x9FFF</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"韩文"</span>, range = &#123;&#123;<span class="number">0x1100</span>, <span class="number">0x11FF</span>&#125;, &#123;<span class="number">0x3130</span>, <span class="number">0x318F</span>&#125;, &#123;<span class="number">0xAC00</span>, <span class="number">0xD7AF</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"日文"</span>, range = &#123;&#123;<span class="number">0x3040</span>, <span class="number">0x30FF</span>&#125;, &#123;<span class="number">0x31F0</span>, <span class="number">0x31FF</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"泰文"</span>, range = &#123;&#123;<span class="number">0x0E00</span>, <span class="number">0x0E7F</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"俄文"</span>, range = &#123;&#123;<span class="number">0x0400</span>, <span class="number">0x052F</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"法文/德文"</span>, range = &#123;&#123;<span class="number">0x00C0</span>, <span class="number">0x00FF</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;tip = <span class="string">"阿拉伯文"</span>, range = &#123;&#123;<span class="number">0x0600</span>, <span class="number">0x06FF</span>&#125;, &#123;<span class="number">0x0750</span>, <span class="number">0x077F</span>&#125;&#125;&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 分析字符属于哪个国家文字</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    c: string</span></span><br><span class="line"><span class="comment">        字符</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return: number, string</span></span><br><span class="line"><span class="comment">        number: 国家索引</span></span><br><span class="line"><span class="comment">        string: 国家简述</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Xutf8.analyseCharBelong</span><span class="params">(c)</span></span></span><br><span class="line">    <span class="keyword">local</span> nationIdx = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">local</span> tip = <span class="string">"不识别"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> Xutf8.<span class="built_in">len</span>(c) ~= <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">return</span> nationIdx, tip <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> hexStr, hexStrArr, hexValArr = Xutf8.utf8_to_unicode(c)</span><br><span class="line">    <span class="keyword">local</span> valueC = hexValArr[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, cfg <span class="keyword">in</span> <span class="built_in">ipairs</span>(UnicodeNationRangeList) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> rangeList = cfg.range</span><br><span class="line">        <span class="keyword">for</span> _, rangeCfg <span class="keyword">in</span> <span class="built_in">ipairs</span>(rangeList) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> valueC &gt;= rangeCfg[<span class="number">1</span>] <span class="keyword">and</span> valueC &lt;= rangeCfg[<span class="number">2</span>] <span class="keyword">then</span></span><br><span class="line">                nationIdx = i</span><br><span class="line">                tip = cfg.tip</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> nationIdx ~= <span class="number">-1</span> <span class="keyword">then</span> <span class="keyword">break</span> <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nationIdx, tip</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[DESC: 返回字符串长度</span></span><br><span class="line"><span class="comment">        中文、日文、韩文，一个字符算两个长度</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        注意：有些会占据双字节，所以长度会有所偏差</span></span><br><span class="line"><span class="comment">            สวัสดี = สว◌ัสด◌ี  -- 长度为6</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    str: string</span></span><br><span class="line"><span class="comment">        字符串</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    return:</span></span><br><span class="line"><span class="comment">        int - 返回具体长度</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Xutf8.getSpecialLength</span><span class="params">(s)</span></span></span><br><span class="line">    <span class="keyword">local</span> l = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> realLen = Xutf8.<span class="built_in">len</span>(s)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, realLen <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> c = Xutf8.<span class="built_in">sub</span>(s, i, i)</span><br><span class="line">        <span class="keyword">local</span> idx, tip = Xutf8.analyseCharBelong(c)</span><br><span class="line">        <span class="keyword">if</span> idx == <span class="number">3</span> <span class="keyword">or</span> idx == <span class="number">4</span> <span class="keyword">or</span> idx == <span class="number">5</span> <span class="keyword">then</span></span><br><span class="line">            l = l + <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l = l + <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><br></p><p><br></p><hr><p>参考文章:</p><ul><li><a href="https://www.cnblogs.com/yuanzhenliu/p/8494203.html" target="_blank" rel="noopener">各种语系的unicode对应以及local编码方式</a></li><li><a href="http://www.unicode.org/charts/nameslist/" target="_blank" rel="noopener">Unicode官网字符映射</a></li><li><a href="http://lua-users.org/wiki/LuaUnicode" target="_blank" rel="noopener">Lua是否支持Unicode</a></li><li><a href="http://cenalulu.github.io/linux/character-encoding/" target="_blank" rel="noopener">搞清字符集与字符编码</a></li><li><a href="https://www.ltool.net/characters-to-unicode-converter-in-simplified-chinese.php" target="_blank" rel="noopener">Unicode字符查询</a></li></ul><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;全球化，多语言，Unicode，UTF8&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="想就做" scheme="http://yoursite.com/tags/%E6%83%B3%E5%B0%B1%E5%81%9A/"/>
    
  </entry>
  
  <entry>
    <title>碎碎念之机器人抽血</title>
    <link href="http://yoursite.com/2021/10/25/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E4%B9%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%BD%E8%A1%80/"/>
    <id>http://yoursite.com/2021/10/25/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E4%B9%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%BD%E8%A1%80/</id>
    <published>2021-10-25T13:11:16.000Z</published>
    <updated>2021-10-26T14:44:13.928Z</updated>
    
    <content type="html"><![CDATA[<p>一篇文章引发的思考<br><a href="https://china.huanqiu.com/article/44o1EsgCOHk" target="_blank" rel="noopener">机器人扎针疼不疼？上海首台智能采血机器人在中山医院上岗</a></p><a id="more"></a><p><br></p><p>看到文章，我第一反应是：NB，厉害，又一工种要被取代了吗？ QAQ<br>但紧接着，我会去尝试吗？不，我不会。<br>诶？那…这东西有啥用。</p><p><br></p><p>在我看来，连我都不敢尝试的东西，那基本淘汰了至少50%吧？<br>我自认为</p><ul><li>处于一个敢于尝试的年纪</li><li>从事于一个敢于尝试的行业</li><li>是一个敢于尝试的性格</li></ul><p>所以，连我都不敢尝试，那怎么推广，让大家信任？</p><p>于是，开始在小组内头(hu)脑(si)风(luan)暴(xiang)</p><p>为什么大家会接受不了呢？<br>我们在 不信任 或是 在恐惧 什么事情?</p><p><br></p><p>担忧点：</p><ul><li><p>同为开发者，反而不信任</p><ul><li>自己就是开发者，写的一手lan代码，一堆BUG，如何保证程序不出问题？</li><li>解决：写代码不出BUG最好的解决方案是不写代码，没人能保证程序没问题，我们只能提高出问题的门槛，降低问题产生后的影响。所以大量测试验证。</li></ul></li><li><p>机器不透明，不知道它具体在做什么</p><ul><li><p>不透明的机器外壳，不知道内部行为，更加不安。</p></li><li><p>即使透明，会降低部分不安感，但无法完全消除。</p></li></ul></li><li><p>机器没有情感</p><ul><li>这个理由是，有情感的人，会共情，知道自己的错误会给别人带来痛苦，会约束自己。</li><li>针对情感，如果让一个猴子或者狒狒或者10岁的小孩子学会抽血，敢让它们操作吗？ 不敢，因为它们虽然有情感，但是无法保证是否会暴起。</li></ul></li><li><p>机器没轻没重，无法制止</p><ul><li>器械的威力、动力是很大的，而且无法准确判断自己是否出错，无脑执行。如果发生一些意外，我们可以制止人继续执行，比如推开，逃离等；但是面对机器，它“听不懂”你的话时，还是很危险的。</li><li>那如果有一键制止的按钮在手边，发现异常的时候，直接按下按钮可以终止机器人一切行为。</li></ul></li><li><p>一旦出了问题，无法解决</p><ul><li>当机器出了问题，如何保证后续的任务呢？</li></ul></li></ul><p><br></p><p>根据担忧点，总结下来，一些方案：</p><ol><li>讲解原理（解释机器所做的所有流程，正常情况表现，异常情况表现）</li><li>流程可视化（机器透明，并实时显示正在处理的内容进度及状况）</li><li>可以强制制止（触手可及的按钮，可以一键终止所有行为）</li><li>有紧急保障机制（有专门医务工作室在旁边防备所有可能问题）</li></ol><p>这样一套方案下来，还敢让机器人抽血吗？<br>虽然担忧依旧存在，但是未尝不是不可以一试。</p><p><br></p><p>其实，这些都是让人主动去接受，但是当面前有两个选择，一是传统方案，一是新奇方案；有多少人会选择新奇的方案呢？<br>所以，在现实情况下，依旧需要找到被动需求方案。<br>比如：</p><ol><li>经济限制（机器抽血价格降低）</li><li>时间限制（机器抽血口大于人工口）</li></ol><p>但是，也要尽量降低风险</p><ol><li>限制年龄、健康状况</li><li>多做宣传，让更多人可接受（广告作用）</li></ol><p><br></p><p>最后，总结下来这些方案：</p><ol><li>讲解原理（解释机器所做的所有流程，正常情况表现，异常情况表现）</li><li>流程可视化（机器透明，并实时显示正在处理的内容进度及状况）</li><li>可以强制制止（触手可及的按钮，可以一键终止所有行为）</li><li>有紧急保障机制（有专门医务工作室在旁边防备所有可能问题）</li><li>经济限制（机器抽血价格降低）</li><li>时间限制（机器抽血口大于人工口）</li><li>限制年龄、健康状况</li><li>多做宣传，让更多人可接受（广告作用）</li></ol><p><br></p><p>这些方案下，<br>你，敢于尝试机器抽血吗？</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一篇文章引发的思考&lt;br&gt;&lt;a href=&quot;https://china.huanqiu.com/article/44o1EsgCOHk&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;机器人扎针疼不疼？上海首台智能采血机器人在中山医院上岗&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="瞎分析" scheme="http://yoursite.com/tags/%E7%9E%8E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
